{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/images/HCIP-datacom-1、认识网络设备/S12700E-8.PNG","path":"images/HCIP-datacom-1、认识网络设备/S12700E-8.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/业务报文转发处理流程.PNG","path":"images/HCIP-datacom-1、认识网络设备/业务报文转发处理流程.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/协议报文转发处理流程.PNG","path":"images/HCIP-datacom-1、认识网络设备/协议报文转发处理流程.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/控制平面.PNG","path":"images/HCIP-datacom-1、认识网络设备/控制平面.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/模块连接逻辑图.PNG","path":"images/HCIP-datacom-1、认识网络设备/模块连接逻辑图.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/监控平面.PNG","path":"images/HCIP-datacom-1、认识网络设备/监控平面.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/盒式设备.PNG","path":"images/HCIP-datacom-1、认识网络设备/盒式设备.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/硬件转发.PNG","path":"images/HCIP-datacom-1、认识网络设备/硬件转发.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/确定报文出口（1）.PNG","path":"images/HCIP-datacom-1、认识网络设备/确定报文出口（1）.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/确定报文出口（3）.PNG","path":"images/HCIP-datacom-1、认识网络设备/确定报文出口（3）.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/网络设备逻辑构架.PNG","path":"images/HCIP-datacom-1、认识网络设备/网络设备逻辑构架.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/设备自身发送协议报文处理流程.PNG","path":"images/HCIP-datacom-1、认识网络设备/设备自身发送协议报文处理流程.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/转发信息.PNG","path":"images/HCIP-datacom-1、认识网络设备/转发信息.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/转发平面.PNG","path":"images/HCIP-datacom-1、认识网络设备/转发平面.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-1、认识网络设备/转发报文上行、下行.PNG","path":"images/HCIP-datacom-1、认识网络设备/转发报文上行、下行.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/FIB表中的关键字段.PNG","path":"images/HCIP-datacom-2、IP路由基础/FIB表中的关键字段.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/动态路由协议.PNG","path":"images/HCIP-datacom-2、IP路由基础/动态路由协议.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由回灌.PNG","path":"images/HCIP-datacom-2、IP路由基础/路由回灌.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由度量值.PNG","path":"images/HCIP-datacom-2、IP路由基础/路由度量值.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由的来源.PNG","path":"images/HCIP-datacom-2、IP路由基础/路由的来源.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由表.PNG","path":"images/HCIP-datacom-2、IP路由基础/路由表.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由表中的关键字段.PNG","path":"images/HCIP-datacom-2、IP路由基础/路由表中的关键字段.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由迭代.PNG","path":"images/HCIP-datacom-2、IP路由基础/路由迭代.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-2、IP路由基础/转发表.PNG","path":"images/HCIP-datacom-2、IP路由基础/转发表.PNG","modified":0,"renderable":0},{"_id":"source/images/HCIP-datacom-3、OSPF基础/总结.PNG","path":"images/HCIP-datacom-3、OSPF基础/总结.PNG","modified":0,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/gallery.yml","hash":"eef9b025c2a81fdc714967d0c7b21bed9d55cff5","modified":1683341787109},{"_id":"source/_data/links.yml","hash":"a5e31f35ebb8e1e8811f2e3d957cf4d4835aa2f9","modified":1683341787110},{"_id":"source/about/index.md","hash":"dad1b6fad7df36cc29905d276d78d4166465d533","modified":1683341787118},{"_id":"source/categories/index.md","hash":"b0006184ce9570766e7c7507d20fede1079f4992","modified":1683341787119},{"_id":"source/tags/index.md","hash":"c35ba8af5acf41102909a9f9c1349a24d89f97a6","modified":1683341787155},{"_id":"source/repository/index.md","hash":"aa0948c2499ef10ef9e8711431c3a5ce377de121","modified":1683341787154},{"_id":"source/_posts/Git/删除git所有提交记录.md","hash":"467af25d8129a0bb3ccd4aec82c027c4c7cdc28e","modified":1683341787111},{"_id":"source/_posts/HCIP_datacom/1.HCIP-datacom学习路线规划.md","hash":"14835cf19bf710af291e5475c255ea3f6f4d978b","modified":1683341787112},{"_id":"source/_posts/HCIP_datacom/2.HCIP-datacom 认识网络设备.md","hash":"965ac74c4fde22491dd82579df9773d591ff3e7a","modified":1683341787113},{"_id":"source/_posts/HCIP_datacom/3.HCIP-datacom IP路由基础.md","hash":"0f9ae71a745b6e93617056f8183fc1269c919a45","modified":1683341787114},{"_id":"source/_posts/HCIP_datacom/4.OSPF基础介绍.md","hash":"e01d4db9a9e4b549d94bec63ade24b8bf6ae80d9","modified":1683341787114},{"_id":"source/_posts/Hexo/Hexo Pure主题修改日记.md","hash":"6d006e747e719f690054b28247f410746b3f17d6","modified":1683341787115},{"_id":"source/_posts/Hexo/Pure README.md","hash":"57f14651e4cdf489679e67852a8119b3871f01ec","modified":1683341787116},{"_id":"source/_posts/PowerShell/在PowerShell中使用title命令.md","hash":"c6104ad4b59abe41cd47ded773cb9a2960ebef20","modified":1683341787117},{"_id":"source/images/HCIP-datacom-1、认识网络设备/业务报文转发处理流程.PNG","hash":"7d6aad0b44c38fa80371df4be83436ca99bce1fd","modified":1683341787121},{"_id":"source/images/HCIP-datacom-1、认识网络设备/协议报文转发处理流程.PNG","hash":"b99d406e7434e85bca31a1b433a15ce774a80106","modified":1683341787122},{"_id":"source/images/HCIP-datacom-1、认识网络设备/监控平面.PNG","hash":"1c9cc7c377267b57b5ec553d87ad89878170536a","modified":1683341787126},{"_id":"source/images/HCIP-datacom-1、认识网络设备/盒式设备.PNG","hash":"1216448ebdcf6cf15d28c78a9eb7076bac9e5349","modified":1683341787127},{"_id":"source/images/HCIP-datacom-1、认识网络设备/硬件转发.PNG","hash":"2c1545928d7237a3fa796c6ef510a6347eae88e3","modified":1683341787128},{"_id":"source/images/HCIP-datacom-1、认识网络设备/确定报文出口（1）.PNG","hash":"7e4efa4f9f1c3539142bbc8d4aa9fe5deac4a81a","modified":1683341787129},{"_id":"source/images/HCIP-datacom-1、认识网络设备/确定报文出口（3）.PNG","hash":"c605ee2ff73cebadd05bd62ba410dab6a96335bc","modified":1683341787130},{"_id":"source/images/HCIP-datacom-1、认识网络设备/设备自身发送协议报文处理流程.PNG","hash":"4235ae2c165e542396b3dd01922d0b9e69ff356b","modified":1683341787134},{"_id":"source/images/HCIP-datacom-1、认识网络设备/转发信息.PNG","hash":"18c77f859ddc0f3a205da3070ef366f10a1d76b4","modified":1683341787135},{"_id":"source/images/HCIP-datacom-1、认识网络设备/转发平面.PNG","hash":"cf4b4d5831588a2e671251b355e205e97d19634d","modified":1683341787136},{"_id":"source/images/HCIP-datacom-1、认识网络设备/转发报文上行、下行.PNG","hash":"db321e724c38f82c7fd7bd29c7cc262890d16d8a","modified":1683341787137},{"_id":"source/images/HCIP-datacom-2、IP路由基础/FIB表中的关键字段.PNG","hash":"c5aaa5c3732b16f4ded1bf2a4a5072a07db16b92","modified":1683341787139},{"_id":"source/images/HCIP-datacom-2、IP路由基础/动态路由协议.PNG","hash":"ab13ce31a03d9489ae313704e011349b6d6f7f45","modified":1683341787140},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由度量值.PNG","hash":"528d735fedfb0a8fe9123e6a438b13d84675df30","modified":1683341787143},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由表.PNG","hash":"de86a3d1e61fdb0618a9bc1ecef8b5f92261e647","modified":1683341787146},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由表中的关键字段.PNG","hash":"31390d716f05c4b61bfae8eba01d35128eff5eb5","modified":1683341787146},{"_id":"source/404/index.md","hash":"16638b081d796638565ca462f3c87339b9a0577e","modified":1683341787109},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由迭代.PNG","hash":"099ebe32ff182812d173aae0c857e5df042ea23d","modified":1683341787147},{"_id":"source/images/HCIP-datacom-1、认识网络设备/S12700E-8.PNG","hash":"38a984dc0e07627b2484e08943e321a90786c34d","modified":1683341787121},{"_id":"source/images/HCIP-datacom-1、认识网络设备/模块连接逻辑图.PNG","hash":"25adc3f7c33339ac53583365f35d2569b344bd6a","modified":1683341787125},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由回灌.PNG","hash":"0f5af8bb52a6305146e98d80672806e82cca221c","modified":1683341787141},{"_id":"source/images/HCIP-datacom-2、IP路由基础/转发表.PNG","hash":"a1d63b48ed476c5b3ea95667843524b7b4f43ebc","modified":1683341787148},{"_id":"source/images/HCIP-datacom-1、认识网络设备/控制平面.PNG","hash":"8d9744be1345be4fab9f88068056bf165ea1d577","modified":1683341787124},{"_id":"themes/pure/.gitignore","hash":"204766bf9e2d6fe1fce5b9b02b8edfac2d235830","modified":1683341787160},{"_id":"themes/pure/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1683341787160},{"_id":"themes/pure/README.cn.md","hash":"c14beac2aa2b6e6deb5359600b215d0ae348c0a4","modified":1683341787161},{"_id":"themes/pure/README.md","hash":"94fe451bf920cec6152e7bf9cbff4ccf0af0febc","modified":1683341787162},{"_id":"themes/pure/_config.yml","hash":"a0712f2143eaa72fb9970d8273fa01dfaa825819","modified":1683347280431},{"_id":"themes/pure/package.json","hash":"83641e3411f9e20bb67a09baef60893e69b89ed9","modified":1683341787229},{"_id":"themes/pure/languages/default.yml","hash":"ed342f9158f13fafaf51baa4cc89df4d8aa31720","modified":1683341787174},{"_id":"themes/pure/languages/en.yml","hash":"ed342f9158f13fafaf51baa4cc89df4d8aa31720","modified":1683341787175},{"_id":"themes/pure/languages/zh-CN.yml","hash":"0ca281f2585ec69b1c52e2a6c189f607eb0807ce","modified":1683341787175},{"_id":"themes/pure/languages/zh-TW.yml","hash":"387ad2ca1b2a01dac36f768a6116a2033c3ac142","modified":1683341787176},{"_id":"themes/pure/layout/about.ejs","hash":"4b64515ccc801cc9eba637a1e1909c6c4dd203f6","modified":1683341787219},{"_id":"themes/pure/layout/archive.ejs","hash":"62847ac8ce2562908c01d69f7f6886e24a6ded40","modified":1683341787220},{"_id":"themes/pure/layout/books.ejs","hash":"75cbd31d3551c730e8a683bd5b08562881a95b51","modified":1683341787221},{"_id":"themes/pure/layout/categories.ejs","hash":"9cc7b5f5af40fd7ec641bf0f5a5f8f1ce1ac22d5","modified":1683341787221},{"_id":"themes/pure/layout/category.ejs","hash":"b3f7a96fbaf201a65ed64d509edc29976542fbfb","modified":1683341787222},{"_id":"themes/pure/layout/index.ejs","hash":"44418dbf1fb82392b8e1e4cc910d16a383190433","modified":1683341787223},{"_id":"themes/pure/layout/layout.ejs","hash":"84587362060792a04ccab84c72c738f5141dcb20","modified":1683341787223},{"_id":"themes/pure/layout/links.ejs","hash":"ee90a5f2a9d19bc02682ea3a59177b947f7f7284","modified":1683341787224},{"_id":"themes/pure/layout/page.ejs","hash":"fbfed3c882059e757b23ff57924400683631594b","modified":1683341787224},{"_id":"themes/pure/layout/post.ejs","hash":"fbfed3c882059e757b23ff57924400683631594b","modified":1683341787225},{"_id":"themes/pure/layout/repository.ejs","hash":"0ecad33b6c1ec741eb3b02bb47a3824ac3749d09","modified":1683341787225},{"_id":"themes/pure/layout/tag.ejs","hash":"30d8ddd84c9aa87dff1be02af308097cf4e72448","modified":1683341787226},{"_id":"themes/pure/layout/tags.ejs","hash":"76bc71f3dfd8a5b1aa14b09dec7b460b14f5028a","modified":1683341787226},{"_id":"themes/pure/scripts/thumbnail.js","hash":"4a7385e533f3567758bc995a8be5eb3e7839ac9c","modified":1683341787249},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16dbe91b392ef9debb7abeffde473668d3337eb2","modified":1683341787158},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"a3b49dff53b405dbafe2e96834313fc329710007","modified":1683341787158},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"205a69ba038cf76affcdc1f39d88a8cb8079fc12","modified":1683341787159},{"_id":"themes/pure/_source/404/index.md","hash":"16638b081d796638565ca462f3c87339b9a0577e","modified":1683341787164},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"eef9b025c2a81fdc714967d0c7b21bed9d55cff5","modified":1683341787165},{"_id":"themes/pure/_source/_data/links.yml","hash":"a5e31f35ebb8e1e8811f2e3d957cf4d4835aa2f9","modified":1683341787166},{"_id":"themes/pure/_source/about/index.md","hash":"b72470146e8244886e15715e0cae79b4130305e8","modified":1683341787167},{"_id":"themes/pure/_source/books/index.md","hash":"d913d58987f539ac2ca4cca366ebf42f8b1a03d1","modified":1683341787168},{"_id":"themes/pure/_source/categories/index.md","hash":"b0006184ce9570766e7c7507d20fede1079f4992","modified":1683341787168},{"_id":"themes/pure/_source/links/index.md","hash":"d768332d0d322fe39267dbbda05b931488c27d7e","modified":1683341787170},{"_id":"themes/pure/_source/repository/index.md","hash":"bf2bec13066d7d53fc05a334876eb482e6f95825","modified":1683341787172},{"_id":"themes/pure/_source/tags/index.md","hash":"c35ba8af5acf41102909a9f9c1349a24d89f97a6","modified":1683341787173},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"6a08477890ae45b4c563cf9b356b6d9a934bf1a4","modified":1683345038937},{"_id":"themes/pure/layout/_common/head.ejs","hash":"4135b80c40cc970f9dc30fdd02e4f3e0a8b0af67","modified":1683341787178},{"_id":"themes/pure/layout/_common/header.ejs","hash":"c05070274965692a270c7e07ad9f4dad6f2c5888","modified":1683341787178},{"_id":"themes/pure/layout/_common/script.ejs","hash":"4103f10bd3ad837afbf7edf2215e12dee308c555","modified":1683341787179},{"_id":"themes/pure/layout/_common/social.ejs","hash":"2bcdc7b0ee3905e724b01c2efa1ca6b47a846e1f","modified":1683341787179},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"944913dcabd09c10d3014c844abf851f4dfdba8d","modified":1683341787180},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"4be88eec64fd40c7e1b74df8ccb6c8cdfa3e7a17","modified":1683341787181},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"a8a387f9e7289a6524cf46d7ab76c34fff37f4bf","modified":1683341787183},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"15ebb5d7cc3f07e6bf5ffa783c3d2feabd252fc1","modified":1683341787183},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"513892fae41de4e68963c95a9358285714274bb4","modified":1683341787184},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"01fabc035fe48a494581f5680ed23f355e0e59ce","modified":1683341787184},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"db8cba32bf6655a8d21fe8c8ccd0695b049e1d4c","modified":1683341787185},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"c196b54f92eff017a48e02bacc029dd82edc8cf9","modified":1683341787185},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"47bbb53fe9cca05928c45782c6897c8a94d597ff","modified":1683341787186},{"_id":"themes/pure/layout/_partial/article-copy-code.ejs","hash":"612b0715d2e9d40431af729fe5e8bcffde3dece4","modified":1683341787186},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"8af3bcfc07c344cefa0655dbe83f3c1a55954899","modified":1683341787187},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"c5d1add53ce45df5f851f19023b2e4f16dad43ef","modified":1683341787187},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"cc450ee5638f180332b3c4b747c5337b89d5a0c8","modified":1683341787188},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"17787edc304543c8658c7f51076022bda6ad227d","modified":1683341787196},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"1d90de80d5eb2b10be6cad6fa0bfb465cbc5c9f1","modified":1683341787197},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"a6662f79f7fd6f1cc9b5180672ba8e1d0192fbe2","modified":1683341787197},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"db2967c6902ceb67caa70364935ef3441b10432f","modified":1683341787208},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"d5c98ab345952bb11d9ee69a9c1e3432b6760c55","modified":1683341787209},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"6e671c659b282b690a5d61e842b5d5f38dced6d7","modified":1683341787210},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"4558b5713926735d874deb14d8b21ed2e597b714","modified":1683341787210},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"7a64d98212769423425102a441fca52eb6930fff","modified":1683341787211},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"a464706b7a903e25d34b104bdfb298b260abc132","modified":1683341787211},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"42b6602f478c9afa4e462716dcfcc76875c0df7d","modified":1683341787212},{"_id":"themes/pure/layout/_script/search.ejs","hash":"2b784d15581df4309f56682896b725da7d44fcdd","modified":1683341787212},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"89848cc8e0190ca76cc26d42c6880a23e370702e","modified":1683341787213},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"5e9a5cc9bdc05fabf939db494c3937cc0df48a72","modified":1683341787213},{"_id":"themes/pure/layout/_search/index.ejs","hash":"2c1f06dac5710e5fd073f3e5739545f3f6a0a56f","modified":1683341787214},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"14b1ec0bdb911ab6d92046c78d371264afc4fb19","modified":1683341787214},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"dc548a83c33b5a598683bf2e1cb723bc3be4a76b","modified":1683341787215},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"b250fb0f63286f9648cd8bf428bed6a88901b481","modified":1683341787216},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"9811bab46dcf436c6d05ae78acd62bc25751df78","modified":1683341787216},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"83c8ce4b099951d58b2be5006f6963afbbe7d4e9","modified":1683341787217},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8932ce5283a7e6a356c6840104a7d6984f2ea986","modified":1683341787217},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"24823a881a6c15fd846c7f4780eb90fe869a813b","modified":1683341787218},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"e6967ec160b93a5f466a73a36745833e644d04c0","modified":1683341787218},{"_id":"themes/pure/source/fonts/README.md","hash":"b5b2aac1b36a86dac2217d242d650e026c5a3b0c","modified":1683341787256},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1683341787257},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1683341787260},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1683341787261},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1683341787267},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1683341787268},{"_id":"themes/pure/source/js/application.js","hash":"5a44c2f797ab307d2a26c4631ea306816528309a","modified":1683341787269},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1683341787269},{"_id":"themes/pure/source/js/insight.js","hash":"a1b773d9ce470bf0e2f8fdca1b6fac2ac3d31aeb","modified":1683341787270},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"20ef0d47ec3d2de7d94db9778ddac092dc2bd4b5","modified":1683341787189},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"0ef132fc45042b28411e3334e77b6e2a7f47fae2","modified":1683341787189},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"de7f6bd52cedc9c64ec1c8db5568f2fd30074990","modified":1683341787190},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"8cbaef422bd7f3d1581d1198dd1c36e4c0e1e46e","modified":1683341787190},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"bdef9836ca91b3e45498a9d98bcaec69e6627ced","modified":1683341787191},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1683341787193},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"5b4119092b890c156a4e85e15be2cbcebf89fcbd","modified":1683341787193},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"946f4bcfa5e5dc4d60c05916c8187bd2c06d1a95","modified":1683341787194},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"8fd470b8d52606a90d475f7da9dbbed32742b1c9","modified":1683341787194},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"0d8b9a3aeaed95b74e292c593f0a8225711bfdca","modified":1683341787195},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1683341787195},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"81e9a89734505f54fef83dc74d2e277dab1bfa75","modified":1683341787196},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"829778c19025882fe73cf1b297a36a9d0eff39a1","modified":1683341787198},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"4557389e499b89982eb005a821208fdd3dbac627","modified":1683341787199},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"19585fc666e13a2816d74a8046998ac7fd36f75c","modified":1683341787199},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"98dac12a9cbf47098b49183893d714355e2e5999","modified":1683341787201},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"d6bf1cfaa9167dcfb9ffab20c6670c53a008e838","modified":1683341787201},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"0af71b5b354fdddd576fbd55c3aeb0221af71e7d","modified":1683341787202},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"2cc7b1cb7bdf157fe6470eb34a613963df75afa3","modified":1683341787202},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"19120669bfea521e0b9d2df5bf3a34f0ecb8bb68","modified":1683341787203},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"96fcc36560a8367e6c4ba9ec1e82d0c5a730b1b4","modified":1683341787203},{"_id":"themes/pure/layout/_script/_repository/gitee.ejs","hash":"be7fed016f5332b597af6a5d5de262cc4fe939a0","modified":1683341787204},{"_id":"themes/pure/layout/_script/_repository/github.ejs","hash":"4df2172813297fcfb9ab894f668f21230f2e9e77","modified":1683341787205},{"_id":"themes/pure/layout/_script/_repository/legacy.ejs","hash":"9ed1e7de79bd661065b9c071957c54e58c38827c","modified":1683341787205},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"72b48dcaab830b615c71f6e810e96100b715c682","modified":1683341787206},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"f95c3289c03fa084afce64e3c399cb5127707f56","modified":1683341787207},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1683341787263},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1683341787264},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1683341787265},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1683341787266},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1683341787266},{"_id":"themes/pure/_config.yml.example","hash":"a3b55d01598967db40da6f740b38cdba4f17d7bc","modified":1683341787163},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1683341787231},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1683341787232},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1683341787234},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1683341787235},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1683341787237},{"_id":"themes/pure/source/js/jquery.min.js","hash":"dacc1f76630a9708add066819b1aabf8dce01056","modified":1683341787271},{"_id":"themes/pure/source/js/plugin.min.js","hash":"4eded164f8b6f5187fbf10065873ebeee5ab8787","modified":1683341787275},{"_id":"source/images/HCIP-datacom-2、IP路由基础/路由的来源.PNG","hash":"0c44c6d906076caf3e773c97e1955e2ff6d155a6","modified":1683341787145},{"_id":"themes/pure/source/css/style.min.css","hash":"4e46cbfadf9f0c5c236239a163058a3f525492ce","modified":1683341787254},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"1af91521f1c29c231ffc19d7f64696ddcd71470b","modified":1683341787259},{"_id":"source/images/HCIP-datacom-3、OSPF基础/总结.PNG","hash":"8f1f300710204d2dc1542cf55feb4f65deeb02e4","modified":1683341787151},{"_id":"themes/pure/source/js/plugin.js","hash":"59cb2985d8d21653f0f80ef327517eca86af0ac6","modified":1683341787273},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1683341787274},{"_id":"themes/pure/source/favicon.png","hash":"1b188d0797535553ea2e51b3e2c60180a17a012b","modified":1683343567923},{"_id":"themes/pure/source/images/avatar.jpg","hash":"1b188d0797535553ea2e51b3e2c60180a17a012b","modified":1683343567923},{"_id":"themes/pure/source/css/style.css","hash":"66f682bd79d122253bf78507dc588f32f143bce8","modified":1683345504140},{"_id":"themes/pure/package-lock.json","hash":"f0b8a9255cd0a024ecc6306d99c2a4d79f442978","modified":1683341787228},{"_id":"source/images/HCIP-datacom-1、认识网络设备/网络设备逻辑构架.PNG","hash":"528bab767983b9932ccd35dd2ab60e92e741b907","modified":1683341787133},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1683341787247},{"_id":"public/content.json","hash":"6878bd5c1beb3c4a7a20555dfdc5e8dc211e2247","modified":1683347244481},{"_id":"public/404.html","hash":"0830dbe22a78abc6569e8095fe325a3eb7179458","modified":1683347461489},{"_id":"public/about/index.html","hash":"ae424ae46cc58f16f3f811808f8db61accf77846","modified":1683347461489},{"_id":"public/categories/index.html","hash":"77903b09a724c7444c76b6ddc78c34ce79048142","modified":1683347461489},{"_id":"public/repository/index.html","hash":"affc40301b44d62525e0c9b8eaf2673fac724d72","modified":1683347461489},{"_id":"public/2022/12/17/Git/删除git所有提交记录/index.html","hash":"02d4099749e5795db2124e9eb92d7b3cf048bcdf","modified":1683347461489},{"_id":"public/2022/11/05/HCIP_datacom/4.OSPF基础介绍/index.html","hash":"058b4e0fdd89ab46301ac30c803e085fd356e176","modified":1683347461489},{"_id":"public/2022/11/04/HCIP_datacom/3.HCIP-datacom IP路由基础/index.html","hash":"d283f84b1213229af4b8e741b93e6ba85872bfb9","modified":1683347461489},{"_id":"public/2022/11/02/HCIP_datacom/2.HCIP-datacom 认识网络设备/index.html","hash":"d813d7ebe3f372d8225159e09afbb0c65fe319bd","modified":1683347461489},{"_id":"public/2022/11/01/HCIP_datacom/1.HCIP-datacom学习路线规划/index.html","hash":"03c22614c80a37d0350c81e03bdf7738e994f086","modified":1683347461489},{"_id":"public/2022/10/31/Hexo/Hexo Pure主题修改日记/index.html","hash":"665fc7ca613d26aa0a26a704af06e4e19bf220d2","modified":1683347461489},{"_id":"public/2022/10/31/Hexo/Pure README/index.html","hash":"09585eecd610618f83b6c6afcacc842b9441b8e6","modified":1683347461489},{"_id":"public/2022/10/31/PowerShell/在PowerShell中使用title命令/index.html","hash":"62b3372f9118607b26d0a8ea0f48d2a124981d31","modified":1683347461489},{"_id":"public/archives/index.html","hash":"e374d1332ca0842b2f11c3490d589bfced013da8","modified":1683347461489},{"_id":"public/archives/2022/index.html","hash":"4da6c383aeb445934fb465eef7487c3a10132941","modified":1683347461489},{"_id":"public/archives/2022/10/index.html","hash":"dfb2159135621ad580b373dee5e66ce41abbbb15","modified":1683347461489},{"_id":"public/archives/2022/11/index.html","hash":"04c91b7ab8203ae01bd9f8b41c235654739ab87c","modified":1683347461489},{"_id":"public/archives/2022/12/index.html","hash":"b86935f711d3d6f8e01d3c6975ee25faf97fb54b","modified":1683347461489},{"_id":"public/categories/Git/index.html","hash":"853f54a653242f75f6541cd49c8f123f48156ad9","modified":1683347461489},{"_id":"public/categories/HCIP-datacom/index.html","hash":"fa00c779476ded17fd0700a2b72a3487ca2a9c2b","modified":1683347461489},{"_id":"public/categories/Hexo/index.html","hash":"f7ca1d1038da839a9c70d7723fa14907664c8fe3","modified":1683347461489},{"_id":"public/categories/网络工程（杂项）/index.html","hash":"98c4f0c18aacc0a55cd44293ddb9129181b25654","modified":1683347461489},{"_id":"public/index.html","hash":"d5cf90be1662cc7e410467bd15168921a62deca5","modified":1683347461489},{"_id":"public/tags/index.html","hash":"fdb702e38a37779a70ce20414a9fac644a62a751","modified":1683347461489},{"_id":"public/tags/Git/index.html","hash":"58100c603ded87020fcfd62e79cdb0eda8960d2a","modified":1683347461489},{"_id":"public/tags/HCIP-datacom/index.html","hash":"39a9a883b8290636e06331f0e567f7627739ccbc","modified":1683347461489},{"_id":"public/tags/Hexo/index.html","hash":"2f4bb36d0438f8332596efce58b8579774d6e2c4","modified":1683347461489},{"_id":"public/tags/PowerShell/index.html","hash":"6bb6477b7749d03e0283442c2e9e13239ea1a1ad","modified":1683347461489},{"_id":"public/images/HCIP-datacom-1、认识网络设备/业务报文转发处理流程.PNG","hash":"7d6aad0b44c38fa80371df4be83436ca99bce1fd","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/协议报文转发处理流程.PNG","hash":"b99d406e7434e85bca31a1b433a15ce774a80106","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/监控平面.PNG","hash":"1c9cc7c377267b57b5ec553d87ad89878170536a","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/盒式设备.PNG","hash":"1216448ebdcf6cf15d28c78a9eb7076bac9e5349","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/硬件转发.PNG","hash":"2c1545928d7237a3fa796c6ef510a6347eae88e3","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/确定报文出口（1）.PNG","hash":"7e4efa4f9f1c3539142bbc8d4aa9fe5deac4a81a","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/确定报文出口（3）.PNG","hash":"c605ee2ff73cebadd05bd62ba410dab6a96335bc","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/设备自身发送协议报文处理流程.PNG","hash":"4235ae2c165e542396b3dd01922d0b9e69ff356b","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/转发信息.PNG","hash":"18c77f859ddc0f3a205da3070ef366f10a1d76b4","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/转发报文上行、下行.PNG","hash":"db321e724c38f82c7fd7bd29c7cc262890d16d8a","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/FIB表中的关键字段.PNG","hash":"c5aaa5c3732b16f4ded1bf2a4a5072a07db16b92","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/动态路由协议.PNG","hash":"ab13ce31a03d9489ae313704e011349b6d6f7f45","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/路由度量值.PNG","hash":"528d735fedfb0a8fe9123e6a438b13d84675df30","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/路由表.PNG","hash":"de86a3d1e61fdb0618a9bc1ecef8b5f92261e647","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/路由表中的关键字段.PNG","hash":"31390d716f05c4b61bfae8eba01d35128eff5eb5","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/路由迭代.PNG","hash":"099ebe32ff182812d173aae0c857e5df042ea23d","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/转发表.PNG","hash":"a1d63b48ed476c5b3ea95667843524b7b4f43ebc","modified":1683347244481},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1683347244481},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1683347244481},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1683347244481},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1683347244481},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1683347244481},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1683347244481},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1683347244481},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1683347244481},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1683347244481},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/模块连接逻辑图.PNG","hash":"25adc3f7c33339ac53583365f35d2569b344bd6a","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/转发平面.PNG","hash":"cf4b4d5831588a2e671251b355e205e97d19634d","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/路由回灌.PNG","hash":"0f5af8bb52a6305146e98d80672806e82cca221c","modified":1683347244481},{"_id":"public/favicon.png","hash":"1b188d0797535553ea2e51b3e2c60180a17a012b","modified":1683347244481},{"_id":"public/images/avatar.jpg","hash":"1b188d0797535553ea2e51b3e2c60180a17a012b","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/S12700E-8.PNG","hash":"38a984dc0e07627b2484e08943e321a90786c34d","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/控制平面.PNG","hash":"8d9744be1345be4fab9f88068056bf165ea1d577","modified":1683347244481},{"_id":"public/fonts/iconfont.svg","hash":"1af91521f1c29c231ffc19d7f64696ddcd71470b","modified":1683347244481},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1683347244481},{"_id":"public/fonts/README.html","hash":"3b9daaf126709e3bbce5926e15d599f1fe877921","modified":1683347244481},{"_id":"public/js/application.js","hash":"6542d167d88bcdfd19ac7db80a51193f844367bd","modified":1683347244481},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1683347244481},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1683347244481},{"_id":"public/images/HCIP-datacom-3、OSPF基础/总结.PNG","hash":"8f1f300710204d2dc1542cf55feb4f65deeb02e4","modified":1683347244481},{"_id":"public/images/HCIP-datacom-2、IP路由基础/路由的来源.PNG","hash":"0c44c6d906076caf3e773c97e1955e2ff6d155a6","modified":1683347244481},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1683347244481},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1683347244481},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1683347244481},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1683347244481},{"_id":"public/images/HCIP-datacom-1、认识网络设备/网络设备逻辑构架.PNG","hash":"528bab767983b9932ccd35dd2ab60e92e741b907","modified":1683347244481},{"_id":"public/css/style.css","hash":"8ac1a36edbe71f84a2878150b929ab5f43d8e444","modified":1683347244481}],"Category":[{"name":"Git","_id":"clhbhhj1h0004ncm2b4y776hw"},{"name":"HCIP-datacom","_id":"clhbhhj1m000cncm2e4dd6h5a"},{"name":"Hexo","_id":"clhbhhj1u000tncm267vo0mxs"},{"name":"网络工程（杂项）","_id":"clhbhhj1y0015ncm2g5u2bdca"},{"name":"网络规划设计师","_id":"clhbm9a2u000390m2cxj7emnb"}],"Data":[{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}},{"_id":"links","data":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","date":"2023-05-06T02:56:27.109Z","updated":"2023-05-06T02:56:27.109Z","path":"/404.html","layout":"page","_id":"clhbhhj190000ncm2a0bs1og2","content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n"},{"title":"关于","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":"```java\n        Person person = new Person();\n\n        person.Name = \"Solomon\";\n\n        person.QQ = \"1426898429\";     //this is real\n\n        person.HeaderPhoto=\"花衬衫、花短裤、草帽\";\n\n        DateFormat date = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n        person.Birthday = date.parse(\"2002-11-08\");\n\n        person.Hobby = \"女\";\n\n        person.Sex = \"男\";\n\n        String major[] = { \"HUAWEI_RS\", \"CISCO_RS\", \"a_little_Java\" };\n\n        person.Major = major;\n\n        String experience[] = { \"交换机路由器的网线拔出与连接\",\n                                \"Windows系统的的开机与关机\", \n                                \"Linux系统的开机与关机\" };\n\n        person.WorkExperience = experience;\n\n        person.IWantSay(\"每天起床的意义，就是拥抱工作！\");\n```\n\n","source":"about/index.md","raw":"---\ntitle: 关于\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n```java\n        Person person = new Person();\n\n        person.Name = \"Solomon\";\n\n        person.QQ = \"1426898429\";     //this is real\n\n        person.HeaderPhoto=\"花衬衫、花短裤、草帽\";\n\n        DateFormat date = new SimpleDateFormat(\"yyyy-MM-dd\");\n\n        person.Birthday = date.parse(\"2002-11-08\");\n\n        person.Hobby = \"女\";\n\n        person.Sex = \"男\";\n\n        String major[] = { \"HUAWEI_RS\", \"CISCO_RS\", \"a_little_Java\" };\n\n        person.Major = major;\n\n        String experience[] = { \"交换机路由器的网线拔出与连接\",\n                                \"Windows系统的的开机与关机\", \n                                \"Linux系统的开机与关机\" };\n\n        person.WorkExperience = experience;\n\n        person.IWantSay(\"每天起床的意义，就是拥抱工作！\");\n```\n\n","date":"2023-05-06T02:56:27.118Z","updated":"2023-05-06T02:56:27.118Z","path":"about/index.html","_id":"clhbhhj1e0002ncm2cv151857","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Person</span> <span class=\"variable\">person</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">person.Name = <span class=\"string\">&quot;Solomon&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">person.QQ = <span class=\"string\">&quot;1426898429&quot;</span>;     <span class=\"comment\">//this is real</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.HeaderPhoto=<span class=\"string\">&quot;花衬衫、花短裤、草帽&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">DateFormat</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">person.Birthday = date.parse(<span class=\"string\">&quot;2002-11-08&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">person.Hobby = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">person.Sex = <span class=\"string\">&quot;男&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">String major[] = &#123; <span class=\"string\">&quot;HUAWEI_RS&quot;</span>, <span class=\"string\">&quot;CISCO_RS&quot;</span>, <span class=\"string\">&quot;a_little_Java&quot;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person.Major = major;</span><br><span class=\"line\"></span><br><span class=\"line\">String experience[] = &#123; <span class=\"string\">&quot;交换机路由器的网线拔出与连接&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;Windows系统的的开机与关机&quot;</span>, </span><br><span class=\"line\">                        <span class=\"string\">&quot;Linux系统的开机与关机&quot;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person.WorkExperience = experience;</span><br><span class=\"line\"></span><br><span class=\"line\">person.IWantSay(<span class=\"string\">&quot;每天起床的意义，就是拥抱工作！&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Person</span> <span class=\"variable\">person</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">person.Name = <span class=\"string\">&quot;Solomon&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">person.QQ = <span class=\"string\">&quot;1426898429&quot;</span>;     <span class=\"comment\">//this is real</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.HeaderPhoto=<span class=\"string\">&quot;花衬衫、花短裤、草帽&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">DateFormat</span> <span class=\"variable\">date</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">person.Birthday = date.parse(<span class=\"string\">&quot;2002-11-08&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">person.Hobby = <span class=\"string\">&quot;女&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">person.Sex = <span class=\"string\">&quot;男&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">String major[] = &#123; <span class=\"string\">&quot;HUAWEI_RS&quot;</span>, <span class=\"string\">&quot;CISCO_RS&quot;</span>, <span class=\"string\">&quot;a_little_Java&quot;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person.Major = major;</span><br><span class=\"line\"></span><br><span class=\"line\">String experience[] = &#123; <span class=\"string\">&quot;交换机路由器的网线拔出与连接&quot;</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;Windows系统的的开机与关机&quot;</span>, </span><br><span class=\"line\">                        <span class=\"string\">&quot;Linux系统的开机与关机&quot;</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">person.WorkExperience = experience;</span><br><span class=\"line\"></span><br><span class=\"line\">person.IWantSay(<span class=\"string\">&quot;每天起床的意义，就是拥抱工作！&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n"},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2023-05-06T02:56:27.119Z","updated":"2023-05-06T02:56:27.119Z","path":"categories/index.html","_id":"clhbhhj1i0006ncm267dafs3k","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2023-05-06T02:56:27.155Z","updated":"2023-05-06T02:56:27.155Z","path":"tags/index.html","_id":"clhbhhj1k0008ncm235j98uk5","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"一些有意思的小项目","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: 一些有意思的小项目\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2023-05-06T02:56:27.154Z","updated":"2023-05-06T02:56:27.154Z","path":"repository/index.html","_id":"clhbhhj1l000ancm23h029aeo","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""}],"Post":[{"title":"删除git所有提交记录","date":"2022-12-16T20:10:12.000Z","typora-root-url":"..","_content":"\n## 删除Git所有提交记录\n\n1、切换一个新的分支\n\n```bash\ngit checkout --orphan new_branch;\n```\n\n2、添加所有到new_branch\n\n```bash\ngit add -A\n```\n\n3、提交新建分支\n\n```bash\ngit commit -am \"commit a new branch\"\n```\n\n4、删除旧分支\n\n```bash\ngit branch -D master\n```\n\n5、重命名新分支为master\n\n```bash\ngit checkout new_branch\ngit branch -m master\n```\n\n8、强制推送到仓库中\n\n```bash\ngit push -f origin master\n```","source":"_posts/Git/删除git所有提交记录.md","raw":"---\ntitle: 删除git所有提交记录\ndate: 2022-12-17 04:10:12\ntags: Git\ncategories: Git\ntypora-root-url: ..\n---\n\n## 删除Git所有提交记录\n\n1、切换一个新的分支\n\n```bash\ngit checkout --orphan new_branch;\n```\n\n2、添加所有到new_branch\n\n```bash\ngit add -A\n```\n\n3、提交新建分支\n\n```bash\ngit commit -am \"commit a new branch\"\n```\n\n4、删除旧分支\n\n```bash\ngit branch -D master\n```\n\n5、重命名新分支为master\n\n```bash\ngit checkout new_branch\ngit branch -m master\n```\n\n8、强制推送到仓库中\n\n```bash\ngit push -f origin master\n```","slug":"Git/删除git所有提交记录","published":1,"updated":"2023-05-06T02:56:27.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1c0001ncm29jcy1xno","content":"<h2 id=\"删除Git所有提交记录\"><a href=\"#删除Git所有提交记录\" class=\"headerlink\" title=\"删除Git所有提交记录\"></a>删除Git所有提交记录</h2><p>1、切换一个新的分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout --orphan new_branch;</span><br></pre></td></tr></table></figure>\n\n<p>2、添加所有到new_branch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br></pre></td></tr></table></figure>\n\n<p>3、提交新建分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -am <span class=\"string\">&quot;commit a new branch&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>4、删除旧分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D master</span><br></pre></td></tr></table></figure>\n\n<p>5、重命名新分支为master</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout new_branch</span><br><span class=\"line\">git branch -m master</span><br></pre></td></tr></table></figure>\n\n<p>8、强制推送到仓库中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin master</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h2 id=\"删除Git所有提交记录\"><a href=\"#删除Git所有提交记录\" class=\"headerlink\" title=\"删除Git所有提交记录\"></a>删除Git所有提交记录</h2><p>1、切换一个新的分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout --orphan new_branch;</span><br></pre></td></tr></table></figure>\n\n<p>2、添加所有到new_branch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br></pre></td></tr></table></figure>\n\n<p>3、提交新建分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -am <span class=\"string\">&quot;commit a new branch&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>4、删除旧分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -D master</span><br></pre></td></tr></table></figure>\n\n<p>5、重命名新分支为master</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout new_branch</span><br><span class=\"line\">git branch -m master</span><br></pre></td></tr></table></figure>\n\n<p>8、强制推送到仓库中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f origin master</span><br></pre></td></tr></table></figure>"},{"title":"HCIP-datacom 学习路线规划","date":"2022-11-01T02:24:00.000Z","typora-root-url":"..","_content":"\n<br>\n\n| **天数**  |                   **学习内容**                    |\n| :-------: | :-----------------------------------------------: |\n|  第 1 天  |        认识网络设备、IP路由基础、OSPF基础         |\n|  第 2 天  |  OSPF区域内路由、区域间路由、外部路由、特殊区域   |\n|  第 3 天  |   OSPF汇总特性、IS - IS原理介绍、邻接关系、DIS    |\n|  第 4 天  |     IS - IS默认路由、引入过滤、排错、BGP基础      |\n|  第 5 天  |      BGP路由、BGP路径属性、路由优选、RR联盟       |\n|  第 6 天  |   BGP选路规则、MP-BGP、EVPN基础、路由控制与策略   |\n|  第 7 天  |       流量过滤控制、STP选举、RSTP、P/A机制        |\n|  第 8 天  |       MSTP、堆叠集群、IP组播基础、IGMP协议        |\n|  第 9 天  |         IGMP实验、PIM-DM、PM-SM、IPv6基础         |\n| 第 10 天  |    ICMP NDP、IPv6地址配置、DHCPv6、防火墙概述     |\n| 第 11 天  |       BFD、VRRP、网络协议管理、数通解决方案       |\n| 第 12 天  | DHCP、交换综合排错、OSPF快速收敛、IS - IS高级特性 |\n| 第 13 天  |    MPLS原理、MPLS LDP、MPLS VPN原理、HCIP考核     |\n| 第 14 天  |       BGP高级、IPv6、VLAN、以太网、网络运维       |\n| 第 15 天  |                    知识点梳理                     |\n| 第 ··· 天 |                     -背题库-                      |\n\n","source":"_posts/HCIP_datacom/1.HCIP-datacom学习路线规划.md","raw":"---\n\ntitle: HCIP-datacom 学习路线规划\ndate: 2022-11-01 10:24:00\ntags: HCIP-datacom\ncategories: HCIP-datacom\ntypora-root-url: ..\n\n---\n\n<br>\n\n| **天数**  |                   **学习内容**                    |\n| :-------: | :-----------------------------------------------: |\n|  第 1 天  |        认识网络设备、IP路由基础、OSPF基础         |\n|  第 2 天  |  OSPF区域内路由、区域间路由、外部路由、特殊区域   |\n|  第 3 天  |   OSPF汇总特性、IS - IS原理介绍、邻接关系、DIS    |\n|  第 4 天  |     IS - IS默认路由、引入过滤、排错、BGP基础      |\n|  第 5 天  |      BGP路由、BGP路径属性、路由优选、RR联盟       |\n|  第 6 天  |   BGP选路规则、MP-BGP、EVPN基础、路由控制与策略   |\n|  第 7 天  |       流量过滤控制、STP选举、RSTP、P/A机制        |\n|  第 8 天  |       MSTP、堆叠集群、IP组播基础、IGMP协议        |\n|  第 9 天  |         IGMP实验、PIM-DM、PM-SM、IPv6基础         |\n| 第 10 天  |    ICMP NDP、IPv6地址配置、DHCPv6、防火墙概述     |\n| 第 11 天  |       BFD、VRRP、网络协议管理、数通解决方案       |\n| 第 12 天  | DHCP、交换综合排错、OSPF快速收敛、IS - IS高级特性 |\n| 第 13 天  |    MPLS原理、MPLS LDP、MPLS VPN原理、HCIP考核     |\n| 第 14 天  |       BGP高级、IPv6、VLAN、以太网、网络运维       |\n| 第 15 天  |                    知识点梳理                     |\n| 第 ··· 天 |                     -背题库-                      |\n\n","slug":"HCIP_datacom/1.HCIP-datacom学习路线规划","published":1,"updated":"2023-05-06T02:56:27.112Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1f0003ncm2fii08qzz","content":"<br>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>天数</strong></th>\n<th align=\"center\"><strong>学习内容</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">第 1 天</td>\n<td align=\"center\">认识网络设备、IP路由基础、OSPF基础</td>\n</tr>\n<tr>\n<td align=\"center\">第 2 天</td>\n<td align=\"center\">OSPF区域内路由、区域间路由、外部路由、特殊区域</td>\n</tr>\n<tr>\n<td align=\"center\">第 3 天</td>\n<td align=\"center\">OSPF汇总特性、IS - IS原理介绍、邻接关系、DIS</td>\n</tr>\n<tr>\n<td align=\"center\">第 4 天</td>\n<td align=\"center\">IS - IS默认路由、引入过滤、排错、BGP基础</td>\n</tr>\n<tr>\n<td align=\"center\">第 5 天</td>\n<td align=\"center\">BGP路由、BGP路径属性、路由优选、RR联盟</td>\n</tr>\n<tr>\n<td align=\"center\">第 6 天</td>\n<td align=\"center\">BGP选路规则、MP-BGP、EVPN基础、路由控制与策略</td>\n</tr>\n<tr>\n<td align=\"center\">第 7 天</td>\n<td align=\"center\">流量过滤控制、STP选举、RSTP、P/A机制</td>\n</tr>\n<tr>\n<td align=\"center\">第 8 天</td>\n<td align=\"center\">MSTP、堆叠集群、IP组播基础、IGMP协议</td>\n</tr>\n<tr>\n<td align=\"center\">第 9 天</td>\n<td align=\"center\">IGMP实验、PIM-DM、PM-SM、IPv6基础</td>\n</tr>\n<tr>\n<td align=\"center\">第 10 天</td>\n<td align=\"center\">ICMP NDP、IPv6地址配置、DHCPv6、防火墙概述</td>\n</tr>\n<tr>\n<td align=\"center\">第 11 天</td>\n<td align=\"center\">BFD、VRRP、网络协议管理、数通解决方案</td>\n</tr>\n<tr>\n<td align=\"center\">第 12 天</td>\n<td align=\"center\">DHCP、交换综合排错、OSPF快速收敛、IS - IS高级特性</td>\n</tr>\n<tr>\n<td align=\"center\">第 13 天</td>\n<td align=\"center\">MPLS原理、MPLS LDP、MPLS VPN原理、HCIP考核</td>\n</tr>\n<tr>\n<td align=\"center\">第 14 天</td>\n<td align=\"center\">BGP高级、IPv6、VLAN、以太网、网络运维</td>\n</tr>\n<tr>\n<td align=\"center\">第 15 天</td>\n<td align=\"center\">知识点梳理</td>\n</tr>\n<tr>\n<td align=\"center\">第 ··· 天</td>\n<td align=\"center\">-背题库-</td>\n</tr>\n</tbody></table>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<br>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>天数</strong></th>\n<th align=\"center\"><strong>学习内容</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">第 1 天</td>\n<td align=\"center\">认识网络设备、IP路由基础、OSPF基础</td>\n</tr>\n<tr>\n<td align=\"center\">第 2 天</td>\n<td align=\"center\">OSPF区域内路由、区域间路由、外部路由、特殊区域</td>\n</tr>\n<tr>\n<td align=\"center\">第 3 天</td>\n<td align=\"center\">OSPF汇总特性、IS - IS原理介绍、邻接关系、DIS</td>\n</tr>\n<tr>\n<td align=\"center\">第 4 天</td>\n<td align=\"center\">IS - IS默认路由、引入过滤、排错、BGP基础</td>\n</tr>\n<tr>\n<td align=\"center\">第 5 天</td>\n<td align=\"center\">BGP路由、BGP路径属性、路由优选、RR联盟</td>\n</tr>\n<tr>\n<td align=\"center\">第 6 天</td>\n<td align=\"center\">BGP选路规则、MP-BGP、EVPN基础、路由控制与策略</td>\n</tr>\n<tr>\n<td align=\"center\">第 7 天</td>\n<td align=\"center\">流量过滤控制、STP选举、RSTP、P/A机制</td>\n</tr>\n<tr>\n<td align=\"center\">第 8 天</td>\n<td align=\"center\">MSTP、堆叠集群、IP组播基础、IGMP协议</td>\n</tr>\n<tr>\n<td align=\"center\">第 9 天</td>\n<td align=\"center\">IGMP实验、PIM-DM、PM-SM、IPv6基础</td>\n</tr>\n<tr>\n<td align=\"center\">第 10 天</td>\n<td align=\"center\">ICMP NDP、IPv6地址配置、DHCPv6、防火墙概述</td>\n</tr>\n<tr>\n<td align=\"center\">第 11 天</td>\n<td align=\"center\">BFD、VRRP、网络协议管理、数通解决方案</td>\n</tr>\n<tr>\n<td align=\"center\">第 12 天</td>\n<td align=\"center\">DHCP、交换综合排错、OSPF快速收敛、IS - IS高级特性</td>\n</tr>\n<tr>\n<td align=\"center\">第 13 天</td>\n<td align=\"center\">MPLS原理、MPLS LDP、MPLS VPN原理、HCIP考核</td>\n</tr>\n<tr>\n<td align=\"center\">第 14 天</td>\n<td align=\"center\">BGP高级、IPv6、VLAN、以太网、网络运维</td>\n</tr>\n<tr>\n<td align=\"center\">第 15 天</td>\n<td align=\"center\">知识点梳理</td>\n</tr>\n<tr>\n<td align=\"center\">第 ··· 天</td>\n<td align=\"center\">-背题库-</td>\n</tr>\n</tbody></table>\n"},{"title":"1、认识网络设备","date":"2022-11-01T18:23:18.000Z","typora-root-url":"..","_content":"# Ⅰ- 网络设备框架\n## 1.框式设备硬件模块\n\n为了方便理解网络设备内部的各个功能模块以S12700E-8为例来讲解典型网络设备框架：\n\n如下图所示：\n1 - 主控板（MPU，Main Processing Unit）：\n负责整个系统的控制平面和管理平面。\n\n2 - 交换网板（SFU，Switch Fabric Unit）：\n负责整个系统的数据平面。数据面提供高速无阻塞数据通道，实现各个业务模块之间的业务交换功能。交换网板，接口板上都有自己的管理芯片，与主控板共同组成整个设备的管理控制平面。\n\n3 - 接口板（LPU，Line Processing Unit）：\n线路处理单元是物理设备上用提供数据转发功能的模块，提供不同速率的光口、电口。\n\n![S12700E-8](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/S12700E-8.PNG)\n\n#### 1.1.主控板\n\n提供了整个系统的控制平面和管理平面：\n\n1 - 控制平面完成系统的协议处理、业务处理、路由计算、转发控制、业务调度、流量统计、系统安全等功能。\n\n2 - 管理平面完成系统的运行状态监控、环境监控、日志和告警信息处理、系统加载、系统升级等功能。\n\n#### 1.2.交换网板\n\n交换网板提供整个系统的数据平面。\n\n接口板、主控板之间通过交换网板完成通信。\n\n#### 1.3.接口板\n\n接口板提供了不同类型（光口、电口），不同速率的接入接口，通过分布式数据平面对数据进行转发\n\n<br>\n\n## 2.盒式设备硬件模块\n\n不同于框式设备，盒式设备的各个业务模块并不是独立的硬件模块，而是集成在一个框内。\n\n![盒式设备](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%92%E5%BC%8F%E8%AE%BE%E5%A4%87.PNG)\n\n<br>\n\n## 3.模块连接逻辑图\n\n1 - 框式设备各个模块分为不同的单板，单板之间通过框式设备内部的连接进行通信。\n\n2 - 盒式设备内部集成了这些模块，各个模块之间同样也是通过内部连接进行通信。\n\n3 - 接口板和接口板之间通过交换网板连接了起来，接口板之间的通信统一经由交换网板进行转发。\n\n![模块连接逻辑图](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E9%80%BB%E8%BE%91%E5%9B%BE.PNG)\n\n<br>\n\n## 4.网络设备逻辑构架\n\n网络设备从逻辑上可以分为以下三个平面：\n\n数据平面、控制管理平面和监控平面。\n\n\n\n![网络设备逻辑构架](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%80%BB%E8%BE%91%E6%9E%84%E6%9E%B6.PNG)\n\n<br>\n\n## 5.控制平面\n\n1 - 设备的控制平面由主控板以及接口板的管理单元组成。\n\n2 - 控制管理平面完成系统的控制管理功能，是整个系统的中枢神经系统。\n\n3 - 控制平面完成系统的协议处理、业务处理、路由运算、转发控制、业务调度、流量统计、系统安全等功能。\n\n4 - 交换机的控制平面用于控制和管理所有网络协议的运行。\n\n5 - 控制平面提供了数据平面数据处理转发前所必须的各种网络信息和转发查询表项。\n\n![控制平面](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.PNG)\n\n<br>\n\n## 6.转发平面\n\n1 - 设备的转发平面由交换网板及接口组成\n\n2 - LPU上存在PEE（转发引擎），其本质也是一个交换芯片，完成本接口板端口之间的交换。\n\n3 - 数据平面完成数据报文的高速处理和内部无阻塞交换。包括报文的封装与解封装、IPv4/IPv6/MPLS转发处理、QoS与调度处理、内部高速交换以及各种统计。\n\n![转发平面](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E5%B9%B3%E9%9D%A2.PNG)\n\n## 7.监控平面\n\n1 - 监控平面由主控板、接口板的监控单元构成，部分框式设备还会存在单独的集中监控板（CMU）。\n\n2 - 监控平面独立完成系统的环境监控，包括电压检测、系统上下电控制、温度监测与风扇控制等、以保证系统的安全稳定运行，在出现单元故障的情况下及时隔离故障，保障系统其他部分的正常运行。\n\n![监控平面](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%91%E6%8E%A7%E5%B9%B3%E9%9D%A2.PNG)\n<br>\n\n# Ⅱ - 网络设备对报文的处理流程\n\n## 1.报文转发上行、下行\n\n以交换网板为中心，可将报文在设备的行程一分为二，前半程为“上行”，下半程为“下行”。\n\n![转发报文上行、下行](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E6%8A%A5%E6%96%87%E4%B8%8A%E8%A1%8C%E3%80%81%E4%B8%8B%E8%A1%8C.PNG)\n\n1 - 设备处理报文分类：一种是业务报文，一种是协议报文。\n\n2 - 对于业务报文设备只会进行转发，从一个接口进入之后依据转发表项从另外一个接口发送出去。\n\n3 - 协议报文（如ARP、OSPF、BGP等协议的报文）设备在收到之后会交由控制层面进行处理，如ARP报文交由控制层面处理、判断之后决定是否回应，是否学习ARP报文中的源MAC、源IP。\n\n<br>\n\n## 2.业务报文转发处理流程\n\n业务报文从接口进入上行接口板处理之后，通过框式交换机内部总线交由交换网板，交换网板交由下行接口板处理之后从接口发出去。\n\n![业务报文转发处理流程](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E4%B8%9A%E5%8A%A1%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG)\n\n1 - PFE（Packet Forwarding Engine）：包转发引擎。\n\n2 - 业务报文：服务、应用在交互过程中涉及的报文。\n\n3 - 切片：把报文送往交换网板之前，进行切片处理，也就是把报文按一定粒度进行切片，切成固定长度\n\n4 - 重组：将交换网板发送过来的已经切片的报文进行重新组合\n\n<br>\n\n## 3.确定报文出口（1）\n\n1 - 当报文从接口板进入时，设备需要依据转发表项（IP路由表、MAC地址表等）确定报文的出接口（对于框式设备需要确定下行接口板）。\n\n2 - 报文到达交换网板时已经明确了出接口、下行接口板，因此表项查询需要在上行接口板的处理过程中完成。\n\n3 - 二层转发查询MAC地址表，三层转发查询三层路由表。\n\n![确定报文出口（1）](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%881%EF%BC%89.PNG)\n\n<br>\n\n## 4.确定报文出口（2）\n\n1 - 转发表项存放在主控板上，报文进入接口板之后，接口板从主控板处查询表项。\n\n2 - 每次转发都需要与主控板进行通信，转发效率低，报文时延增加，对高速率接口板而言转发速率严重下跌。\n\n3 - 二层转发查询MAC地址表，三层转发查询三层路由表\n\n<br>\n\n## 5.确定报文出口（3）\n\n1 - 转发表项存放在接口板上，报文进入接口板之后直接在接口板完成报文查询，报文转发效率高。\n\n2 - 所有接口板上都要存储转发表项，控制平面资源占用率高。\n\n3 - 二层转发查询MAC地址表，三层转发查询三层路由表。\n\n![确定报文出口（3）](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%883%EF%BC%89.PNG)\n\n<br>\n\n## 6.转发信息\n\n1 - 高端设备业务报文不经过主控板CPU处理，由接口板提供转发信息查询。\n\n2 - 接口板上存在的转发信息并非存在于主控板上的转发表项（IP路由表、MAC地址表...）。主控板生成转发表项之后，生成对应的转发信息下发在接口板。 \n\n![转发信息](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG)\n\n以IP路由表为例，路由表生成之后，主控板根据路由表生成FIP表项（Forwarding Information Base）并下发到接口板，接口板根据FIB表进行转发。\n\n<br>\n\n## 7.硬件转发\n\n1 - 接口板执行转发的不见为包转发引擎PFE（Packet Forwarding Engine），通常为NP或者ASIC芯片，报文直接由接口板独立完成转发，无需主控板参与。\n\n2 - 高端框式设备把转发层面和控制层面分配在不同的组件，控制层面组件（主控板）负责运行转发相关协议、维护转发表项，转发平面组件（接口板）依据控制层面下发的转发信息能供独立完成转发工作，互不影响，控制层面组件高负载时并不会影响转发平面的正常工作，这种工作机制被成为转控分离。\n\n![转发信息](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG)\n\n业务报文转发由接口板、交换网板独立完成，无主控板参与。\n\n<br>\n\n## 8.协议报文转发处理流程\n\n设备收到的协议报文，如路由协议：\nOSPF、IS-IS、BGP报文，ARP报文，STP报文，对设备的ICMP请求报文等，需要交由设备的控制平面处理，即上送主控板由主控板的CPU进行处理。\n\n1 - 主控板CPU收到协议报文之后进行相应的处理之后如果需要回应报文，则主控板会构造协议报文进行回应，如收到发往自身的ARP Request、ICMP Echo Request报文，主控板处理之后构造ARP Reply、ICMP Echo Reply进行回应。\n\n2 - 主控板CPU处理能力有限，如果过多的协议报文上送主控板CPU处理，会造成其繁忙，无法及时对协议报文进行响应，为此设备默认限制了各种类型的协议报文上送主控板CPU的速率。\n\n![协议报文转发处理流程](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG)\n\n<br>\n\n## 9.设备自身发送协议报文处理流程\n\n设备自身发送的协议报文，如路由协议报文：\nOSPF、IS-IS、BGP报文，ARP报文，STP报文，ICMP报文等，由主控板CPU构造之后交由接口板对外发送\n\n![设备自身发送协议报文处理流程](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E8%87%AA%E8%BA%AB%E5%8F%91%E9%80%81%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG)","source":"_posts/HCIP_datacom/2.HCIP-datacom 认识网络设备.md","raw":"---\ntitle: 1、认识网络设备\ndate: 2022-11-02 02:23:18\ntags: HCIP-datacom\ncategories: HCIP-datacom\ntypora-root-url: ..\n---\n# Ⅰ- 网络设备框架\n## 1.框式设备硬件模块\n\n为了方便理解网络设备内部的各个功能模块以S12700E-8为例来讲解典型网络设备框架：\n\n如下图所示：\n1 - 主控板（MPU，Main Processing Unit）：\n负责整个系统的控制平面和管理平面。\n\n2 - 交换网板（SFU，Switch Fabric Unit）：\n负责整个系统的数据平面。数据面提供高速无阻塞数据通道，实现各个业务模块之间的业务交换功能。交换网板，接口板上都有自己的管理芯片，与主控板共同组成整个设备的管理控制平面。\n\n3 - 接口板（LPU，Line Processing Unit）：\n线路处理单元是物理设备上用提供数据转发功能的模块，提供不同速率的光口、电口。\n\n![S12700E-8](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/S12700E-8.PNG)\n\n#### 1.1.主控板\n\n提供了整个系统的控制平面和管理平面：\n\n1 - 控制平面完成系统的协议处理、业务处理、路由计算、转发控制、业务调度、流量统计、系统安全等功能。\n\n2 - 管理平面完成系统的运行状态监控、环境监控、日志和告警信息处理、系统加载、系统升级等功能。\n\n#### 1.2.交换网板\n\n交换网板提供整个系统的数据平面。\n\n接口板、主控板之间通过交换网板完成通信。\n\n#### 1.3.接口板\n\n接口板提供了不同类型（光口、电口），不同速率的接入接口，通过分布式数据平面对数据进行转发\n\n<br>\n\n## 2.盒式设备硬件模块\n\n不同于框式设备，盒式设备的各个业务模块并不是独立的硬件模块，而是集成在一个框内。\n\n![盒式设备](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%92%E5%BC%8F%E8%AE%BE%E5%A4%87.PNG)\n\n<br>\n\n## 3.模块连接逻辑图\n\n1 - 框式设备各个模块分为不同的单板，单板之间通过框式设备内部的连接进行通信。\n\n2 - 盒式设备内部集成了这些模块，各个模块之间同样也是通过内部连接进行通信。\n\n3 - 接口板和接口板之间通过交换网板连接了起来，接口板之间的通信统一经由交换网板进行转发。\n\n![模块连接逻辑图](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E9%80%BB%E8%BE%91%E5%9B%BE.PNG)\n\n<br>\n\n## 4.网络设备逻辑构架\n\n网络设备从逻辑上可以分为以下三个平面：\n\n数据平面、控制管理平面和监控平面。\n\n\n\n![网络设备逻辑构架](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%80%BB%E8%BE%91%E6%9E%84%E6%9E%B6.PNG)\n\n<br>\n\n## 5.控制平面\n\n1 - 设备的控制平面由主控板以及接口板的管理单元组成。\n\n2 - 控制管理平面完成系统的控制管理功能，是整个系统的中枢神经系统。\n\n3 - 控制平面完成系统的协议处理、业务处理、路由运算、转发控制、业务调度、流量统计、系统安全等功能。\n\n4 - 交换机的控制平面用于控制和管理所有网络协议的运行。\n\n5 - 控制平面提供了数据平面数据处理转发前所必须的各种网络信息和转发查询表项。\n\n![控制平面](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.PNG)\n\n<br>\n\n## 6.转发平面\n\n1 - 设备的转发平面由交换网板及接口组成\n\n2 - LPU上存在PEE（转发引擎），其本质也是一个交换芯片，完成本接口板端口之间的交换。\n\n3 - 数据平面完成数据报文的高速处理和内部无阻塞交换。包括报文的封装与解封装、IPv4/IPv6/MPLS转发处理、QoS与调度处理、内部高速交换以及各种统计。\n\n![转发平面](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E5%B9%B3%E9%9D%A2.PNG)\n\n## 7.监控平面\n\n1 - 监控平面由主控板、接口板的监控单元构成，部分框式设备还会存在单独的集中监控板（CMU）。\n\n2 - 监控平面独立完成系统的环境监控，包括电压检测、系统上下电控制、温度监测与风扇控制等、以保证系统的安全稳定运行，在出现单元故障的情况下及时隔离故障，保障系统其他部分的正常运行。\n\n![监控平面](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%91%E6%8E%A7%E5%B9%B3%E9%9D%A2.PNG)\n<br>\n\n# Ⅱ - 网络设备对报文的处理流程\n\n## 1.报文转发上行、下行\n\n以交换网板为中心，可将报文在设备的行程一分为二，前半程为“上行”，下半程为“下行”。\n\n![转发报文上行、下行](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E6%8A%A5%E6%96%87%E4%B8%8A%E8%A1%8C%E3%80%81%E4%B8%8B%E8%A1%8C.PNG)\n\n1 - 设备处理报文分类：一种是业务报文，一种是协议报文。\n\n2 - 对于业务报文设备只会进行转发，从一个接口进入之后依据转发表项从另外一个接口发送出去。\n\n3 - 协议报文（如ARP、OSPF、BGP等协议的报文）设备在收到之后会交由控制层面进行处理，如ARP报文交由控制层面处理、判断之后决定是否回应，是否学习ARP报文中的源MAC、源IP。\n\n<br>\n\n## 2.业务报文转发处理流程\n\n业务报文从接口进入上行接口板处理之后，通过框式交换机内部总线交由交换网板，交换网板交由下行接口板处理之后从接口发出去。\n\n![业务报文转发处理流程](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E4%B8%9A%E5%8A%A1%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG)\n\n1 - PFE（Packet Forwarding Engine）：包转发引擎。\n\n2 - 业务报文：服务、应用在交互过程中涉及的报文。\n\n3 - 切片：把报文送往交换网板之前，进行切片处理，也就是把报文按一定粒度进行切片，切成固定长度\n\n4 - 重组：将交换网板发送过来的已经切片的报文进行重新组合\n\n<br>\n\n## 3.确定报文出口（1）\n\n1 - 当报文从接口板进入时，设备需要依据转发表项（IP路由表、MAC地址表等）确定报文的出接口（对于框式设备需要确定下行接口板）。\n\n2 - 报文到达交换网板时已经明确了出接口、下行接口板，因此表项查询需要在上行接口板的处理过程中完成。\n\n3 - 二层转发查询MAC地址表，三层转发查询三层路由表。\n\n![确定报文出口（1）](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%881%EF%BC%89.PNG)\n\n<br>\n\n## 4.确定报文出口（2）\n\n1 - 转发表项存放在主控板上，报文进入接口板之后，接口板从主控板处查询表项。\n\n2 - 每次转发都需要与主控板进行通信，转发效率低，报文时延增加，对高速率接口板而言转发速率严重下跌。\n\n3 - 二层转发查询MAC地址表，三层转发查询三层路由表\n\n<br>\n\n## 5.确定报文出口（3）\n\n1 - 转发表项存放在接口板上，报文进入接口板之后直接在接口板完成报文查询，报文转发效率高。\n\n2 - 所有接口板上都要存储转发表项，控制平面资源占用率高。\n\n3 - 二层转发查询MAC地址表，三层转发查询三层路由表。\n\n![确定报文出口（3）](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%883%EF%BC%89.PNG)\n\n<br>\n\n## 6.转发信息\n\n1 - 高端设备业务报文不经过主控板CPU处理，由接口板提供转发信息查询。\n\n2 - 接口板上存在的转发信息并非存在于主控板上的转发表项（IP路由表、MAC地址表...）。主控板生成转发表项之后，生成对应的转发信息下发在接口板。 \n\n![转发信息](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG)\n\n以IP路由表为例，路由表生成之后，主控板根据路由表生成FIP表项（Forwarding Information Base）并下发到接口板，接口板根据FIB表进行转发。\n\n<br>\n\n## 7.硬件转发\n\n1 - 接口板执行转发的不见为包转发引擎PFE（Packet Forwarding Engine），通常为NP或者ASIC芯片，报文直接由接口板独立完成转发，无需主控板参与。\n\n2 - 高端框式设备把转发层面和控制层面分配在不同的组件，控制层面组件（主控板）负责运行转发相关协议、维护转发表项，转发平面组件（接口板）依据控制层面下发的转发信息能供独立完成转发工作，互不影响，控制层面组件高负载时并不会影响转发平面的正常工作，这种工作机制被成为转控分离。\n\n![转发信息](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG)\n\n业务报文转发由接口板、交换网板独立完成，无主控板参与。\n\n<br>\n\n## 8.协议报文转发处理流程\n\n设备收到的协议报文，如路由协议：\nOSPF、IS-IS、BGP报文，ARP报文，STP报文，对设备的ICMP请求报文等，需要交由设备的控制平面处理，即上送主控板由主控板的CPU进行处理。\n\n1 - 主控板CPU收到协议报文之后进行相应的处理之后如果需要回应报文，则主控板会构造协议报文进行回应，如收到发往自身的ARP Request、ICMP Echo Request报文，主控板处理之后构造ARP Reply、ICMP Echo Reply进行回应。\n\n2 - 主控板CPU处理能力有限，如果过多的协议报文上送主控板CPU处理，会造成其繁忙，无法及时对协议报文进行响应，为此设备默认限制了各种类型的协议报文上送主控板CPU的速率。\n\n![协议报文转发处理流程](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG)\n\n<br>\n\n## 9.设备自身发送协议报文处理流程\n\n设备自身发送的协议报文，如路由协议报文：\nOSPF、IS-IS、BGP报文，ARP报文，STP报文，ICMP报文等，由主控板CPU构造之后交由接口板对外发送\n\n![设备自身发送协议报文处理流程](/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E8%87%AA%E8%BA%AB%E5%8F%91%E9%80%81%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG)","slug":"HCIP_datacom/2.HCIP-datacom 认识网络设备","published":1,"updated":"2023-05-06T02:56:27.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1j0007ncm2099h0gus","content":"<h1 id=\"Ⅰ-网络设备框架\"><a href=\"#Ⅰ-网络设备框架\" class=\"headerlink\" title=\"Ⅰ- 网络设备框架\"></a>Ⅰ- 网络设备框架</h1><h2 id=\"1-框式设备硬件模块\"><a href=\"#1-框式设备硬件模块\" class=\"headerlink\" title=\"1.框式设备硬件模块\"></a>1.框式设备硬件模块</h2><p>为了方便理解网络设备内部的各个功能模块以S12700E-8为例来讲解典型网络设备框架：</p>\n<p>如下图所示：<br>1 - 主控板（MPU，Main Processing Unit）：<br>负责整个系统的控制平面和管理平面。</p>\n<p>2 - 交换网板（SFU，Switch Fabric Unit）：<br>负责整个系统的数据平面。数据面提供高速无阻塞数据通道，实现各个业务模块之间的业务交换功能。交换网板，接口板上都有自己的管理芯片，与主控板共同组成整个设备的管理控制平面。</p>\n<p>3 - 接口板（LPU，Line Processing Unit）：<br>线路处理单元是物理设备上用提供数据转发功能的模块，提供不同速率的光口、电口。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/S12700E-8.PNG\" alt=\"S12700E-8\"></p>\n<h4 id=\"1-1-主控板\"><a href=\"#1-1-主控板\" class=\"headerlink\" title=\"1.1.主控板\"></a>1.1.主控板</h4><p>提供了整个系统的控制平面和管理平面：</p>\n<p>1 - 控制平面完成系统的协议处理、业务处理、路由计算、转发控制、业务调度、流量统计、系统安全等功能。</p>\n<p>2 - 管理平面完成系统的运行状态监控、环境监控、日志和告警信息处理、系统加载、系统升级等功能。</p>\n<h4 id=\"1-2-交换网板\"><a href=\"#1-2-交换网板\" class=\"headerlink\" title=\"1.2.交换网板\"></a>1.2.交换网板</h4><p>交换网板提供整个系统的数据平面。</p>\n<p>接口板、主控板之间通过交换网板完成通信。</p>\n<h4 id=\"1-3-接口板\"><a href=\"#1-3-接口板\" class=\"headerlink\" title=\"1.3.接口板\"></a>1.3.接口板</h4><p>接口板提供了不同类型（光口、电口），不同速率的接入接口，通过分布式数据平面对数据进行转发</p>\n<br>\n\n<h2 id=\"2-盒式设备硬件模块\"><a href=\"#2-盒式设备硬件模块\" class=\"headerlink\" title=\"2.盒式设备硬件模块\"></a>2.盒式设备硬件模块</h2><p>不同于框式设备，盒式设备的各个业务模块并不是独立的硬件模块，而是集成在一个框内。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%92%E5%BC%8F%E8%AE%BE%E5%A4%87.PNG\" alt=\"盒式设备\"></p>\n<br>\n\n<h2 id=\"3-模块连接逻辑图\"><a href=\"#3-模块连接逻辑图\" class=\"headerlink\" title=\"3.模块连接逻辑图\"></a>3.模块连接逻辑图</h2><p>1 - 框式设备各个模块分为不同的单板，单板之间通过框式设备内部的连接进行通信。</p>\n<p>2 - 盒式设备内部集成了这些模块，各个模块之间同样也是通过内部连接进行通信。</p>\n<p>3 - 接口板和接口板之间通过交换网板连接了起来，接口板之间的通信统一经由交换网板进行转发。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E9%80%BB%E8%BE%91%E5%9B%BE.PNG\" alt=\"模块连接逻辑图\"></p>\n<br>\n\n<h2 id=\"4-网络设备逻辑构架\"><a href=\"#4-网络设备逻辑构架\" class=\"headerlink\" title=\"4.网络设备逻辑构架\"></a>4.网络设备逻辑构架</h2><p>网络设备从逻辑上可以分为以下三个平面：</p>\n<p>数据平面、控制管理平面和监控平面。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%80%BB%E8%BE%91%E6%9E%84%E6%9E%B6.PNG\" alt=\"网络设备逻辑构架\"></p>\n<br>\n\n<h2 id=\"5-控制平面\"><a href=\"#5-控制平面\" class=\"headerlink\" title=\"5.控制平面\"></a>5.控制平面</h2><p>1 - 设备的控制平面由主控板以及接口板的管理单元组成。</p>\n<p>2 - 控制管理平面完成系统的控制管理功能，是整个系统的中枢神经系统。</p>\n<p>3 - 控制平面完成系统的协议处理、业务处理、路由运算、转发控制、业务调度、流量统计、系统安全等功能。</p>\n<p>4 - 交换机的控制平面用于控制和管理所有网络协议的运行。</p>\n<p>5 - 控制平面提供了数据平面数据处理转发前所必须的各种网络信息和转发查询表项。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.PNG\" alt=\"控制平面\"></p>\n<br>\n\n<h2 id=\"6-转发平面\"><a href=\"#6-转发平面\" class=\"headerlink\" title=\"6.转发平面\"></a>6.转发平面</h2><p>1 - 设备的转发平面由交换网板及接口组成</p>\n<p>2 - LPU上存在PEE（转发引擎），其本质也是一个交换芯片，完成本接口板端口之间的交换。</p>\n<p>3 - 数据平面完成数据报文的高速处理和内部无阻塞交换。包括报文的封装与解封装、IPv4/IPv6/MPLS转发处理、QoS与调度处理、内部高速交换以及各种统计。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E5%B9%B3%E9%9D%A2.PNG\" alt=\"转发平面\"></p>\n<h2 id=\"7-监控平面\"><a href=\"#7-监控平面\" class=\"headerlink\" title=\"7.监控平面\"></a>7.监控平面</h2><p>1 - 监控平面由主控板、接口板的监控单元构成，部分框式设备还会存在单独的集中监控板（CMU）。</p>\n<p>2 - 监控平面独立完成系统的环境监控，包括电压检测、系统上下电控制、温度监测与风扇控制等、以保证系统的安全稳定运行，在出现单元故障的情况下及时隔离故障，保障系统其他部分的正常运行。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%91%E6%8E%A7%E5%B9%B3%E9%9D%A2.PNG\" alt=\"监控平面\"><br><br></p>\n<h1 id=\"Ⅱ-网络设备对报文的处理流程\"><a href=\"#Ⅱ-网络设备对报文的处理流程\" class=\"headerlink\" title=\"Ⅱ - 网络设备对报文的处理流程\"></a>Ⅱ - 网络设备对报文的处理流程</h1><h2 id=\"1-报文转发上行、下行\"><a href=\"#1-报文转发上行、下行\" class=\"headerlink\" title=\"1.报文转发上行、下行\"></a>1.报文转发上行、下行</h2><p>以交换网板为中心，可将报文在设备的行程一分为二，前半程为“上行”，下半程为“下行”。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E6%8A%A5%E6%96%87%E4%B8%8A%E8%A1%8C%E3%80%81%E4%B8%8B%E8%A1%8C.PNG\" alt=\"转发报文上行、下行\"></p>\n<p>1 - 设备处理报文分类：一种是业务报文，一种是协议报文。</p>\n<p>2 - 对于业务报文设备只会进行转发，从一个接口进入之后依据转发表项从另外一个接口发送出去。</p>\n<p>3 - 协议报文（如ARP、OSPF、BGP等协议的报文）设备在收到之后会交由控制层面进行处理，如ARP报文交由控制层面处理、判断之后决定是否回应，是否学习ARP报文中的源MAC、源IP。</p>\n<br>\n\n<h2 id=\"2-业务报文转发处理流程\"><a href=\"#2-业务报文转发处理流程\" class=\"headerlink\" title=\"2.业务报文转发处理流程\"></a>2.业务报文转发处理流程</h2><p>业务报文从接口进入上行接口板处理之后，通过框式交换机内部总线交由交换网板，交换网板交由下行接口板处理之后从接口发出去。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E4%B8%9A%E5%8A%A1%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG\" alt=\"业务报文转发处理流程\"></p>\n<p>1 - PFE（Packet Forwarding Engine）：包转发引擎。</p>\n<p>2 - 业务报文：服务、应用在交互过程中涉及的报文。</p>\n<p>3 - 切片：把报文送往交换网板之前，进行切片处理，也就是把报文按一定粒度进行切片，切成固定长度</p>\n<p>4 - 重组：将交换网板发送过来的已经切片的报文进行重新组合</p>\n<br>\n\n<h2 id=\"3-确定报文出口（1）\"><a href=\"#3-确定报文出口（1）\" class=\"headerlink\" title=\"3.确定报文出口（1）\"></a>3.确定报文出口（1）</h2><p>1 - 当报文从接口板进入时，设备需要依据转发表项（IP路由表、MAC地址表等）确定报文的出接口（对于框式设备需要确定下行接口板）。</p>\n<p>2 - 报文到达交换网板时已经明确了出接口、下行接口板，因此表项查询需要在上行接口板的处理过程中完成。</p>\n<p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%881%EF%BC%89.PNG\" alt=\"确定报文出口（1）\"></p>\n<br>\n\n<h2 id=\"4-确定报文出口（2）\"><a href=\"#4-确定报文出口（2）\" class=\"headerlink\" title=\"4.确定报文出口（2）\"></a>4.确定报文出口（2）</h2><p>1 - 转发表项存放在主控板上，报文进入接口板之后，接口板从主控板处查询表项。</p>\n<p>2 - 每次转发都需要与主控板进行通信，转发效率低，报文时延增加，对高速率接口板而言转发速率严重下跌。</p>\n<p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表</p>\n<br>\n\n<h2 id=\"5-确定报文出口（3）\"><a href=\"#5-确定报文出口（3）\" class=\"headerlink\" title=\"5.确定报文出口（3）\"></a>5.确定报文出口（3）</h2><p>1 - 转发表项存放在接口板上，报文进入接口板之后直接在接口板完成报文查询，报文转发效率高。</p>\n<p>2 - 所有接口板上都要存储转发表项，控制平面资源占用率高。</p>\n<p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%883%EF%BC%89.PNG\" alt=\"确定报文出口（3）\"></p>\n<br>\n\n<h2 id=\"6-转发信息\"><a href=\"#6-转发信息\" class=\"headerlink\" title=\"6.转发信息\"></a>6.转发信息</h2><p>1 - 高端设备业务报文不经过主控板CPU处理，由接口板提供转发信息查询。</p>\n<p>2 - 接口板上存在的转发信息并非存在于主控板上的转发表项（IP路由表、MAC地址表…）。主控板生成转发表项之后，生成对应的转发信息下发在接口板。 </p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG\" alt=\"转发信息\"></p>\n<p>以IP路由表为例，路由表生成之后，主控板根据路由表生成FIP表项（Forwarding Information Base）并下发到接口板，接口板根据FIB表进行转发。</p>\n<br>\n\n<h2 id=\"7-硬件转发\"><a href=\"#7-硬件转发\" class=\"headerlink\" title=\"7.硬件转发\"></a>7.硬件转发</h2><p>1 - 接口板执行转发的不见为包转发引擎PFE（Packet Forwarding Engine），通常为NP或者ASIC芯片，报文直接由接口板独立完成转发，无需主控板参与。</p>\n<p>2 - 高端框式设备把转发层面和控制层面分配在不同的组件，控制层面组件（主控板）负责运行转发相关协议、维护转发表项，转发平面组件（接口板）依据控制层面下发的转发信息能供独立完成转发工作，互不影响，控制层面组件高负载时并不会影响转发平面的正常工作，这种工作机制被成为转控分离。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG\" alt=\"转发信息\"></p>\n<p>业务报文转发由接口板、交换网板独立完成，无主控板参与。</p>\n<br>\n\n<h2 id=\"8-协议报文转发处理流程\"><a href=\"#8-协议报文转发处理流程\" class=\"headerlink\" title=\"8.协议报文转发处理流程\"></a>8.协议报文转发处理流程</h2><p>设备收到的协议报文，如路由协议：<br>OSPF、IS-IS、BGP报文，ARP报文，STP报文，对设备的ICMP请求报文等，需要交由设备的控制平面处理，即上送主控板由主控板的CPU进行处理。</p>\n<p>1 - 主控板CPU收到协议报文之后进行相应的处理之后如果需要回应报文，则主控板会构造协议报文进行回应，如收到发往自身的ARP Request、ICMP Echo Request报文，主控板处理之后构造ARP Reply、ICMP Echo Reply进行回应。</p>\n<p>2 - 主控板CPU处理能力有限，如果过多的协议报文上送主控板CPU处理，会造成其繁忙，无法及时对协议报文进行响应，为此设备默认限制了各种类型的协议报文上送主控板CPU的速率。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG\" alt=\"协议报文转发处理流程\"></p>\n<br>\n\n<h2 id=\"9-设备自身发送协议报文处理流程\"><a href=\"#9-设备自身发送协议报文处理流程\" class=\"headerlink\" title=\"9.设备自身发送协议报文处理流程\"></a>9.设备自身发送协议报文处理流程</h2><p>设备自身发送的协议报文，如路由协议报文：<br>OSPF、IS-IS、BGP报文，ARP报文，STP报文，ICMP报文等，由主控板CPU构造之后交由接口板对外发送</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E8%87%AA%E8%BA%AB%E5%8F%91%E9%80%81%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG\" alt=\"设备自身发送协议报文处理流程\"></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h1 id=\"Ⅰ-网络设备框架\"><a href=\"#Ⅰ-网络设备框架\" class=\"headerlink\" title=\"Ⅰ- 网络设备框架\"></a>Ⅰ- 网络设备框架</h1><h2 id=\"1-框式设备硬件模块\"><a href=\"#1-框式设备硬件模块\" class=\"headerlink\" title=\"1.框式设备硬件模块\"></a>1.框式设备硬件模块</h2><p>为了方便理解网络设备内部的各个功能模块以S12700E-8为例来讲解典型网络设备框架：</p>\n<p>如下图所示：<br>1 - 主控板（MPU，Main Processing Unit）：<br>负责整个系统的控制平面和管理平面。</p>\n<p>2 - 交换网板（SFU，Switch Fabric Unit）：<br>负责整个系统的数据平面。数据面提供高速无阻塞数据通道，实现各个业务模块之间的业务交换功能。交换网板，接口板上都有自己的管理芯片，与主控板共同组成整个设备的管理控制平面。</p>\n<p>3 - 接口板（LPU，Line Processing Unit）：<br>线路处理单元是物理设备上用提供数据转发功能的模块，提供不同速率的光口、电口。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/S12700E-8.PNG\" alt=\"S12700E-8\"></p>\n<h4 id=\"1-1-主控板\"><a href=\"#1-1-主控板\" class=\"headerlink\" title=\"1.1.主控板\"></a>1.1.主控板</h4><p>提供了整个系统的控制平面和管理平面：</p>\n<p>1 - 控制平面完成系统的协议处理、业务处理、路由计算、转发控制、业务调度、流量统计、系统安全等功能。</p>\n<p>2 - 管理平面完成系统的运行状态监控、环境监控、日志和告警信息处理、系统加载、系统升级等功能。</p>\n<h4 id=\"1-2-交换网板\"><a href=\"#1-2-交换网板\" class=\"headerlink\" title=\"1.2.交换网板\"></a>1.2.交换网板</h4><p>交换网板提供整个系统的数据平面。</p>\n<p>接口板、主控板之间通过交换网板完成通信。</p>\n<h4 id=\"1-3-接口板\"><a href=\"#1-3-接口板\" class=\"headerlink\" title=\"1.3.接口板\"></a>1.3.接口板</h4><p>接口板提供了不同类型（光口、电口），不同速率的接入接口，通过分布式数据平面对数据进行转发</p>\n<br>\n\n<h2 id=\"2-盒式设备硬件模块\"><a href=\"#2-盒式设备硬件模块\" class=\"headerlink\" title=\"2.盒式设备硬件模块\"></a>2.盒式设备硬件模块</h2><p>不同于框式设备，盒式设备的各个业务模块并不是独立的硬件模块，而是集成在一个框内。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%92%E5%BC%8F%E8%AE%BE%E5%A4%87.PNG\" alt=\"盒式设备\"></p>\n<br>\n\n<h2 id=\"3-模块连接逻辑图\"><a href=\"#3-模块连接逻辑图\" class=\"headerlink\" title=\"3.模块连接逻辑图\"></a>3.模块连接逻辑图</h2><p>1 - 框式设备各个模块分为不同的单板，单板之间通过框式设备内部的连接进行通信。</p>\n<p>2 - 盒式设备内部集成了这些模块，各个模块之间同样也是通过内部连接进行通信。</p>\n<p>3 - 接口板和接口板之间通过交换网板连接了起来，接口板之间的通信统一经由交换网板进行转发。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E9%80%BB%E8%BE%91%E5%9B%BE.PNG\" alt=\"模块连接逻辑图\"></p>\n<br>\n\n<h2 id=\"4-网络设备逻辑构架\"><a href=\"#4-网络设备逻辑构架\" class=\"headerlink\" title=\"4.网络设备逻辑构架\"></a>4.网络设备逻辑构架</h2><p>网络设备从逻辑上可以分为以下三个平面：</p>\n<p>数据平面、控制管理平面和监控平面。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%80%BB%E8%BE%91%E6%9E%84%E6%9E%B6.PNG\" alt=\"网络设备逻辑构架\"></p>\n<br>\n\n<h2 id=\"5-控制平面\"><a href=\"#5-控制平面\" class=\"headerlink\" title=\"5.控制平面\"></a>5.控制平面</h2><p>1 - 设备的控制平面由主控板以及接口板的管理单元组成。</p>\n<p>2 - 控制管理平面完成系统的控制管理功能，是整个系统的中枢神经系统。</p>\n<p>3 - 控制平面完成系统的协议处理、业务处理、路由运算、转发控制、业务调度、流量统计、系统安全等功能。</p>\n<p>4 - 交换机的控制平面用于控制和管理所有网络协议的运行。</p>\n<p>5 - 控制平面提供了数据平面数据处理转发前所必须的各种网络信息和转发查询表项。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.PNG\" alt=\"控制平面\"></p>\n<br>\n\n<h2 id=\"6-转发平面\"><a href=\"#6-转发平面\" class=\"headerlink\" title=\"6.转发平面\"></a>6.转发平面</h2><p>1 - 设备的转发平面由交换网板及接口组成</p>\n<p>2 - LPU上存在PEE（转发引擎），其本质也是一个交换芯片，完成本接口板端口之间的交换。</p>\n<p>3 - 数据平面完成数据报文的高速处理和内部无阻塞交换。包括报文的封装与解封装、IPv4/IPv6/MPLS转发处理、QoS与调度处理、内部高速交换以及各种统计。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E5%B9%B3%E9%9D%A2.PNG\" alt=\"转发平面\"></p>\n<h2 id=\"7-监控平面\"><a href=\"#7-监控平面\" class=\"headerlink\" title=\"7.监控平面\"></a>7.监控平面</h2><p>1 - 监控平面由主控板、接口板的监控单元构成，部分框式设备还会存在单独的集中监控板（CMU）。</p>\n<p>2 - 监控平面独立完成系统的环境监控，包括电压检测、系统上下电控制、温度监测与风扇控制等、以保证系统的安全稳定运行，在出现单元故障的情况下及时隔离故障，保障系统其他部分的正常运行。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%91%E6%8E%A7%E5%B9%B3%E9%9D%A2.PNG\" alt=\"监控平面\"><br><br></p>\n<h1 id=\"Ⅱ-网络设备对报文的处理流程\"><a href=\"#Ⅱ-网络设备对报文的处理流程\" class=\"headerlink\" title=\"Ⅱ - 网络设备对报文的处理流程\"></a>Ⅱ - 网络设备对报文的处理流程</h1><h2 id=\"1-报文转发上行、下行\"><a href=\"#1-报文转发上行、下行\" class=\"headerlink\" title=\"1.报文转发上行、下行\"></a>1.报文转发上行、下行</h2><p>以交换网板为中心，可将报文在设备的行程一分为二，前半程为“上行”，下半程为“下行”。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E6%8A%A5%E6%96%87%E4%B8%8A%E8%A1%8C%E3%80%81%E4%B8%8B%E8%A1%8C.PNG\" alt=\"转发报文上行、下行\"></p>\n<p>1 - 设备处理报文分类：一种是业务报文，一种是协议报文。</p>\n<p>2 - 对于业务报文设备只会进行转发，从一个接口进入之后依据转发表项从另外一个接口发送出去。</p>\n<p>3 - 协议报文（如ARP、OSPF、BGP等协议的报文）设备在收到之后会交由控制层面进行处理，如ARP报文交由控制层面处理、判断之后决定是否回应，是否学习ARP报文中的源MAC、源IP。</p>\n<br>\n\n<h2 id=\"2-业务报文转发处理流程\"><a href=\"#2-业务报文转发处理流程\" class=\"headerlink\" title=\"2.业务报文转发处理流程\"></a>2.业务报文转发处理流程</h2><p>业务报文从接口进入上行接口板处理之后，通过框式交换机内部总线交由交换网板，交换网板交由下行接口板处理之后从接口发出去。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E4%B8%9A%E5%8A%A1%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG\" alt=\"业务报文转发处理流程\"></p>\n<p>1 - PFE（Packet Forwarding Engine）：包转发引擎。</p>\n<p>2 - 业务报文：服务、应用在交互过程中涉及的报文。</p>\n<p>3 - 切片：把报文送往交换网板之前，进行切片处理，也就是把报文按一定粒度进行切片，切成固定长度</p>\n<p>4 - 重组：将交换网板发送过来的已经切片的报文进行重新组合</p>\n<br>\n\n<h2 id=\"3-确定报文出口（1）\"><a href=\"#3-确定报文出口（1）\" class=\"headerlink\" title=\"3.确定报文出口（1）\"></a>3.确定报文出口（1）</h2><p>1 - 当报文从接口板进入时，设备需要依据转发表项（IP路由表、MAC地址表等）确定报文的出接口（对于框式设备需要确定下行接口板）。</p>\n<p>2 - 报文到达交换网板时已经明确了出接口、下行接口板，因此表项查询需要在上行接口板的处理过程中完成。</p>\n<p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%881%EF%BC%89.PNG\" alt=\"确定报文出口（1）\"></p>\n<br>\n\n<h2 id=\"4-确定报文出口（2）\"><a href=\"#4-确定报文出口（2）\" class=\"headerlink\" title=\"4.确定报文出口（2）\"></a>4.确定报文出口（2）</h2><p>1 - 转发表项存放在主控板上，报文进入接口板之后，接口板从主控板处查询表项。</p>\n<p>2 - 每次转发都需要与主控板进行通信，转发效率低，报文时延增加，对高速率接口板而言转发速率严重下跌。</p>\n<p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表</p>\n<br>\n\n<h2 id=\"5-确定报文出口（3）\"><a href=\"#5-确定报文出口（3）\" class=\"headerlink\" title=\"5.确定报文出口（3）\"></a>5.确定报文出口（3）</h2><p>1 - 转发表项存放在接口板上，报文进入接口板之后直接在接口板完成报文查询，报文转发效率高。</p>\n<p>2 - 所有接口板上都要存储转发表项，控制平面资源占用率高。</p>\n<p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%883%EF%BC%89.PNG\" alt=\"确定报文出口（3）\"></p>\n<br>\n\n<h2 id=\"6-转发信息\"><a href=\"#6-转发信息\" class=\"headerlink\" title=\"6.转发信息\"></a>6.转发信息</h2><p>1 - 高端设备业务报文不经过主控板CPU处理，由接口板提供转发信息查询。</p>\n<p>2 - 接口板上存在的转发信息并非存在于主控板上的转发表项（IP路由表、MAC地址表…）。主控板生成转发表项之后，生成对应的转发信息下发在接口板。 </p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG\" alt=\"转发信息\"></p>\n<p>以IP路由表为例，路由表生成之后，主控板根据路由表生成FIP表项（Forwarding Information Base）并下发到接口板，接口板根据FIB表进行转发。</p>\n<br>\n\n<h2 id=\"7-硬件转发\"><a href=\"#7-硬件转发\" class=\"headerlink\" title=\"7.硬件转发\"></a>7.硬件转发</h2><p>1 - 接口板执行转发的不见为包转发引擎PFE（Packet Forwarding Engine），通常为NP或者ASIC芯片，报文直接由接口板独立完成转发，无需主控板参与。</p>\n<p>2 - 高端框式设备把转发层面和控制层面分配在不同的组件，控制层面组件（主控板）负责运行转发相关协议、维护转发表项，转发平面组件（接口板）依据控制层面下发的转发信息能供独立完成转发工作，互不影响，控制层面组件高负载时并不会影响转发平面的正常工作，这种工作机制被成为转控分离。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG\" alt=\"转发信息\"></p>\n<p>业务报文转发由接口板、交换网板独立完成，无主控板参与。</p>\n<br>\n\n<h2 id=\"8-协议报文转发处理流程\"><a href=\"#8-协议报文转发处理流程\" class=\"headerlink\" title=\"8.协议报文转发处理流程\"></a>8.协议报文转发处理流程</h2><p>设备收到的协议报文，如路由协议：<br>OSPF、IS-IS、BGP报文，ARP报文，STP报文，对设备的ICMP请求报文等，需要交由设备的控制平面处理，即上送主控板由主控板的CPU进行处理。</p>\n<p>1 - 主控板CPU收到协议报文之后进行相应的处理之后如果需要回应报文，则主控板会构造协议报文进行回应，如收到发往自身的ARP Request、ICMP Echo Request报文，主控板处理之后构造ARP Reply、ICMP Echo Reply进行回应。</p>\n<p>2 - 主控板CPU处理能力有限，如果过多的协议报文上送主控板CPU处理，会造成其繁忙，无法及时对协议报文进行响应，为此设备默认限制了各种类型的协议报文上送主控板CPU的速率。</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG\" alt=\"协议报文转发处理流程\"></p>\n<br>\n\n<h2 id=\"9-设备自身发送协议报文处理流程\"><a href=\"#9-设备自身发送协议报文处理流程\" class=\"headerlink\" title=\"9.设备自身发送协议报文处理流程\"></a>9.设备自身发送协议报文处理流程</h2><p>设备自身发送的协议报文，如路由协议报文：<br>OSPF、IS-IS、BGP报文，ARP报文，STP报文，ICMP报文等，由主控板CPU构造之后交由接口板对外发送</p>\n<p><img src=\"/images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E8%87%AA%E8%BA%AB%E5%8F%91%E9%80%81%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG\" alt=\"设备自身发送协议报文处理流程\"></p>\n"},{"title":"2、IP路由基础","date":"2022-11-03T19:45:42.000Z","typora-root-url":"..","_content":"\n# 前言\n\n**·** 当路由器收到一个IP数据包，路由器会根据数据包的目的IP地址查找FIB（Forwarding Information Base，转发信息库）表，找到“最匹配”的路由条目后，将数据包根据路由条目所指示的出接口或下一跳转发出去。\n\n<br>\n\n**·** 路由器获取路由的方式有三种，分别是动态路由、静态路由、直连路由。一个网络中可能会同时存在这三种方式，那么采用不同方式获取路由的路由器之间如何实现路由可达？\n\n<br>\n\n# Ⅰ - IP路由基础\n\n## 1.IP路由概述\n\n当路由器收到一个IP报文时，路由器根据该IP报文的目的地址匹配路由条目（或路由表项）。\n\n**·**  若有匹配的路由条目，则依据该条目中的出接口或下一跳等信息进行报文转发。\n\n**·**  若无匹配的路由条目，则路由器没有相关路由信息用于指导报文转发，此时会丢弃该报文。\n\n<br>\n\n## 2.RIP与FIB\n\n具有**路由**功能的网络设备都拥有两中国重要的数据表：\n\n**·**  路由表——RIB（Routing Information Base，路由信息库）\n\n**·**  转发表——FIB（Forwarding Information Base，转发信息库）\n\n**·**  路由器维护一张本地核心路由表，此外还维护着各种路由协议的路由表\n\n```c#\ndisplay ip routing-table   //路由表\n```\n\n![路由表](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8.PNG)\n\n可以将路由表视为路由器的控制平面，路由表实际上并不直接指导数据转发。路由器在执行路由表查询时，并不是在路由表中进行报文目的地址的查询，真正指导数据转发的时FIB表，路由器将路由表中的最优路由下载到FIB表，此后如果路由表中的相关表项发生变化，FIB表也将立即同步。 在大多数场合，阐述路由器数据转发过程时，会用**“路由表”**这个说法，实际上，路由器查询的时FIB表，路由表位于控制层面仅提供路由信息。\n\n<br>\n\n```c#\ndisplay fib [ slot-id ]   //转发表（FIB表）[ slot-id ]：显示指定槽位号的FIB表信息，取值范围根据实际配置选取\n```\n\n![转发表](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%BD%AC%E5%8F%91%E8%A1%A8.PNG)\n\n FIB表位于路由器的数据平面，亦被称为转发表项，每条转发表项都指定要到达某个目的地所需通过的出接口以及下一跳IP地址等信息。\n\n<br>\n\n## 3.路由表中的关键字段\n\n![路由表中的关键字段](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG)\n\n```c#\nDestination   //表示此路由的目的地址，用来标识IP包的目的地址或目的网络\nMask   //表示此目的地址的子网掩码长度。与目的地址一起来标识目的主机或路由器所在的网段的地址。\nProto   //表示学习此路由的路由协议（Protocol）\nPre   //表示此路由的路由协议优先级（Prefrence）\nCost   //路由开销\nNextHop   //表示转发到此目的网络的下一跳，指明数据转发的下一个设备。\nInterface   //表示转发到此目的网络的出接口，指明数据将从本地路由器哪个接口转发出去。\n```\n\n**注意：**\n\n**·**  路由器分别定义了外部优先级和内部优先级。外部优先级可手动配置，反之内部优先级不可手动修改。\n\n**·**  选择路由时先比较外部优先级，当不同的路由协议配置了相同的外部优先级时，系统会通过内部优先级决定哪个路由协议发现的路由将成为最优路由。\n\n**·**  `Preference`用于不同路由协议间路由优先级的比较，`Cost`用于同一种路由协议内部不同路由的优先级的比较。\n\n<br>\n\n## 4.FIB表中的关键字段\n\n![FIB表中的关键字段](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/FIB%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG)\n\n```c#\nTitak number of Routes   //路由表总数\nDestination/Mask   //目的地址/掩码长度\nNexthop   //下一跳\nFlag   //当前标志，G、H、U、S、D、B的组合\n   G   // [ Gateway ] 网关路由，表示下一跳是网关\n   H   // [ Host ] 主机路由，表示该路由为主机路由\n   U   // [ Up ] 可用路由，表示该路由状态时UP\n   S   // [ Static ] 静态路由\n   D   // [ Dynamic ] 动态路由\n   B   // [ Black Hole ] 黑洞路由，表示下一跳是空接口\nTimeStamp   //时间戳，表示该表项存在的时间，单位是秒\nInterface   //到目的地址的出接口\nTunnelID   //表示转发表项索引，该值不为0时，表示该项的报文通过隧道转发（如：MPLS隧道转发），该值为0时，表示报文不通过隧道转发。\n```\n\n<br>\n\n## 5.IP路由查找的最长匹配原则\n\n**·**  路由器查找FIB表时，将报文的目的IP地址和FIB表中各表项的掩码位进行**“逻辑与”**，得到的地址符合FIB表中的网络地址则匹配。\n\n**·**  最终选择一个掩码最长的FIB表转发报文。\n\n<br>\n\n## 6.路由的来源\n\n![路由的来源](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E7%9A%84%E6%9D%A5%E6%BA%90.PNG)\n\n**·**  直连路由：直连接口所在网段的路由，由设备自动生成。\n\n**·**  静态路由：由网络管理员手工配置的路由条目。\n\n**·**  路由器通过动态路由协议（OSPF、IS-IS、BGP等）学习到的路由。\n\n<br>\n\n##  7.动态路由协议\n\n动态路由协议根据作用范围不同可分为：\n\n**·**  内部网关协议IGP（Internal Gateway Protocol）：在一个自治系统`AS`内部运行\n\n**·**  外部网关协议EGP（Exterior Gateway Protocol）：运行于不同自治系统之间，BGP时目前最常用的EGP协议。\n\n![动态路由协议](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE.PNG)\n\n<br>\n\n## 8.路由迭代\n\n路由必须有智联的下一跳才能够转发，静态路由或BGP路由的下一跳可能不是直连的邻居，因此需要计算出一个直连的下一跳，这个过程称为路由迭代。\n\n![路由迭代](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%BF%AD%E4%BB%A3.PNG)\n\n<br>\n\n# Ⅱ - IP路由高级应用\n\n## 9.路由引入\n\n路由引入是指将路由信息从一种路由协议发布到另一种路由协议的操作。\n\n**·**  通过路由引入，可以实现路由信息在不同路由协议间传递。\n\n**·**  执行路由引入时，还可以部署路由控制，从而实现对业务流量的灵活把控。\n\n**·**  在路由引入时，如果将A协议路由引入到B协议路由，那么要在B协议路由中进行引入配置\n\n**·**  在路由引入时需注意：\n\n1、路由的优先级\n\n2、路由回灌\n\n3、路由度量值\n\n命令：\n\n```c#\n[Huawei-ospf-100] import-route {bgp | direct | static | isis [ process-id-isis ] | ospf [ process-id-ospf ]}\n//在OSPF视图下，引入BGP/直连/静态/IS-IS/OSPF其他进程路由。\n```\n\n## 10.路由优先级\n\n华为定义的路由优先级：\n\n```c#\nDirect：0\nOSPF：10\nIS-IS：15\nStatic：60\nOSPF ASE：150\nOSPF NSSA：150\nIBGP：255\nEBGP：255\n//不同厂商定义的优先级可能不同\n```\n\n## 11.路由回灌\n\n![路由回灌](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%9B%9E%E7%81%8C.PNG)\n\n**·**  R1将直连路由10.1.1.0/24引入到OSPF中。\n\n**·**  10.1.1.0/24网段路由全OSPF域内通告。\n\n**·**  R2在IS-IS进程中引入OSPF路由。\n\n**·**  10.1.1.0/24网段路由全IS-IS域内通告。\n\n**·**  R3在OSPF进程中引入IS-IS路由。\n\n**·**  10.1.1.0/24网段路由再次被通告进OSPF域内，形成路由回灌。\n\n## 12.路由度量值\n\n![路由度量值](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%BA%A6%E9%87%8F%E5%80%BC.PNG)\n\n**·**  不同的路由协议对路由度量值的定义不同，在引入时要考虑到度量值的定义。","source":"_posts/HCIP_datacom/3.HCIP-datacom IP路由基础.md","raw":"---\n\ntitle: 2、IP路由基础\ndate: 2022-11-04 03:45:42\ntags: HCIP-datacom\ncategories: HCIP-datacom\ntypora-root-url: ..\n\n---\n\n# 前言\n\n**·** 当路由器收到一个IP数据包，路由器会根据数据包的目的IP地址查找FIB（Forwarding Information Base，转发信息库）表，找到“最匹配”的路由条目后，将数据包根据路由条目所指示的出接口或下一跳转发出去。\n\n<br>\n\n**·** 路由器获取路由的方式有三种，分别是动态路由、静态路由、直连路由。一个网络中可能会同时存在这三种方式，那么采用不同方式获取路由的路由器之间如何实现路由可达？\n\n<br>\n\n# Ⅰ - IP路由基础\n\n## 1.IP路由概述\n\n当路由器收到一个IP报文时，路由器根据该IP报文的目的地址匹配路由条目（或路由表项）。\n\n**·**  若有匹配的路由条目，则依据该条目中的出接口或下一跳等信息进行报文转发。\n\n**·**  若无匹配的路由条目，则路由器没有相关路由信息用于指导报文转发，此时会丢弃该报文。\n\n<br>\n\n## 2.RIP与FIB\n\n具有**路由**功能的网络设备都拥有两中国重要的数据表：\n\n**·**  路由表——RIB（Routing Information Base，路由信息库）\n\n**·**  转发表——FIB（Forwarding Information Base，转发信息库）\n\n**·**  路由器维护一张本地核心路由表，此外还维护着各种路由协议的路由表\n\n```c#\ndisplay ip routing-table   //路由表\n```\n\n![路由表](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8.PNG)\n\n可以将路由表视为路由器的控制平面，路由表实际上并不直接指导数据转发。路由器在执行路由表查询时，并不是在路由表中进行报文目的地址的查询，真正指导数据转发的时FIB表，路由器将路由表中的最优路由下载到FIB表，此后如果路由表中的相关表项发生变化，FIB表也将立即同步。 在大多数场合，阐述路由器数据转发过程时，会用**“路由表”**这个说法，实际上，路由器查询的时FIB表，路由表位于控制层面仅提供路由信息。\n\n<br>\n\n```c#\ndisplay fib [ slot-id ]   //转发表（FIB表）[ slot-id ]：显示指定槽位号的FIB表信息，取值范围根据实际配置选取\n```\n\n![转发表](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%BD%AC%E5%8F%91%E8%A1%A8.PNG)\n\n FIB表位于路由器的数据平面，亦被称为转发表项，每条转发表项都指定要到达某个目的地所需通过的出接口以及下一跳IP地址等信息。\n\n<br>\n\n## 3.路由表中的关键字段\n\n![路由表中的关键字段](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG)\n\n```c#\nDestination   //表示此路由的目的地址，用来标识IP包的目的地址或目的网络\nMask   //表示此目的地址的子网掩码长度。与目的地址一起来标识目的主机或路由器所在的网段的地址。\nProto   //表示学习此路由的路由协议（Protocol）\nPre   //表示此路由的路由协议优先级（Prefrence）\nCost   //路由开销\nNextHop   //表示转发到此目的网络的下一跳，指明数据转发的下一个设备。\nInterface   //表示转发到此目的网络的出接口，指明数据将从本地路由器哪个接口转发出去。\n```\n\n**注意：**\n\n**·**  路由器分别定义了外部优先级和内部优先级。外部优先级可手动配置，反之内部优先级不可手动修改。\n\n**·**  选择路由时先比较外部优先级，当不同的路由协议配置了相同的外部优先级时，系统会通过内部优先级决定哪个路由协议发现的路由将成为最优路由。\n\n**·**  `Preference`用于不同路由协议间路由优先级的比较，`Cost`用于同一种路由协议内部不同路由的优先级的比较。\n\n<br>\n\n## 4.FIB表中的关键字段\n\n![FIB表中的关键字段](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/FIB%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG)\n\n```c#\nTitak number of Routes   //路由表总数\nDestination/Mask   //目的地址/掩码长度\nNexthop   //下一跳\nFlag   //当前标志，G、H、U、S、D、B的组合\n   G   // [ Gateway ] 网关路由，表示下一跳是网关\n   H   // [ Host ] 主机路由，表示该路由为主机路由\n   U   // [ Up ] 可用路由，表示该路由状态时UP\n   S   // [ Static ] 静态路由\n   D   // [ Dynamic ] 动态路由\n   B   // [ Black Hole ] 黑洞路由，表示下一跳是空接口\nTimeStamp   //时间戳，表示该表项存在的时间，单位是秒\nInterface   //到目的地址的出接口\nTunnelID   //表示转发表项索引，该值不为0时，表示该项的报文通过隧道转发（如：MPLS隧道转发），该值为0时，表示报文不通过隧道转发。\n```\n\n<br>\n\n## 5.IP路由查找的最长匹配原则\n\n**·**  路由器查找FIB表时，将报文的目的IP地址和FIB表中各表项的掩码位进行**“逻辑与”**，得到的地址符合FIB表中的网络地址则匹配。\n\n**·**  最终选择一个掩码最长的FIB表转发报文。\n\n<br>\n\n## 6.路由的来源\n\n![路由的来源](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E7%9A%84%E6%9D%A5%E6%BA%90.PNG)\n\n**·**  直连路由：直连接口所在网段的路由，由设备自动生成。\n\n**·**  静态路由：由网络管理员手工配置的路由条目。\n\n**·**  路由器通过动态路由协议（OSPF、IS-IS、BGP等）学习到的路由。\n\n<br>\n\n##  7.动态路由协议\n\n动态路由协议根据作用范围不同可分为：\n\n**·**  内部网关协议IGP（Internal Gateway Protocol）：在一个自治系统`AS`内部运行\n\n**·**  外部网关协议EGP（Exterior Gateway Protocol）：运行于不同自治系统之间，BGP时目前最常用的EGP协议。\n\n![动态路由协议](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE.PNG)\n\n<br>\n\n## 8.路由迭代\n\n路由必须有智联的下一跳才能够转发，静态路由或BGP路由的下一跳可能不是直连的邻居，因此需要计算出一个直连的下一跳，这个过程称为路由迭代。\n\n![路由迭代](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%BF%AD%E4%BB%A3.PNG)\n\n<br>\n\n# Ⅱ - IP路由高级应用\n\n## 9.路由引入\n\n路由引入是指将路由信息从一种路由协议发布到另一种路由协议的操作。\n\n**·**  通过路由引入，可以实现路由信息在不同路由协议间传递。\n\n**·**  执行路由引入时，还可以部署路由控制，从而实现对业务流量的灵活把控。\n\n**·**  在路由引入时，如果将A协议路由引入到B协议路由，那么要在B协议路由中进行引入配置\n\n**·**  在路由引入时需注意：\n\n1、路由的优先级\n\n2、路由回灌\n\n3、路由度量值\n\n命令：\n\n```c#\n[Huawei-ospf-100] import-route {bgp | direct | static | isis [ process-id-isis ] | ospf [ process-id-ospf ]}\n//在OSPF视图下，引入BGP/直连/静态/IS-IS/OSPF其他进程路由。\n```\n\n## 10.路由优先级\n\n华为定义的路由优先级：\n\n```c#\nDirect：0\nOSPF：10\nIS-IS：15\nStatic：60\nOSPF ASE：150\nOSPF NSSA：150\nIBGP：255\nEBGP：255\n//不同厂商定义的优先级可能不同\n```\n\n## 11.路由回灌\n\n![路由回灌](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%9B%9E%E7%81%8C.PNG)\n\n**·**  R1将直连路由10.1.1.0/24引入到OSPF中。\n\n**·**  10.1.1.0/24网段路由全OSPF域内通告。\n\n**·**  R2在IS-IS进程中引入OSPF路由。\n\n**·**  10.1.1.0/24网段路由全IS-IS域内通告。\n\n**·**  R3在OSPF进程中引入IS-IS路由。\n\n**·**  10.1.1.0/24网段路由再次被通告进OSPF域内，形成路由回灌。\n\n## 12.路由度量值\n\n![路由度量值](/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%BA%A6%E9%87%8F%E5%80%BC.PNG)\n\n**·**  不同的路由协议对路由度量值的定义不同，在引入时要考虑到度量值的定义。","slug":"HCIP_datacom/3.HCIP-datacom IP路由基础","published":1,"updated":"2023-05-06T02:56:27.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1k0009ncm26n459okt","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>·</strong> 当路由器收到一个IP数据包，路由器会根据数据包的目的IP地址查找FIB（Forwarding Information Base，转发信息库）表，找到“最匹配”的路由条目后，将数据包根据路由条目所指示的出接口或下一跳转发出去。</p>\n<br>\n\n<p><strong>·</strong> 路由器获取路由的方式有三种，分别是动态路由、静态路由、直连路由。一个网络中可能会同时存在这三种方式，那么采用不同方式获取路由的路由器之间如何实现路由可达？</p>\n<br>\n\n<h1 id=\"Ⅰ-IP路由基础\"><a href=\"#Ⅰ-IP路由基础\" class=\"headerlink\" title=\"Ⅰ - IP路由基础\"></a>Ⅰ - IP路由基础</h1><h2 id=\"1-IP路由概述\"><a href=\"#1-IP路由概述\" class=\"headerlink\" title=\"1.IP路由概述\"></a>1.IP路由概述</h2><p>当路由器收到一个IP报文时，路由器根据该IP报文的目的地址匹配路由条目（或路由表项）。</p>\n<p><strong>·</strong>  若有匹配的路由条目，则依据该条目中的出接口或下一跳等信息进行报文转发。</p>\n<p><strong>·</strong>  若无匹配的路由条目，则路由器没有相关路由信息用于指导报文转发，此时会丢弃该报文。</p>\n<br>\n\n<h2 id=\"2-RIP与FIB\"><a href=\"#2-RIP与FIB\" class=\"headerlink\" title=\"2.RIP与FIB\"></a>2.RIP与FIB</h2><p>具有<strong>路由</strong>功能的网络设备都拥有两中国重要的数据表：</p>\n<p><strong>·</strong>  路由表——RIB（Routing Information Base，路由信息库）</p>\n<p><strong>·</strong>  转发表——FIB（Forwarding Information Base，转发信息库）</p>\n<p><strong>·</strong>  路由器维护一张本地核心路由表，此外还维护着各种路由协议的路由表</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display ip routing-table   <span class=\"comment\">//路由表</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8.PNG\" alt=\"路由表\"></p>\n<p>可以将路由表视为路由器的控制平面，路由表实际上并不直接指导数据转发。路由器在执行路由表查询时，并不是在路由表中进行报文目的地址的查询，真正指导数据转发的时FIB表，路由器将路由表中的最优路由下载到FIB表，此后如果路由表中的相关表项发生变化，FIB表也将立即同步。 在大多数场合，阐述路由器数据转发过程时，会用<strong>“路由表”</strong>这个说法，实际上，路由器查询的时FIB表，路由表位于控制层面仅提供路由信息。</p>\n<br>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display fib [ slot-id ]   <span class=\"comment\">//转发表（FIB表）[ slot-id ]：显示指定槽位号的FIB表信息，取值范围根据实际配置选取</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%BD%AC%E5%8F%91%E8%A1%A8.PNG\" alt=\"转发表\"></p>\n<p> FIB表位于路由器的数据平面，亦被称为转发表项，每条转发表项都指定要到达某个目的地所需通过的出接口以及下一跳IP地址等信息。</p>\n<br>\n\n<h2 id=\"3-路由表中的关键字段\"><a href=\"#3-路由表中的关键字段\" class=\"headerlink\" title=\"3.路由表中的关键字段\"></a>3.路由表中的关键字段</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG\" alt=\"路由表中的关键字段\"></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Destination   <span class=\"comment\">//表示此路由的目的地址，用来标识IP包的目的地址或目的网络</span></span><br><span class=\"line\">Mask   <span class=\"comment\">//表示此目的地址的子网掩码长度。与目的地址一起来标识目的主机或路由器所在的网段的地址。</span></span><br><span class=\"line\">Proto   <span class=\"comment\">//表示学习此路由的路由协议（Protocol）</span></span><br><span class=\"line\">Pre   <span class=\"comment\">//表示此路由的路由协议优先级（Prefrence）</span></span><br><span class=\"line\">Cost   <span class=\"comment\">//路由开销</span></span><br><span class=\"line\">NextHop   <span class=\"comment\">//表示转发到此目的网络的下一跳，指明数据转发的下一个设备。</span></span><br><span class=\"line\">Interface   <span class=\"comment\">//表示转发到此目的网络的出接口，指明数据将从本地路由器哪个接口转发出去。</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong></p>\n<p><strong>·</strong>  路由器分别定义了外部优先级和内部优先级。外部优先级可手动配置，反之内部优先级不可手动修改。</p>\n<p><strong>·</strong>  选择路由时先比较外部优先级，当不同的路由协议配置了相同的外部优先级时，系统会通过内部优先级决定哪个路由协议发现的路由将成为最优路由。</p>\n<p><strong>·</strong>  <code>Preference</code>用于不同路由协议间路由优先级的比较，<code>Cost</code>用于同一种路由协议内部不同路由的优先级的比较。</p>\n<br>\n\n<h2 id=\"4-FIB表中的关键字段\"><a href=\"#4-FIB表中的关键字段\" class=\"headerlink\" title=\"4.FIB表中的关键字段\"></a>4.FIB表中的关键字段</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/FIB%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG\" alt=\"FIB表中的关键字段\"></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Titak number of Routes   <span class=\"comment\">//路由表总数</span></span><br><span class=\"line\">Destination/Mask   <span class=\"comment\">//目的地址/掩码长度</span></span><br><span class=\"line\">Nexthop   <span class=\"comment\">//下一跳</span></span><br><span class=\"line\">Flag   <span class=\"comment\">//当前标志，G、H、U、S、D、B的组合</span></span><br><span class=\"line\">   G   <span class=\"comment\">// [ Gateway ] 网关路由，表示下一跳是网关</span></span><br><span class=\"line\">   H   <span class=\"comment\">// [ Host ] 主机路由，表示该路由为主机路由</span></span><br><span class=\"line\">   U   <span class=\"comment\">// [ Up ] 可用路由，表示该路由状态时UP</span></span><br><span class=\"line\">   S   <span class=\"comment\">// [ Static ] 静态路由</span></span><br><span class=\"line\">   D   <span class=\"comment\">// [ Dynamic ] 动态路由</span></span><br><span class=\"line\">   B   <span class=\"comment\">// [ Black Hole ] 黑洞路由，表示下一跳是空接口</span></span><br><span class=\"line\">TimeStamp   <span class=\"comment\">//时间戳，表示该表项存在的时间，单位是秒</span></span><br><span class=\"line\">Interface   <span class=\"comment\">//到目的地址的出接口</span></span><br><span class=\"line\">TunnelID   <span class=\"comment\">//表示转发表项索引，该值不为0时，表示该项的报文通过隧道转发（如：MPLS隧道转发），该值为0时，表示报文不通过隧道转发。</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"5-IP路由查找的最长匹配原则\"><a href=\"#5-IP路由查找的最长匹配原则\" class=\"headerlink\" title=\"5.IP路由查找的最长匹配原则\"></a>5.IP路由查找的最长匹配原则</h2><p><strong>·</strong>  路由器查找FIB表时，将报文的目的IP地址和FIB表中各表项的掩码位进行<strong>“逻辑与”</strong>，得到的地址符合FIB表中的网络地址则匹配。</p>\n<p><strong>·</strong>  最终选择一个掩码最长的FIB表转发报文。</p>\n<br>\n\n<h2 id=\"6-路由的来源\"><a href=\"#6-路由的来源\" class=\"headerlink\" title=\"6.路由的来源\"></a>6.路由的来源</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E7%9A%84%E6%9D%A5%E6%BA%90.PNG\" alt=\"路由的来源\"></p>\n<p><strong>·</strong>  直连路由：直连接口所在网段的路由，由设备自动生成。</p>\n<p><strong>·</strong>  静态路由：由网络管理员手工配置的路由条目。</p>\n<p><strong>·</strong>  路由器通过动态路由协议（OSPF、IS-IS、BGP等）学习到的路由。</p>\n<br>\n\n<h2 id=\"7-动态路由协议\"><a href=\"#7-动态路由协议\" class=\"headerlink\" title=\"7.动态路由协议\"></a>7.动态路由协议</h2><p>动态路由协议根据作用范围不同可分为：</p>\n<p><strong>·</strong>  内部网关协议IGP（Internal Gateway Protocol）：在一个自治系统<code>AS</code>内部运行</p>\n<p><strong>·</strong>  外部网关协议EGP（Exterior Gateway Protocol）：运行于不同自治系统之间，BGP时目前最常用的EGP协议。</p>\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE.PNG\" alt=\"动态路由协议\"></p>\n<br>\n\n<h2 id=\"8-路由迭代\"><a href=\"#8-路由迭代\" class=\"headerlink\" title=\"8.路由迭代\"></a>8.路由迭代</h2><p>路由必须有智联的下一跳才能够转发，静态路由或BGP路由的下一跳可能不是直连的邻居，因此需要计算出一个直连的下一跳，这个过程称为路由迭代。</p>\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%BF%AD%E4%BB%A3.PNG\" alt=\"路由迭代\"></p>\n<br>\n\n<h1 id=\"Ⅱ-IP路由高级应用\"><a href=\"#Ⅱ-IP路由高级应用\" class=\"headerlink\" title=\"Ⅱ - IP路由高级应用\"></a>Ⅱ - IP路由高级应用</h1><h2 id=\"9-路由引入\"><a href=\"#9-路由引入\" class=\"headerlink\" title=\"9.路由引入\"></a>9.路由引入</h2><p>路由引入是指将路由信息从一种路由协议发布到另一种路由协议的操作。</p>\n<p><strong>·</strong>  通过路由引入，可以实现路由信息在不同路由协议间传递。</p>\n<p><strong>·</strong>  执行路由引入时，还可以部署路由控制，从而实现对业务流量的灵活把控。</p>\n<p><strong>·</strong>  在路由引入时，如果将A协议路由引入到B协议路由，那么要在B协议路由中进行引入配置</p>\n<p><strong>·</strong>  在路由引入时需注意：</p>\n<p>1、路由的优先级</p>\n<p>2、路由回灌</p>\n<p>3、路由度量值</p>\n<p>命令：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">Huawei-ospf-100</span>] import-route &#123;bgp | direct | <span class=\"keyword\">static</span> | isis [ process-id-isis ] | ospf [ process-id-ospf ]&#125;</span><br><span class=\"line\"><span class=\"comment\">//在OSPF视图下，引入BGP/直连/静态/IS-IS/OSPF其他进程路由。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-路由优先级\"><a href=\"#10-路由优先级\" class=\"headerlink\" title=\"10.路由优先级\"></a>10.路由优先级</h2><p>华为定义的路由优先级：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Direct：<span class=\"number\">0</span></span><br><span class=\"line\">OSPF：<span class=\"number\">10</span></span><br><span class=\"line\">IS-IS：<span class=\"number\">15</span></span><br><span class=\"line\">Static：<span class=\"number\">60</span></span><br><span class=\"line\">OSPF ASE：<span class=\"number\">150</span></span><br><span class=\"line\">OSPF NSSA：<span class=\"number\">150</span></span><br><span class=\"line\">IBGP：<span class=\"number\">255</span></span><br><span class=\"line\">EBGP：<span class=\"number\">255</span></span><br><span class=\"line\"><span class=\"comment\">//不同厂商定义的优先级可能不同</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-路由回灌\"><a href=\"#11-路由回灌\" class=\"headerlink\" title=\"11.路由回灌\"></a>11.路由回灌</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%9B%9E%E7%81%8C.PNG\" alt=\"路由回灌\"></p>\n<p><strong>·</strong>  R1将直连路由10.1.1.0/24引入到OSPF中。</p>\n<p><strong>·</strong>  10.1.1.0/24网段路由全OSPF域内通告。</p>\n<p><strong>·</strong>  R2在IS-IS进程中引入OSPF路由。</p>\n<p><strong>·</strong>  10.1.1.0/24网段路由全IS-IS域内通告。</p>\n<p><strong>·</strong>  R3在OSPF进程中引入IS-IS路由。</p>\n<p><strong>·</strong>  10.1.1.0/24网段路由再次被通告进OSPF域内，形成路由回灌。</p>\n<h2 id=\"12-路由度量值\"><a href=\"#12-路由度量值\" class=\"headerlink\" title=\"12.路由度量值\"></a>12.路由度量值</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%BA%A6%E9%87%8F%E5%80%BC.PNG\" alt=\"路由度量值\"></p>\n<p><strong>·</strong>  不同的路由协议对路由度量值的定义不同，在引入时要考虑到度量值的定义。</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>·</strong> 当路由器收到一个IP数据包，路由器会根据数据包的目的IP地址查找FIB（Forwarding Information Base，转发信息库）表，找到“最匹配”的路由条目后，将数据包根据路由条目所指示的出接口或下一跳转发出去。</p>\n<br>\n\n<p><strong>·</strong> 路由器获取路由的方式有三种，分别是动态路由、静态路由、直连路由。一个网络中可能会同时存在这三种方式，那么采用不同方式获取路由的路由器之间如何实现路由可达？</p>\n<br>\n\n<h1 id=\"Ⅰ-IP路由基础\"><a href=\"#Ⅰ-IP路由基础\" class=\"headerlink\" title=\"Ⅰ - IP路由基础\"></a>Ⅰ - IP路由基础</h1><h2 id=\"1-IP路由概述\"><a href=\"#1-IP路由概述\" class=\"headerlink\" title=\"1.IP路由概述\"></a>1.IP路由概述</h2><p>当路由器收到一个IP报文时，路由器根据该IP报文的目的地址匹配路由条目（或路由表项）。</p>\n<p><strong>·</strong>  若有匹配的路由条目，则依据该条目中的出接口或下一跳等信息进行报文转发。</p>\n<p><strong>·</strong>  若无匹配的路由条目，则路由器没有相关路由信息用于指导报文转发，此时会丢弃该报文。</p>\n<br>\n\n<h2 id=\"2-RIP与FIB\"><a href=\"#2-RIP与FIB\" class=\"headerlink\" title=\"2.RIP与FIB\"></a>2.RIP与FIB</h2><p>具有<strong>路由</strong>功能的网络设备都拥有两中国重要的数据表：</p>\n<p><strong>·</strong>  路由表——RIB（Routing Information Base，路由信息库）</p>\n<p><strong>·</strong>  转发表——FIB（Forwarding Information Base，转发信息库）</p>\n<p><strong>·</strong>  路由器维护一张本地核心路由表，此外还维护着各种路由协议的路由表</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display ip routing-table   <span class=\"comment\">//路由表</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8.PNG\" alt=\"路由表\"></p>\n<p>可以将路由表视为路由器的控制平面，路由表实际上并不直接指导数据转发。路由器在执行路由表查询时，并不是在路由表中进行报文目的地址的查询，真正指导数据转发的时FIB表，路由器将路由表中的最优路由下载到FIB表，此后如果路由表中的相关表项发生变化，FIB表也将立即同步。 在大多数场合，阐述路由器数据转发过程时，会用<strong>“路由表”</strong>这个说法，实际上，路由器查询的时FIB表，路由表位于控制层面仅提供路由信息。</p>\n<br>\n\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display fib [ slot-id ]   <span class=\"comment\">//转发表（FIB表）[ slot-id ]：显示指定槽位号的FIB表信息，取值范围根据实际配置选取</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%BD%AC%E5%8F%91%E8%A1%A8.PNG\" alt=\"转发表\"></p>\n<p> FIB表位于路由器的数据平面，亦被称为转发表项，每条转发表项都指定要到达某个目的地所需通过的出接口以及下一跳IP地址等信息。</p>\n<br>\n\n<h2 id=\"3-路由表中的关键字段\"><a href=\"#3-路由表中的关键字段\" class=\"headerlink\" title=\"3.路由表中的关键字段\"></a>3.路由表中的关键字段</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG\" alt=\"路由表中的关键字段\"></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Destination   <span class=\"comment\">//表示此路由的目的地址，用来标识IP包的目的地址或目的网络</span></span><br><span class=\"line\">Mask   <span class=\"comment\">//表示此目的地址的子网掩码长度。与目的地址一起来标识目的主机或路由器所在的网段的地址。</span></span><br><span class=\"line\">Proto   <span class=\"comment\">//表示学习此路由的路由协议（Protocol）</span></span><br><span class=\"line\">Pre   <span class=\"comment\">//表示此路由的路由协议优先级（Prefrence）</span></span><br><span class=\"line\">Cost   <span class=\"comment\">//路由开销</span></span><br><span class=\"line\">NextHop   <span class=\"comment\">//表示转发到此目的网络的下一跳，指明数据转发的下一个设备。</span></span><br><span class=\"line\">Interface   <span class=\"comment\">//表示转发到此目的网络的出接口，指明数据将从本地路由器哪个接口转发出去。</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong></p>\n<p><strong>·</strong>  路由器分别定义了外部优先级和内部优先级。外部优先级可手动配置，反之内部优先级不可手动修改。</p>\n<p><strong>·</strong>  选择路由时先比较外部优先级，当不同的路由协议配置了相同的外部优先级时，系统会通过内部优先级决定哪个路由协议发现的路由将成为最优路由。</p>\n<p><strong>·</strong>  <code>Preference</code>用于不同路由协议间路由优先级的比较，<code>Cost</code>用于同一种路由协议内部不同路由的优先级的比较。</p>\n<br>\n\n<h2 id=\"4-FIB表中的关键字段\"><a href=\"#4-FIB表中的关键字段\" class=\"headerlink\" title=\"4.FIB表中的关键字段\"></a>4.FIB表中的关键字段</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/FIB%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG\" alt=\"FIB表中的关键字段\"></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Titak number of Routes   <span class=\"comment\">//路由表总数</span></span><br><span class=\"line\">Destination/Mask   <span class=\"comment\">//目的地址/掩码长度</span></span><br><span class=\"line\">Nexthop   <span class=\"comment\">//下一跳</span></span><br><span class=\"line\">Flag   <span class=\"comment\">//当前标志，G、H、U、S、D、B的组合</span></span><br><span class=\"line\">   G   <span class=\"comment\">// [ Gateway ] 网关路由，表示下一跳是网关</span></span><br><span class=\"line\">   H   <span class=\"comment\">// [ Host ] 主机路由，表示该路由为主机路由</span></span><br><span class=\"line\">   U   <span class=\"comment\">// [ Up ] 可用路由，表示该路由状态时UP</span></span><br><span class=\"line\">   S   <span class=\"comment\">// [ Static ] 静态路由</span></span><br><span class=\"line\">   D   <span class=\"comment\">// [ Dynamic ] 动态路由</span></span><br><span class=\"line\">   B   <span class=\"comment\">// [ Black Hole ] 黑洞路由，表示下一跳是空接口</span></span><br><span class=\"line\">TimeStamp   <span class=\"comment\">//时间戳，表示该表项存在的时间，单位是秒</span></span><br><span class=\"line\">Interface   <span class=\"comment\">//到目的地址的出接口</span></span><br><span class=\"line\">TunnelID   <span class=\"comment\">//表示转发表项索引，该值不为0时，表示该项的报文通过隧道转发（如：MPLS隧道转发），该值为0时，表示报文不通过隧道转发。</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"5-IP路由查找的最长匹配原则\"><a href=\"#5-IP路由查找的最长匹配原则\" class=\"headerlink\" title=\"5.IP路由查找的最长匹配原则\"></a>5.IP路由查找的最长匹配原则</h2><p><strong>·</strong>  路由器查找FIB表时，将报文的目的IP地址和FIB表中各表项的掩码位进行<strong>“逻辑与”</strong>，得到的地址符合FIB表中的网络地址则匹配。</p>\n<p><strong>·</strong>  最终选择一个掩码最长的FIB表转发报文。</p>\n<br>\n\n<h2 id=\"6-路由的来源\"><a href=\"#6-路由的来源\" class=\"headerlink\" title=\"6.路由的来源\"></a>6.路由的来源</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E7%9A%84%E6%9D%A5%E6%BA%90.PNG\" alt=\"路由的来源\"></p>\n<p><strong>·</strong>  直连路由：直连接口所在网段的路由，由设备自动生成。</p>\n<p><strong>·</strong>  静态路由：由网络管理员手工配置的路由条目。</p>\n<p><strong>·</strong>  路由器通过动态路由协议（OSPF、IS-IS、BGP等）学习到的路由。</p>\n<br>\n\n<h2 id=\"7-动态路由协议\"><a href=\"#7-动态路由协议\" class=\"headerlink\" title=\"7.动态路由协议\"></a>7.动态路由协议</h2><p>动态路由协议根据作用范围不同可分为：</p>\n<p><strong>·</strong>  内部网关协议IGP（Internal Gateway Protocol）：在一个自治系统<code>AS</code>内部运行</p>\n<p><strong>·</strong>  外部网关协议EGP（Exterior Gateway Protocol）：运行于不同自治系统之间，BGP时目前最常用的EGP协议。</p>\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE.PNG\" alt=\"动态路由协议\"></p>\n<br>\n\n<h2 id=\"8-路由迭代\"><a href=\"#8-路由迭代\" class=\"headerlink\" title=\"8.路由迭代\"></a>8.路由迭代</h2><p>路由必须有智联的下一跳才能够转发，静态路由或BGP路由的下一跳可能不是直连的邻居，因此需要计算出一个直连的下一跳，这个过程称为路由迭代。</p>\n<p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%BF%AD%E4%BB%A3.PNG\" alt=\"路由迭代\"></p>\n<br>\n\n<h1 id=\"Ⅱ-IP路由高级应用\"><a href=\"#Ⅱ-IP路由高级应用\" class=\"headerlink\" title=\"Ⅱ - IP路由高级应用\"></a>Ⅱ - IP路由高级应用</h1><h2 id=\"9-路由引入\"><a href=\"#9-路由引入\" class=\"headerlink\" title=\"9.路由引入\"></a>9.路由引入</h2><p>路由引入是指将路由信息从一种路由协议发布到另一种路由协议的操作。</p>\n<p><strong>·</strong>  通过路由引入，可以实现路由信息在不同路由协议间传递。</p>\n<p><strong>·</strong>  执行路由引入时，还可以部署路由控制，从而实现对业务流量的灵活把控。</p>\n<p><strong>·</strong>  在路由引入时，如果将A协议路由引入到B协议路由，那么要在B协议路由中进行引入配置</p>\n<p><strong>·</strong>  在路由引入时需注意：</p>\n<p>1、路由的优先级</p>\n<p>2、路由回灌</p>\n<p>3、路由度量值</p>\n<p>命令：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"meta\">Huawei-ospf-100</span>] import-route &#123;bgp | direct | <span class=\"keyword\">static</span> | isis [ process-id-isis ] | ospf [ process-id-ospf ]&#125;</span><br><span class=\"line\"><span class=\"comment\">//在OSPF视图下，引入BGP/直连/静态/IS-IS/OSPF其他进程路由。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-路由优先级\"><a href=\"#10-路由优先级\" class=\"headerlink\" title=\"10.路由优先级\"></a>10.路由优先级</h2><p>华为定义的路由优先级：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Direct：<span class=\"number\">0</span></span><br><span class=\"line\">OSPF：<span class=\"number\">10</span></span><br><span class=\"line\">IS-IS：<span class=\"number\">15</span></span><br><span class=\"line\">Static：<span class=\"number\">60</span></span><br><span class=\"line\">OSPF ASE：<span class=\"number\">150</span></span><br><span class=\"line\">OSPF NSSA：<span class=\"number\">150</span></span><br><span class=\"line\">IBGP：<span class=\"number\">255</span></span><br><span class=\"line\">EBGP：<span class=\"number\">255</span></span><br><span class=\"line\"><span class=\"comment\">//不同厂商定义的优先级可能不同</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-路由回灌\"><a href=\"#11-路由回灌\" class=\"headerlink\" title=\"11.路由回灌\"></a>11.路由回灌</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%9B%9E%E7%81%8C.PNG\" alt=\"路由回灌\"></p>\n<p><strong>·</strong>  R1将直连路由10.1.1.0/24引入到OSPF中。</p>\n<p><strong>·</strong>  10.1.1.0/24网段路由全OSPF域内通告。</p>\n<p><strong>·</strong>  R2在IS-IS进程中引入OSPF路由。</p>\n<p><strong>·</strong>  10.1.1.0/24网段路由全IS-IS域内通告。</p>\n<p><strong>·</strong>  R3在OSPF进程中引入IS-IS路由。</p>\n<p><strong>·</strong>  10.1.1.0/24网段路由再次被通告进OSPF域内，形成路由回灌。</p>\n<h2 id=\"12-路由度量值\"><a href=\"#12-路由度量值\" class=\"headerlink\" title=\"12.路由度量值\"></a>12.路由度量值</h2><p><img src=\"/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%BA%A6%E9%87%8F%E5%80%BC.PNG\" alt=\"路由度量值\"></p>\n<p><strong>·</strong>  不同的路由协议对路由度量值的定义不同，在引入时要考虑到度量值的定义。</p>\n"},{"title":"3、OSPF基础介绍","date":"2022-11-04T16:45:21.000Z","typora-root-url":"..","_content":"\n# 前言\n\n**·**  路由器根据路由表转发数据包，路由表项可通过手动配置和动态路由协议生成。\n\n**·**  静态路由比动态路由使用更少的贷款，并且不占用CPU资源来计算和分析路由更新。当网络结构比较简单时，只需配置静态路由就可以使网络正常工作。但是当网络发生故障或者拓扑发生变化后，静态路由不会自动更新，必须手动重新配置。\n\n**·**  相比较于静态路由，动态路由协议具有更强的可扩展性，具备更强的应变能力。\n\n**·**  OSPF（Open Shortest Path First，开放式最短路径优先）具有扩展性强，收敛速度快等特点，作为优秀的内部网关协议被广泛使用。\n\n<br>\n\n# Ⅰ - 动态路由协议简介\n\n## 1.动态路由协议的分类\n\n按工作区域分类：\n\n```\nIGP（Interior Gateway Protocols，内部网关协议）：\n· RIP\n· OSPF\n· IS-IS\n\nEGP（Exterior Gateway Protocols，外部网关协议）{\n· BGP\n```\n\n按工作机制及算法分类：\n\n```\n（Distance Vector Routing Protocols，距离矢量路由协议）\n· RIP\n\n（Link-State Routing Protocols，链路状态路由协议）\n· OSPF\n· IS-IS\n```\n\n**·**  BGP使用一种基于距离矢量算法修改后的算法，该算法被称为路径矢量算法。因此在某些场合下，BGP也被成为路径矢量路由协议。\n\n**·**  IGP（内部网关协议）在同一个自治系统内交换路由信息，IGP的主要目的是发现和计算自治域内的路由信息。\n\n**·**  EGP（外部网关协议）主要用于AS（自治系统）之间的互联。\n\n <br>\n\n## 2.距离矢量路由协议\n\n**·**  运行距离矢量路由协议的路由器周期性地泛洪自己的路由表。通过路由地交互，每台路由器都从相邻地路由器学习到路由，并且加载进自己的路由表中，然后再通告给其他相邻路由器。\n\n**·**  对于网络中地所有路由器而言，路由器并不清楚网络的拓扑，只是简单地知道要去往某个目的地网段方向在哪里，开销有多大。\n\n## 3.链路状态路由协议 - LSA泛洪\n\n**·**  链路状态路由协议通告的是链路状态而不是路由信息。\n\n**·**  运行链路状态协议的路由器之间首先会建立邻居关系，然后彼此之间开始交换LSA（Link State Advertisement，链路状态通告）。\n\n**·**  链路状态通告，可以简单的理解为每台路由器都产生一个描述自己的直连接口状态（包括接口的开销、与邻居路由器之间的关系等）的通告。\n\n<br>\n\n## 4.链路状态路由协议 - LSDB维护\n\n每台路由器都会产生LSA，路由器将接收到的LSA放入自己的LSDB（Link State DataBase，链路状态数据库）。路由器通过对LSDB中所储存的LSA进行解析，进而了解全网拓扑。\n\n<br>\n\n## 5.链路状态路由协议 - SPF计算\n\n每台路由器基于LSDB，使用SPF（Shortest Path First，最短路径优先）算法进行计算。每台路由器都计算出一棵以自己为根的、无环的、拥有最短路径的“树”。有了这颗“树”，路由器就已经知道了到达所有网段的优选路径。SPF是OSPF路由协议的一个核心算法，用来再一个复杂的网络中做出路由优选的决策。\n\n<br>\n\n## 6.链路状态路由协议 - 路由表生成\n\n路由器将计算出来的优选路径，加载进自己的路由表。\n\n<br>\n\n## 7.链路状态路由协议总结\n\n![总结](/../images/HCIP-datacom-3%E3%80%81OSPF%E5%9F%BA%E7%A1%80/%E6%80%BB%E7%BB%93.PNG)\n\n第一步：建立相邻路由器之间的邻居关系。\n\n第二步：邻居之间交互链路状态信息和同步LSDB\n\n第三步：是进行优选路径计算\n\n第四步：根据最短路径树生成路由表项加载到路由表\n\n","source":"_posts/HCIP_datacom/4.OSPF基础介绍.md","raw":"---\ntitle: 3、OSPF基础介绍\ndate: 2022-11-05 00:45:21\ntags: HCIP-datacom\ncategories: HCIP-datacom\ntypora-root-url: ..\n---\n\n# 前言\n\n**·**  路由器根据路由表转发数据包，路由表项可通过手动配置和动态路由协议生成。\n\n**·**  静态路由比动态路由使用更少的贷款，并且不占用CPU资源来计算和分析路由更新。当网络结构比较简单时，只需配置静态路由就可以使网络正常工作。但是当网络发生故障或者拓扑发生变化后，静态路由不会自动更新，必须手动重新配置。\n\n**·**  相比较于静态路由，动态路由协议具有更强的可扩展性，具备更强的应变能力。\n\n**·**  OSPF（Open Shortest Path First，开放式最短路径优先）具有扩展性强，收敛速度快等特点，作为优秀的内部网关协议被广泛使用。\n\n<br>\n\n# Ⅰ - 动态路由协议简介\n\n## 1.动态路由协议的分类\n\n按工作区域分类：\n\n```\nIGP（Interior Gateway Protocols，内部网关协议）：\n· RIP\n· OSPF\n· IS-IS\n\nEGP（Exterior Gateway Protocols，外部网关协议）{\n· BGP\n```\n\n按工作机制及算法分类：\n\n```\n（Distance Vector Routing Protocols，距离矢量路由协议）\n· RIP\n\n（Link-State Routing Protocols，链路状态路由协议）\n· OSPF\n· IS-IS\n```\n\n**·**  BGP使用一种基于距离矢量算法修改后的算法，该算法被称为路径矢量算法。因此在某些场合下，BGP也被成为路径矢量路由协议。\n\n**·**  IGP（内部网关协议）在同一个自治系统内交换路由信息，IGP的主要目的是发现和计算自治域内的路由信息。\n\n**·**  EGP（外部网关协议）主要用于AS（自治系统）之间的互联。\n\n <br>\n\n## 2.距离矢量路由协议\n\n**·**  运行距离矢量路由协议的路由器周期性地泛洪自己的路由表。通过路由地交互，每台路由器都从相邻地路由器学习到路由，并且加载进自己的路由表中，然后再通告给其他相邻路由器。\n\n**·**  对于网络中地所有路由器而言，路由器并不清楚网络的拓扑，只是简单地知道要去往某个目的地网段方向在哪里，开销有多大。\n\n## 3.链路状态路由协议 - LSA泛洪\n\n**·**  链路状态路由协议通告的是链路状态而不是路由信息。\n\n**·**  运行链路状态协议的路由器之间首先会建立邻居关系，然后彼此之间开始交换LSA（Link State Advertisement，链路状态通告）。\n\n**·**  链路状态通告，可以简单的理解为每台路由器都产生一个描述自己的直连接口状态（包括接口的开销、与邻居路由器之间的关系等）的通告。\n\n<br>\n\n## 4.链路状态路由协议 - LSDB维护\n\n每台路由器都会产生LSA，路由器将接收到的LSA放入自己的LSDB（Link State DataBase，链路状态数据库）。路由器通过对LSDB中所储存的LSA进行解析，进而了解全网拓扑。\n\n<br>\n\n## 5.链路状态路由协议 - SPF计算\n\n每台路由器基于LSDB，使用SPF（Shortest Path First，最短路径优先）算法进行计算。每台路由器都计算出一棵以自己为根的、无环的、拥有最短路径的“树”。有了这颗“树”，路由器就已经知道了到达所有网段的优选路径。SPF是OSPF路由协议的一个核心算法，用来再一个复杂的网络中做出路由优选的决策。\n\n<br>\n\n## 6.链路状态路由协议 - 路由表生成\n\n路由器将计算出来的优选路径，加载进自己的路由表。\n\n<br>\n\n## 7.链路状态路由协议总结\n\n![总结](/../images/HCIP-datacom-3%E3%80%81OSPF%E5%9F%BA%E7%A1%80/%E6%80%BB%E7%BB%93.PNG)\n\n第一步：建立相邻路由器之间的邻居关系。\n\n第二步：邻居之间交互链路状态信息和同步LSDB\n\n第三步：是进行优选路径计算\n\n第四步：根据最短路径树生成路由表项加载到路由表\n\n","slug":"HCIP_datacom/4.OSPF基础介绍","published":1,"updated":"2023-05-06T02:56:27.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1m000bncm29jqs8p3q","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>·</strong>  路由器根据路由表转发数据包，路由表项可通过手动配置和动态路由协议生成。</p>\n<p><strong>·</strong>  静态路由比动态路由使用更少的贷款，并且不占用CPU资源来计算和分析路由更新。当网络结构比较简单时，只需配置静态路由就可以使网络正常工作。但是当网络发生故障或者拓扑发生变化后，静态路由不会自动更新，必须手动重新配置。</p>\n<p><strong>·</strong>  相比较于静态路由，动态路由协议具有更强的可扩展性，具备更强的应变能力。</p>\n<p><strong>·</strong>  OSPF（Open Shortest Path First，开放式最短路径优先）具有扩展性强，收敛速度快等特点，作为优秀的内部网关协议被广泛使用。</p>\n<br>\n\n<h1 id=\"Ⅰ-动态路由协议简介\"><a href=\"#Ⅰ-动态路由协议简介\" class=\"headerlink\" title=\"Ⅰ - 动态路由协议简介\"></a>Ⅰ - 动态路由协议简介</h1><h2 id=\"1-动态路由协议的分类\"><a href=\"#1-动态路由协议的分类\" class=\"headerlink\" title=\"1.动态路由协议的分类\"></a>1.动态路由协议的分类</h2><p>按工作区域分类：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IGP（Interior Gateway Protocols，内部网关协议）：</span><br><span class=\"line\">· RIP</span><br><span class=\"line\">· OSPF</span><br><span class=\"line\">· IS-IS</span><br><span class=\"line\"></span><br><span class=\"line\">EGP（Exterior Gateway Protocols，外部网关协议）&#123;</span><br><span class=\"line\">· BGP</span><br></pre></td></tr></table></figure>\n\n<p>按工作机制及算法分类：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（Distance Vector Routing Protocols，距离矢量路由协议）</span><br><span class=\"line\">· RIP</span><br><span class=\"line\"></span><br><span class=\"line\">（Link-State Routing Protocols，链路状态路由协议）</span><br><span class=\"line\">· OSPF</span><br><span class=\"line\">· IS-IS</span><br></pre></td></tr></table></figure>\n\n<p><strong>·</strong>  BGP使用一种基于距离矢量算法修改后的算法，该算法被称为路径矢量算法。因此在某些场合下，BGP也被成为路径矢量路由协议。</p>\n<p><strong>·</strong>  IGP（内部网关协议）在同一个自治系统内交换路由信息，IGP的主要目的是发现和计算自治域内的路由信息。</p>\n<p><strong>·</strong>  EGP（外部网关协议）主要用于AS（自治系统）之间的互联。</p>\n <br>\n\n<h2 id=\"2-距离矢量路由协议\"><a href=\"#2-距离矢量路由协议\" class=\"headerlink\" title=\"2.距离矢量路由协议\"></a>2.距离矢量路由协议</h2><p><strong>·</strong>  运行距离矢量路由协议的路由器周期性地泛洪自己的路由表。通过路由地交互，每台路由器都从相邻地路由器学习到路由，并且加载进自己的路由表中，然后再通告给其他相邻路由器。</p>\n<p><strong>·</strong>  对于网络中地所有路由器而言，路由器并不清楚网络的拓扑，只是简单地知道要去往某个目的地网段方向在哪里，开销有多大。</p>\n<h2 id=\"3-链路状态路由协议-LSA泛洪\"><a href=\"#3-链路状态路由协议-LSA泛洪\" class=\"headerlink\" title=\"3.链路状态路由协议 - LSA泛洪\"></a>3.链路状态路由协议 - LSA泛洪</h2><p><strong>·</strong>  链路状态路由协议通告的是链路状态而不是路由信息。</p>\n<p><strong>·</strong>  运行链路状态协议的路由器之间首先会建立邻居关系，然后彼此之间开始交换LSA（Link State Advertisement，链路状态通告）。</p>\n<p><strong>·</strong>  链路状态通告，可以简单的理解为每台路由器都产生一个描述自己的直连接口状态（包括接口的开销、与邻居路由器之间的关系等）的通告。</p>\n<br>\n\n<h2 id=\"4-链路状态路由协议-LSDB维护\"><a href=\"#4-链路状态路由协议-LSDB维护\" class=\"headerlink\" title=\"4.链路状态路由协议 - LSDB维护\"></a>4.链路状态路由协议 - LSDB维护</h2><p>每台路由器都会产生LSA，路由器将接收到的LSA放入自己的LSDB（Link State DataBase，链路状态数据库）。路由器通过对LSDB中所储存的LSA进行解析，进而了解全网拓扑。</p>\n<br>\n\n<h2 id=\"5-链路状态路由协议-SPF计算\"><a href=\"#5-链路状态路由协议-SPF计算\" class=\"headerlink\" title=\"5.链路状态路由协议 - SPF计算\"></a>5.链路状态路由协议 - SPF计算</h2><p>每台路由器基于LSDB，使用SPF（Shortest Path First，最短路径优先）算法进行计算。每台路由器都计算出一棵以自己为根的、无环的、拥有最短路径的“树”。有了这颗“树”，路由器就已经知道了到达所有网段的优选路径。SPF是OSPF路由协议的一个核心算法，用来再一个复杂的网络中做出路由优选的决策。</p>\n<br>\n\n<h2 id=\"6-链路状态路由协议-路由表生成\"><a href=\"#6-链路状态路由协议-路由表生成\" class=\"headerlink\" title=\"6.链路状态路由协议 - 路由表生成\"></a>6.链路状态路由协议 - 路由表生成</h2><p>路由器将计算出来的优选路径，加载进自己的路由表。</p>\n<br>\n\n<h2 id=\"7-链路状态路由协议总结\"><a href=\"#7-链路状态路由协议总结\" class=\"headerlink\" title=\"7.链路状态路由协议总结\"></a>7.链路状态路由协议总结</h2><p><img src=\"/../images/HCIP-datacom-3%E3%80%81OSPF%E5%9F%BA%E7%A1%80/%E6%80%BB%E7%BB%93.PNG\" alt=\"总结\"></p>\n<p>第一步：建立相邻路由器之间的邻居关系。</p>\n<p>第二步：邻居之间交互链路状态信息和同步LSDB</p>\n<p>第三步：是进行优选路径计算</p>\n<p>第四步：根据最短路径树生成路由表项加载到路由表</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p><strong>·</strong>  路由器根据路由表转发数据包，路由表项可通过手动配置和动态路由协议生成。</p>\n<p><strong>·</strong>  静态路由比动态路由使用更少的贷款，并且不占用CPU资源来计算和分析路由更新。当网络结构比较简单时，只需配置静态路由就可以使网络正常工作。但是当网络发生故障或者拓扑发生变化后，静态路由不会自动更新，必须手动重新配置。</p>\n<p><strong>·</strong>  相比较于静态路由，动态路由协议具有更强的可扩展性，具备更强的应变能力。</p>\n<p><strong>·</strong>  OSPF（Open Shortest Path First，开放式最短路径优先）具有扩展性强，收敛速度快等特点，作为优秀的内部网关协议被广泛使用。</p>\n<br>\n\n<h1 id=\"Ⅰ-动态路由协议简介\"><a href=\"#Ⅰ-动态路由协议简介\" class=\"headerlink\" title=\"Ⅰ - 动态路由协议简介\"></a>Ⅰ - 动态路由协议简介</h1><h2 id=\"1-动态路由协议的分类\"><a href=\"#1-动态路由协议的分类\" class=\"headerlink\" title=\"1.动态路由协议的分类\"></a>1.动态路由协议的分类</h2><p>按工作区域分类：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IGP（Interior Gateway Protocols，内部网关协议）：</span><br><span class=\"line\">· RIP</span><br><span class=\"line\">· OSPF</span><br><span class=\"line\">· IS-IS</span><br><span class=\"line\"></span><br><span class=\"line\">EGP（Exterior Gateway Protocols，外部网关协议）&#123;</span><br><span class=\"line\">· BGP</span><br></pre></td></tr></table></figure>\n\n<p>按工作机制及算法分类：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（Distance Vector Routing Protocols，距离矢量路由协议）</span><br><span class=\"line\">· RIP</span><br><span class=\"line\"></span><br><span class=\"line\">（Link-State Routing Protocols，链路状态路由协议）</span><br><span class=\"line\">· OSPF</span><br><span class=\"line\">· IS-IS</span><br></pre></td></tr></table></figure>\n\n<p><strong>·</strong>  BGP使用一种基于距离矢量算法修改后的算法，该算法被称为路径矢量算法。因此在某些场合下，BGP也被成为路径矢量路由协议。</p>\n<p><strong>·</strong>  IGP（内部网关协议）在同一个自治系统内交换路由信息，IGP的主要目的是发现和计算自治域内的路由信息。</p>\n<p><strong>·</strong>  EGP（外部网关协议）主要用于AS（自治系统）之间的互联。</p>\n <br>\n\n<h2 id=\"2-距离矢量路由协议\"><a href=\"#2-距离矢量路由协议\" class=\"headerlink\" title=\"2.距离矢量路由协议\"></a>2.距离矢量路由协议</h2><p><strong>·</strong>  运行距离矢量路由协议的路由器周期性地泛洪自己的路由表。通过路由地交互，每台路由器都从相邻地路由器学习到路由，并且加载进自己的路由表中，然后再通告给其他相邻路由器。</p>\n<p><strong>·</strong>  对于网络中地所有路由器而言，路由器并不清楚网络的拓扑，只是简单地知道要去往某个目的地网段方向在哪里，开销有多大。</p>\n<h2 id=\"3-链路状态路由协议-LSA泛洪\"><a href=\"#3-链路状态路由协议-LSA泛洪\" class=\"headerlink\" title=\"3.链路状态路由协议 - LSA泛洪\"></a>3.链路状态路由协议 - LSA泛洪</h2><p><strong>·</strong>  链路状态路由协议通告的是链路状态而不是路由信息。</p>\n<p><strong>·</strong>  运行链路状态协议的路由器之间首先会建立邻居关系，然后彼此之间开始交换LSA（Link State Advertisement，链路状态通告）。</p>\n<p><strong>·</strong>  链路状态通告，可以简单的理解为每台路由器都产生一个描述自己的直连接口状态（包括接口的开销、与邻居路由器之间的关系等）的通告。</p>\n<br>\n\n<h2 id=\"4-链路状态路由协议-LSDB维护\"><a href=\"#4-链路状态路由协议-LSDB维护\" class=\"headerlink\" title=\"4.链路状态路由协议 - LSDB维护\"></a>4.链路状态路由协议 - LSDB维护</h2><p>每台路由器都会产生LSA，路由器将接收到的LSA放入自己的LSDB（Link State DataBase，链路状态数据库）。路由器通过对LSDB中所储存的LSA进行解析，进而了解全网拓扑。</p>\n<br>\n\n<h2 id=\"5-链路状态路由协议-SPF计算\"><a href=\"#5-链路状态路由协议-SPF计算\" class=\"headerlink\" title=\"5.链路状态路由协议 - SPF计算\"></a>5.链路状态路由协议 - SPF计算</h2><p>每台路由器基于LSDB，使用SPF（Shortest Path First，最短路径优先）算法进行计算。每台路由器都计算出一棵以自己为根的、无环的、拥有最短路径的“树”。有了这颗“树”，路由器就已经知道了到达所有网段的优选路径。SPF是OSPF路由协议的一个核心算法，用来再一个复杂的网络中做出路由优选的决策。</p>\n<br>\n\n<h2 id=\"6-链路状态路由协议-路由表生成\"><a href=\"#6-链路状态路由协议-路由表生成\" class=\"headerlink\" title=\"6.链路状态路由协议 - 路由表生成\"></a>6.链路状态路由协议 - 路由表生成</h2><p>路由器将计算出来的优选路径，加载进自己的路由表。</p>\n<br>\n\n<h2 id=\"7-链路状态路由协议总结\"><a href=\"#7-链路状态路由协议总结\" class=\"headerlink\" title=\"7.链路状态路由协议总结\"></a>7.链路状态路由协议总结</h2><p><img src=\"/../images/HCIP-datacom-3%E3%80%81OSPF%E5%9F%BA%E7%A1%80/%E6%80%BB%E7%BB%93.PNG\" alt=\"总结\"></p>\n<p>第一步：建立相邻路由器之间的邻居关系。</p>\n<p>第二步：邻居之间交互链路状态信息和同步LSDB</p>\n<p>第三步：是进行优选路径计算</p>\n<p>第四步：根据最短路径树生成路由表项加载到路由表</p>\n"},{"title":"Hexo Pure主题修改日记","date":"2022-10-30T18:10:22.000Z","_content":"\n\n\n### 1.添加背景动画\n\n背景动画基于canvas，在`\\themes\\pure\\layout\\layout.ejs`中添加\n\n```html\n<!-- 背景动画 -->\n  <script type=\"text/javascript\" color=\"0,0,0\" opacity='0.8' zIndex=\"-2\" count=\"88\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n  <!-- \n  color: 线条颜色，默认：‘0，0，0’；三个数字分别为(R,G,B),注意使用，分割\n  opacity: 线条透明度0~1,默认0.5\n  count: 线条总数量，默认150\n  zIndex: 背景的z-Index属性，css用于控制所在层的位置，默认-1 \n  -->\n```\n\n### 2.更改代码块样式\n\n修改`.\\themes\\pure\\source\\css\\style.css`\n\n```css\npre,\n.highlight {\n  background: #cfcbcb;\n  margin: 10px 0;\n  padding: 15px 10px;\n  overflow: auto;\n  font-size: 18px;\n  font-family: \"Consolas\";\n  font-weight: bold;\n  color: #4d4d4c;\n  line-height: 1.5;\n}\n```\n\n### 3.添加代码块一键复制按钮[[原文](https://blog.iwwee.com/posts/hexo-optimize.html#为代码块增加复制按钮)]\n\n（1）、增加全局函数addLoadEvent  \n\n在`/themes/pure/source/js`目录下打开`application.js`，在文件最后追加\n\n```js\nfunction addLoadEvent(func) {\n    var oldonload = window.onload;\n    if (typeof window.onload != 'function') {\n        window.onload = func;\n    } else {\n        window.onload = function() {\n            oldonload();\n            func();\n        }\n    }\n}\n```\n\n（2）、新增按钮\n\npure默认情况下是没有代码复制功能的，此时需要对hexo增加复制代码块功能。\n首先在`/themes/pure/layout/_partial`目录下新增`article-copy-code.ejs`，增加以下内容：\n\n```js\n<% if(theme.codeblock.copy_button.enable){ %>\n    <style>\n      .copy-btn {\n        display: inline-block;\n        padding: 6px 12px;\n        font-size: 13px;\n        font-weight: 700;\n        line-height: 20px;\n        color: #333;\n        white-space: nowrap;\n        vertical-align: middle;\n        cursor: pointer;\n        background-color: #eee;\n        background-image: linear-gradient(#fcfcfc, #eee);\n        border: 1px solid #d5d5d5;\n        border-radius: 3px;\n        user-select: none;\n        outline: 0;\n      }\n  \n      .highlight-wrap .copy-btn {\n        transition: opacity .3s ease-in-out;\n        opacity: 0;\n        padding: 2px 6px;\n        position: absolute;\n        right: 4px;\n        top: 8px;\n        z-index: 2;\n      }\n  \n      .highlight-wrap:hover .copy-btn,\n          .highlight-wrap .copy-btn:focus {\n        opacity: 1\n      }\n  \n      .highlight-wrap {\n        position: relative;\n      }\n    </style>\n    \n    <script>\n      addLoadEvent(()=>{\n        $('.highlight').each(function (i, e) {\n          var $wrap = $('<div>').addClass('highlight-wrap')\n          $(e).after($wrap)\n          $wrap.append($('<button>').addClass('copy-btn').append('<%= __(\"codeblock.copy_button\") %>').on('click', function (e) {\n            var code = $(this).parent().find(\".code\")[0].innerText\n            <% if(theme.codeblock.copyright.enable){ %>\n                code += \"<%= theme.codeblock.copyright.content %>\"\n            <% } %>\n            var ta = document.createElement('textarea')\n            document.body.appendChild(ta)\n            ta.style.position = 'absolute'\n            ta.style.top = '0px'\n            ta.style.left = '0px'\n            ta.value = code\n            ta.select()\n            ta.focus()\n            var result = document.execCommand('copy')\n            document.body.removeChild(ta)\n            <% if(theme.codeblock.copy_button.result){ %>\n              if(result)$(this).text('<%= __(\"codeblock.copy_success\") %>')\n              else $(this).text('<%= __(\"codeblock.copy_failure\") %>')\n            <% } %>\n            $(this).blur()\n          })).on('mouseleave', function (e) {\n            var $b = $(this).find('.copy-btn')\n            setTimeout(function () {\n              $b.text('<%= __(\"codeblock.copy_button\") %>')\n            }, 300)\n          }).append(e)\n        })\n      })\n    </script>\n  <% } %>\n\n```\n\n（3）、插入到页面：\n编辑`/themes/pure/layout/layout.ejs`，在`</body>`前面一行增加`<%- partial('_partial/article-copy-code')%>`\n\n```ejs\n  <%- body %>\n  <%- partial('_common/footer', null, {cache: !config.relative_link}) %>\n  <%- partial('_common/script', {post: page}) %>\n  <%- partial('_partial/article-copy-code') %>\n</body>\n</html>\n```\n\n（4）、增加语言文件： \n在`/themes/pure/languages`目录下选择对应的语言文件，在文件后面增加：\n\n```yaml\ncodeblock:\n  copy_button: 复制\n  copy_success: 复制成功\n  copy_failure: 复制失败\n```\n\n（5）、增加主题配置文件\n打开`themes/pure/_config.yml`，在文件末尾添加\n\n```yaml\ncodeblock: \n  copy_button: \n    enable: true\n    result: true\n  copyright:\n    enable: true\n    content: false\n```\n\n### 4.代码块滚动条[[原文](https://blog.iwwee.com/posts/hexo-optimize.html#为代码块增加复制按钮)]\n\n```css\n.highlight::-webkit-scrollbar {\n  /*滚动条整体样式*/\n  /*高宽分别对应横竖滚动条的尺寸*/\n  /*width: 10px;*/\n  height: 8px;\n}\n\n /* 代码块滚动条 */\n.highlight::-webkit-scrollbar-thumb {\n  /*滚动条里面小方块*/\n  border-radius: 45px;\n  /*background-color: #D62929;*/\n  background-color: #6f6969;\n  background-image: -webkit-linear-gradient(168deg,\n      rgba(255, 255, 255, 0.2) 100%, /*12.5*/\n      transparent 12.5%,\n      transparent 25%,\n      rgba(255, 255, 255, 0.2) 25%,\n      rgba(255, 255, 255, 0.2) 37.5%,\n      transparent 37.5%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0.2) 62.5%,\n      transparent 62.5%,\n      transparent 75%,\n      rgba(255, 255, 255, 0.2) 75%,\n      rgba(255, 255, 255, 0.2) 87.5%,\n      transparent 87.5%);\n}\n\n.highlight::-webkit-scrollbar-track {\n  /*滚动条里面轨道*/\n  background-color: #0f111a;\n}\n```\n\n### 5.添加回到顶部 [[ 原文 ]](https://hwame.top/20200520/hello-hexo-troubleshooting.html)\n\n文件位置：`./themes/pure/layout/_common/script.ejs`，在合适位置添加如下代码：\n\n```ejs\n<div id=\"go-top\"></div>\n<style type=\"text/css\">\n#go-top {\n width:40px;height:36px;\n background-color:#DDA0DD;\n position:relative;\n border-radius:2px;\n position:fixed;right:10px;bottom:60px;\n cursor:pointer;display:none;\n}\n#go-top:after {\n content:\" \";\n position:absolute;left:14px;top:14px;\n border-top:2px solid #fff;border-right:2px solid #fff;\n width:12px;height:12px;\n transform:rotate(-45deg);\n}\n#go-top:hover {\n background-color:#8A2BE2;\n}\n</style>\n<script>\n$(function () {\n  var top=$(\"#go-top\");\n  $(window).scroll(function () {\n    ($(window).scrollTop() > 300) ? top.show(300) : top.hide(200);\n    $(\"#go-top\").click(function () {\n      $('body,html').animate({scrollTop:0});\n      return false();\n    })\n  });\n});\n</script>\n```\n\n### 6.使文章图片居中[[ 原文 ]](https://hwame.top/20200520/hello-hexo-troubleshooting.html)\n\n第一步：在`./themes/pure/source/css/style.css`下\n\n第二步：125行`img`修改：\n\n```css\nimg {\n  border: 0;\n  box-sizing: border-box;\n  margin: auto;\n  padding: 3px;\n  text-align: center;\n  display: block;\n}\n```\n\n","source":"_posts/Hexo/Hexo Pure主题修改日记.md","raw":"---\ntitle: Hexo Pure主题修改日记\ntags: Hexo\ncategories: Hexo\ndate: 2022-10-31 02:10:22\n---\n\n\n\n### 1.添加背景动画\n\n背景动画基于canvas，在`\\themes\\pure\\layout\\layout.ejs`中添加\n\n```html\n<!-- 背景动画 -->\n  <script type=\"text/javascript\" color=\"0,0,0\" opacity='0.8' zIndex=\"-2\" count=\"88\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\"></script>\n  <!-- \n  color: 线条颜色，默认：‘0，0，0’；三个数字分别为(R,G,B),注意使用，分割\n  opacity: 线条透明度0~1,默认0.5\n  count: 线条总数量，默认150\n  zIndex: 背景的z-Index属性，css用于控制所在层的位置，默认-1 \n  -->\n```\n\n### 2.更改代码块样式\n\n修改`.\\themes\\pure\\source\\css\\style.css`\n\n```css\npre,\n.highlight {\n  background: #cfcbcb;\n  margin: 10px 0;\n  padding: 15px 10px;\n  overflow: auto;\n  font-size: 18px;\n  font-family: \"Consolas\";\n  font-weight: bold;\n  color: #4d4d4c;\n  line-height: 1.5;\n}\n```\n\n### 3.添加代码块一键复制按钮[[原文](https://blog.iwwee.com/posts/hexo-optimize.html#为代码块增加复制按钮)]\n\n（1）、增加全局函数addLoadEvent  \n\n在`/themes/pure/source/js`目录下打开`application.js`，在文件最后追加\n\n```js\nfunction addLoadEvent(func) {\n    var oldonload = window.onload;\n    if (typeof window.onload != 'function') {\n        window.onload = func;\n    } else {\n        window.onload = function() {\n            oldonload();\n            func();\n        }\n    }\n}\n```\n\n（2）、新增按钮\n\npure默认情况下是没有代码复制功能的，此时需要对hexo增加复制代码块功能。\n首先在`/themes/pure/layout/_partial`目录下新增`article-copy-code.ejs`，增加以下内容：\n\n```js\n<% if(theme.codeblock.copy_button.enable){ %>\n    <style>\n      .copy-btn {\n        display: inline-block;\n        padding: 6px 12px;\n        font-size: 13px;\n        font-weight: 700;\n        line-height: 20px;\n        color: #333;\n        white-space: nowrap;\n        vertical-align: middle;\n        cursor: pointer;\n        background-color: #eee;\n        background-image: linear-gradient(#fcfcfc, #eee);\n        border: 1px solid #d5d5d5;\n        border-radius: 3px;\n        user-select: none;\n        outline: 0;\n      }\n  \n      .highlight-wrap .copy-btn {\n        transition: opacity .3s ease-in-out;\n        opacity: 0;\n        padding: 2px 6px;\n        position: absolute;\n        right: 4px;\n        top: 8px;\n        z-index: 2;\n      }\n  \n      .highlight-wrap:hover .copy-btn,\n          .highlight-wrap .copy-btn:focus {\n        opacity: 1\n      }\n  \n      .highlight-wrap {\n        position: relative;\n      }\n    </style>\n    \n    <script>\n      addLoadEvent(()=>{\n        $('.highlight').each(function (i, e) {\n          var $wrap = $('<div>').addClass('highlight-wrap')\n          $(e).after($wrap)\n          $wrap.append($('<button>').addClass('copy-btn').append('<%= __(\"codeblock.copy_button\") %>').on('click', function (e) {\n            var code = $(this).parent().find(\".code\")[0].innerText\n            <% if(theme.codeblock.copyright.enable){ %>\n                code += \"<%= theme.codeblock.copyright.content %>\"\n            <% } %>\n            var ta = document.createElement('textarea')\n            document.body.appendChild(ta)\n            ta.style.position = 'absolute'\n            ta.style.top = '0px'\n            ta.style.left = '0px'\n            ta.value = code\n            ta.select()\n            ta.focus()\n            var result = document.execCommand('copy')\n            document.body.removeChild(ta)\n            <% if(theme.codeblock.copy_button.result){ %>\n              if(result)$(this).text('<%= __(\"codeblock.copy_success\") %>')\n              else $(this).text('<%= __(\"codeblock.copy_failure\") %>')\n            <% } %>\n            $(this).blur()\n          })).on('mouseleave', function (e) {\n            var $b = $(this).find('.copy-btn')\n            setTimeout(function () {\n              $b.text('<%= __(\"codeblock.copy_button\") %>')\n            }, 300)\n          }).append(e)\n        })\n      })\n    </script>\n  <% } %>\n\n```\n\n（3）、插入到页面：\n编辑`/themes/pure/layout/layout.ejs`，在`</body>`前面一行增加`<%- partial('_partial/article-copy-code')%>`\n\n```ejs\n  <%- body %>\n  <%- partial('_common/footer', null, {cache: !config.relative_link}) %>\n  <%- partial('_common/script', {post: page}) %>\n  <%- partial('_partial/article-copy-code') %>\n</body>\n</html>\n```\n\n（4）、增加语言文件： \n在`/themes/pure/languages`目录下选择对应的语言文件，在文件后面增加：\n\n```yaml\ncodeblock:\n  copy_button: 复制\n  copy_success: 复制成功\n  copy_failure: 复制失败\n```\n\n（5）、增加主题配置文件\n打开`themes/pure/_config.yml`，在文件末尾添加\n\n```yaml\ncodeblock: \n  copy_button: \n    enable: true\n    result: true\n  copyright:\n    enable: true\n    content: false\n```\n\n### 4.代码块滚动条[[原文](https://blog.iwwee.com/posts/hexo-optimize.html#为代码块增加复制按钮)]\n\n```css\n.highlight::-webkit-scrollbar {\n  /*滚动条整体样式*/\n  /*高宽分别对应横竖滚动条的尺寸*/\n  /*width: 10px;*/\n  height: 8px;\n}\n\n /* 代码块滚动条 */\n.highlight::-webkit-scrollbar-thumb {\n  /*滚动条里面小方块*/\n  border-radius: 45px;\n  /*background-color: #D62929;*/\n  background-color: #6f6969;\n  background-image: -webkit-linear-gradient(168deg,\n      rgba(255, 255, 255, 0.2) 100%, /*12.5*/\n      transparent 12.5%,\n      transparent 25%,\n      rgba(255, 255, 255, 0.2) 25%,\n      rgba(255, 255, 255, 0.2) 37.5%,\n      transparent 37.5%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0.2) 62.5%,\n      transparent 62.5%,\n      transparent 75%,\n      rgba(255, 255, 255, 0.2) 75%,\n      rgba(255, 255, 255, 0.2) 87.5%,\n      transparent 87.5%);\n}\n\n.highlight::-webkit-scrollbar-track {\n  /*滚动条里面轨道*/\n  background-color: #0f111a;\n}\n```\n\n### 5.添加回到顶部 [[ 原文 ]](https://hwame.top/20200520/hello-hexo-troubleshooting.html)\n\n文件位置：`./themes/pure/layout/_common/script.ejs`，在合适位置添加如下代码：\n\n```ejs\n<div id=\"go-top\"></div>\n<style type=\"text/css\">\n#go-top {\n width:40px;height:36px;\n background-color:#DDA0DD;\n position:relative;\n border-radius:2px;\n position:fixed;right:10px;bottom:60px;\n cursor:pointer;display:none;\n}\n#go-top:after {\n content:\" \";\n position:absolute;left:14px;top:14px;\n border-top:2px solid #fff;border-right:2px solid #fff;\n width:12px;height:12px;\n transform:rotate(-45deg);\n}\n#go-top:hover {\n background-color:#8A2BE2;\n}\n</style>\n<script>\n$(function () {\n  var top=$(\"#go-top\");\n  $(window).scroll(function () {\n    ($(window).scrollTop() > 300) ? top.show(300) : top.hide(200);\n    $(\"#go-top\").click(function () {\n      $('body,html').animate({scrollTop:0});\n      return false();\n    })\n  });\n});\n</script>\n```\n\n### 6.使文章图片居中[[ 原文 ]](https://hwame.top/20200520/hello-hexo-troubleshooting.html)\n\n第一步：在`./themes/pure/source/css/style.css`下\n\n第二步：125行`img`修改：\n\n```css\nimg {\n  border: 0;\n  box-sizing: border-box;\n  margin: auto;\n  padding: 3px;\n  text-align: center;\n  display: block;\n}\n```\n\n","slug":"Hexo/Hexo Pure主题修改日记","published":1,"updated":"2023-05-06T02:56:27.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1n000fncm2fdahbmrc","content":"<h3 id=\"1-添加背景动画\"><a href=\"#1-添加背景动画\" class=\"headerlink\" title=\"1.添加背景动画\"></a>1.添加背景动画</h3><p>背景动画基于canvas，在<code>\\themes\\pure\\layout\\layout.ejs</code>中添加</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 背景动画 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;0,0,0&quot;</span> <span class=\"attr\">opacity</span>=<span class=\"string\">&#x27;0.8&#x27;</span> <span class=\"attr\">zIndex</span>=<span class=\"string\">&quot;-2&quot;</span> <span class=\"attr\">count</span>=<span class=\"string\">&quot;88&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">  color: 线条颜色，默认：‘0，0，0’；三个数字分别为(R,G,B),注意使用，分割</span></span><br><span class=\"line\"><span class=\"comment\">  opacity: 线条透明度0~1,默认0.5</span></span><br><span class=\"line\"><span class=\"comment\">  count: 线条总数量，默认150</span></span><br><span class=\"line\"><span class=\"comment\">  zIndex: 背景的z-Index属性，css用于控制所在层的位置，默认-1 </span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-更改代码块样式\"><a href=\"#2-更改代码块样式\" class=\"headerlink\" title=\"2.更改代码块样式\"></a>2.更改代码块样式</h3><p>修改<code>.\\themes\\pure\\source\\css\\style.css</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pre,</span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#cfcbcb</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">15px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Consolas&quot;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#4d4d4c</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-添加代码块一键复制按钮-原文\"><a href=\"#3-添加代码块一键复制按钮-原文\" class=\"headerlink\" title=\"3.添加代码块一键复制按钮[原文]\"></a>3.添加代码块一键复制按钮[<a href=\"https://blog.iwwee.com/posts/hexo-optimize.html#%E4%B8%BA%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE\">原文</a>]</h3><p>（1）、增加全局函数addLoadEvent  </p>\n<p>在<code>/themes/pure/source/js</code>目录下打开<code>application.js</code>，在文件最后追加</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addLoadEvent</span>(<span class=\"params\">func</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oldonload = <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> != <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = func;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">oldonload</span>();</span><br><span class=\"line\">            <span class=\"title function_\">func</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>（2）、新增按钮</p>\n<p>pure默认情况下是没有代码复制功能的，此时需要对hexo增加复制代码块功能。<br>首先在<code>/themes/pure/layout/_partial</code>目录下新增<code>article-copy-code.ejs</code>，增加以下内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span>(theme.<span class=\"property\">codeblock</span>.<span class=\"property\">copy_button</span>.<span class=\"property\">enable</span>)&#123; %&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.copy-btn</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">display</span>: inline-block;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span> <span class=\"number\">12px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">font-weight</span>: <span class=\"number\">700</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">white-space</span>: nowrap;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">vertical-align</span>: middle;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">cursor</span>: pointer;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">#fcfcfc</span>, <span class=\"number\">#eee</span>);</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#d5d5d5</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        user-select: none;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">  </span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.highlight-wrap</span> <span class=\"selector-class\">.copy-btn</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">transition</span>: opacity .<span class=\"number\">3s</span> ease-in-out;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span> <span class=\"number\">6px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">position</span>: absolute;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">right</span>: <span class=\"number\">4px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">top</span>: <span class=\"number\">8px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">  </span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.highlight-wrap</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.copy-btn</span>,</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">          <span class=\"selector-class\">.highlight-wrap</span> <span class=\"selector-class\">.copy-btn</span><span class=\"selector-pseudo\">:focus</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span></span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">  </span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.highlight-wrap</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">position</span>: relative;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">      addLoadEvent(()=&gt;&#123;</span><br><span class=\"line\">        $(&#x27;.highlight&#x27;).each(function (i, e) &#123;</span><br><span class=\"line\">          var $wrap = $(&#x27;&lt;div&gt;&#x27;).addClass(&#x27;highlight-wrap&#x27;)</span><br><span class=\"line\">          $(e).after($wrap)</span><br><span class=\"line\">          $wrap.append($(&#x27;&lt;button&gt;&#x27;).addClass(&#x27;copy-btn&#x27;).append(&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class=\"line\">            var code = $(this).parent().find(&quot;.code&quot;)[0].innerText</span><br><span class=\"line\">            &lt;% if(theme.codeblock.copyright.enable)&#123; %&gt;</span><br><span class=\"line\">                code += &quot;&lt;%= theme.codeblock.copyright.content %&gt;&quot;</span><br><span class=\"line\">            &lt;% &#125; %&gt;</span><br><span class=\"line\">            var ta = document.createElement(&#x27;textarea&#x27;)</span><br><span class=\"line\">            document.body.appendChild(ta)</span><br><span class=\"line\">            ta.style.position = &#x27;absolute&#x27;</span><br><span class=\"line\">            ta.style.top = &#x27;0px&#x27;</span><br><span class=\"line\">            ta.style.left = &#x27;0px&#x27;</span><br><span class=\"line\">            ta.value = code</span><br><span class=\"line\">            ta.select()</span><br><span class=\"line\">            ta.focus()</span><br><span class=\"line\">            var result = document.execCommand(&#x27;copy&#x27;)</span><br><span class=\"line\">            document.body.removeChild(ta)</span><br><span class=\"line\">            &lt;% if(theme.codeblock.copy_button.result)&#123; %&gt;</span><br><span class=\"line\">              if(result)$(this).text(&#x27;&lt;%= __(&quot;codeblock.copy_success&quot;) %&gt;&#x27;)</span><br><span class=\"line\">              else $(this).text(&#x27;&lt;%= __(&quot;codeblock.copy_failure&quot;) %&gt;&#x27;)</span><br><span class=\"line\">            &lt;% &#125; %&gt;</span><br><span class=\"line\">            $(this).blur()</span><br><span class=\"line\">          &#125;)).on(&#x27;mouseleave&#x27;, function (e) &#123;</span><br><span class=\"line\">            var $b = $(this).find(&#x27;.copy-btn&#x27;)</span><br><span class=\"line\">            setTimeout(function () &#123;</span><br><span class=\"line\">              $b.text(&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;)</span><br><span class=\"line\">            &#125;, 300)</span><br><span class=\"line\">          &#125;).append(e)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>（3）、插入到页面：<br>编辑<code>/themes/pure/layout/layout.ejs</code>，在<code>&lt;/body&gt;</code>前面一行增加<code>&lt;%- partial(&#39;_partial/article-copy-code&#39;)%&gt;</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &lt;%- body %&gt;</span><br><span class=\"line\">  &lt;%- partial(&#x27;_common/footer&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class=\"line\">  &lt;%- partial(&#x27;_common/script&#x27;, &#123;post: page&#125;) %&gt;</span><br><span class=\"line\">  &lt;%- partial(&#x27;_partial/article-copy-code&#x27;) %&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>（4）、增加语言文件：<br>在<code>/themes/pure/languages</code>目录下选择对应的语言文件，在文件后面增加：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span> <span class=\"string\">复制</span></span><br><span class=\"line\">  <span class=\"attr\">copy_success:</span> <span class=\"string\">复制成功</span></span><br><span class=\"line\">  <span class=\"attr\">copy_failure:</span> <span class=\"string\">复制失败</span></span><br></pre></td></tr></table></figure>\n\n<p>（5）、增加主题配置文件<br>打开<code>themes/pure/_config.yml</code>，在文件末尾添加</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span> </span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span> </span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">result:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">copyright:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">content:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-代码块滚动条-原文\"><a href=\"#4-代码块滚动条-原文\" class=\"headerlink\" title=\"4.代码块滚动条[原文]\"></a>4.代码块滚动条[<a href=\"https://blog.iwwee.com/posts/hexo-optimize.html#%E4%B8%BA%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE\">原文</a>]</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.highlight</span>::-webkit-scrollbar &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*滚动条整体样式*/</span></span><br><span class=\"line\">  <span class=\"comment\">/*高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class=\"line\">  <span class=\"comment\">/*width: 10px;*/</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">/* 代码块滚动条 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span>::-webkit-scrollbar-thumb &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*滚动条里面小方块*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*background-color: #D62929;*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#6f6969</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">-webkit-linear-gradient</span>(<span class=\"number\">168deg</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">100%</span>, <span class=\"comment\">/*12.5*/</span></span><br><span class=\"line\">      transparent <span class=\"number\">12.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">25%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">25%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">37.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">37.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">50%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">50%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">62.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">62.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">75%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">75%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">87.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">87.5%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span>::-webkit-scrollbar-track &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*滚动条里面轨道*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#0f111a</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-添加回到顶部-原文\"><a href=\"#5-添加回到顶部-原文\" class=\"headerlink\" title=\"5.添加回到顶部 [ 原文 ]\"></a>5.添加回到顶部 <a href=\"https://hwame.top/20200520/hello-hexo-troubleshooting.html\">[ 原文 ]</a></h3><p>文件位置：<code>./themes/pure/layout/_common/script.ejs</code>，在合适位置添加如下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;go-top&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">#go-top &#123;</span><br><span class=\"line\"> width:40px;height:36px;</span><br><span class=\"line\"> background-color:#DDA0DD;</span><br><span class=\"line\"> position:relative;</span><br><span class=\"line\"> border-radius:2px;</span><br><span class=\"line\"> position:fixed;right:10px;bottom:60px;</span><br><span class=\"line\"> cursor:pointer;display:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#go-top:after &#123;</span><br><span class=\"line\"> content:&quot; &quot;;</span><br><span class=\"line\"> position:absolute;left:14px;top:14px;</span><br><span class=\"line\"> border-top:2px solid #fff;border-right:2px solid #fff;</span><br><span class=\"line\"> width:12px;height:12px;</span><br><span class=\"line\"> transform:rotate(-45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#go-top:hover &#123;</span><br><span class=\"line\"> background-color:#8A2BE2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">$(function () &#123;</span><br><span class=\"line\">  var top=$(&quot;#go-top&quot;);</span><br><span class=\"line\">  $(window).scroll(function () &#123;</span><br><span class=\"line\">    ($(window).scrollTop() &gt; 300) ? top.show(300) : top.hide(200);</span><br><span class=\"line\">    $(&quot;#go-top&quot;).click(function () &#123;</span><br><span class=\"line\">      $(&#x27;body,html&#x27;).animate(&#123;scrollTop:0&#125;);</span><br><span class=\"line\">      return false();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-使文章图片居中-原文\"><a href=\"#6-使文章图片居中-原文\" class=\"headerlink\" title=\"6.使文章图片居中[ 原文 ]\"></a>6.使文章图片居中<a href=\"https://hwame.top/20200520/hello-hexo-troubleshooting.html\">[ 原文 ]</a></h3><p>第一步：在<code>./themes/pure/source/css/style.css</code>下</p>\n<p>第二步：125行<code>img</code>修改：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h3 id=\"1-添加背景动画\"><a href=\"#1-添加背景动画\" class=\"headerlink\" title=\"1.添加背景动画\"></a>1.添加背景动画</h3><p>背景动画基于canvas，在<code>\\themes\\pure\\layout\\layout.ejs</code>中添加</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 背景动画 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">color</span>=<span class=\"string\">&quot;0,0,0&quot;</span> <span class=\"attr\">opacity</span>=<span class=\"string\">&#x27;0.8&#x27;</span> <span class=\"attr\">zIndex</span>=<span class=\"string\">&quot;-2&quot;</span> <span class=\"attr\">count</span>=<span class=\"string\">&quot;88&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">  color: 线条颜色，默认：‘0，0，0’；三个数字分别为(R,G,B),注意使用，分割</span></span><br><span class=\"line\"><span class=\"comment\">  opacity: 线条透明度0~1,默认0.5</span></span><br><span class=\"line\"><span class=\"comment\">  count: 线条总数量，默认150</span></span><br><span class=\"line\"><span class=\"comment\">  zIndex: 背景的z-Index属性，css用于控制所在层的位置，默认-1 </span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-更改代码块样式\"><a href=\"#2-更改代码块样式\" class=\"headerlink\" title=\"2.更改代码块样式\"></a>2.更改代码块样式</h3><p>修改<code>.\\themes\\pure\\source\\css\\style.css</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pre,</span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#cfcbcb</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">15px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Consolas&quot;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#4d4d4c</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-添加代码块一键复制按钮-原文\"><a href=\"#3-添加代码块一键复制按钮-原文\" class=\"headerlink\" title=\"3.添加代码块一键复制按钮[原文]\"></a>3.添加代码块一键复制按钮[<a href=\"https://blog.iwwee.com/posts/hexo-optimize.html#%E4%B8%BA%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE\">原文</a>]</h3><p>（1）、增加全局函数addLoadEvent  </p>\n<p>在<code>/themes/pure/source/js</code>目录下打开<code>application.js</code>，在文件最后追加</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">addLoadEvent</span>(<span class=\"params\">func</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oldonload = <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> != <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = func;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">oldonload</span>();</span><br><span class=\"line\">            <span class=\"title function_\">func</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>（2）、新增按钮</p>\n<p>pure默认情况下是没有代码复制功能的，此时需要对hexo增加复制代码块功能。<br>首先在<code>/themes/pure/layout/_partial</code>目录下新增<code>article-copy-code.ejs</code>，增加以下内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span>(theme.<span class=\"property\">codeblock</span>.<span class=\"property\">copy_button</span>.<span class=\"property\">enable</span>)&#123; %&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.copy-btn</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">display</span>: inline-block;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span> <span class=\"number\">12px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">font-weight</span>: <span class=\"number\">700</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">line-height</span>: <span class=\"number\">20px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">white-space</span>: nowrap;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">vertical-align</span>: middle;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">cursor</span>: pointer;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#eee</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">background-image</span>: <span class=\"built_in\">linear-gradient</span>(<span class=\"number\">#fcfcfc</span>, <span class=\"number\">#eee</span>);</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#d5d5d5</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        user-select: none;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">outline</span>: <span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">  </span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.highlight-wrap</span> <span class=\"selector-class\">.copy-btn</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">transition</span>: opacity .<span class=\"number\">3s</span> ease-in-out;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">padding</span>: <span class=\"number\">2px</span> <span class=\"number\">6px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">position</span>: absolute;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">right</span>: <span class=\"number\">4px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">top</span>: <span class=\"number\">8px</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">  </span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.highlight-wrap</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-class\">.copy-btn</span>,</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">          <span class=\"selector-class\">.highlight-wrap</span> <span class=\"selector-class\">.copy-btn</span><span class=\"selector-pseudo\">:focus</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span></span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">  </span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      <span class=\"selector-class\">.highlight-wrap</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">        <span class=\"attribute\">position</span>: relative;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">      &#125;</span></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"language-xml\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span></span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">      addLoadEvent(()=&gt;&#123;</span><br><span class=\"line\">        $(&#x27;.highlight&#x27;).each(function (i, e) &#123;</span><br><span class=\"line\">          var $wrap = $(&#x27;&lt;div&gt;&#x27;).addClass(&#x27;highlight-wrap&#x27;)</span><br><span class=\"line\">          $(e).after($wrap)</span><br><span class=\"line\">          $wrap.append($(&#x27;&lt;button&gt;&#x27;).addClass(&#x27;copy-btn&#x27;).append(&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;).on(&#x27;click&#x27;, function (e) &#123;</span><br><span class=\"line\">            var code = $(this).parent().find(&quot;.code&quot;)[0].innerText</span><br><span class=\"line\">            &lt;% if(theme.codeblock.copyright.enable)&#123; %&gt;</span><br><span class=\"line\">                code += &quot;&lt;%= theme.codeblock.copyright.content %&gt;&quot;</span><br><span class=\"line\">            &lt;% &#125; %&gt;</span><br><span class=\"line\">            var ta = document.createElement(&#x27;textarea&#x27;)</span><br><span class=\"line\">            document.body.appendChild(ta)</span><br><span class=\"line\">            ta.style.position = &#x27;absolute&#x27;</span><br><span class=\"line\">            ta.style.top = &#x27;0px&#x27;</span><br><span class=\"line\">            ta.style.left = &#x27;0px&#x27;</span><br><span class=\"line\">            ta.value = code</span><br><span class=\"line\">            ta.select()</span><br><span class=\"line\">            ta.focus()</span><br><span class=\"line\">            var result = document.execCommand(&#x27;copy&#x27;)</span><br><span class=\"line\">            document.body.removeChild(ta)</span><br><span class=\"line\">            &lt;% if(theme.codeblock.copy_button.result)&#123; %&gt;</span><br><span class=\"line\">              if(result)$(this).text(&#x27;&lt;%= __(&quot;codeblock.copy_success&quot;) %&gt;&#x27;)</span><br><span class=\"line\">              else $(this).text(&#x27;&lt;%= __(&quot;codeblock.copy_failure&quot;) %&gt;&#x27;)</span><br><span class=\"line\">            &lt;% &#125; %&gt;</span><br><span class=\"line\">            $(this).blur()</span><br><span class=\"line\">          &#125;)).on(&#x27;mouseleave&#x27;, function (e) &#123;</span><br><span class=\"line\">            var $b = $(this).find(&#x27;.copy-btn&#x27;)</span><br><span class=\"line\">            setTimeout(function () &#123;</span><br><span class=\"line\">              $b.text(&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;)</span><br><span class=\"line\">            &#125;, 300)</span><br><span class=\"line\">          &#125;).append(e)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>（3）、插入到页面：<br>编辑<code>/themes/pure/layout/layout.ejs</code>，在<code>&lt;/body&gt;</code>前面一行增加<code>&lt;%- partial(&#39;_partial/article-copy-code&#39;)%&gt;</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &lt;%- body %&gt;</span><br><span class=\"line\">  &lt;%- partial(&#x27;_common/footer&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class=\"line\">  &lt;%- partial(&#x27;_common/script&#x27;, &#123;post: page&#125;) %&gt;</span><br><span class=\"line\">  &lt;%- partial(&#x27;_partial/article-copy-code&#x27;) %&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>（4）、增加语言文件：<br>在<code>/themes/pure/languages</code>目录下选择对应的语言文件，在文件后面增加：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span> <span class=\"string\">复制</span></span><br><span class=\"line\">  <span class=\"attr\">copy_success:</span> <span class=\"string\">复制成功</span></span><br><span class=\"line\">  <span class=\"attr\">copy_failure:</span> <span class=\"string\">复制失败</span></span><br></pre></td></tr></table></figure>\n\n<p>（5）、增加主题配置文件<br>打开<code>themes/pure/_config.yml</code>，在文件末尾添加</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">codeblock:</span> </span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span> </span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">result:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">copyright:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">content:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-代码块滚动条-原文\"><a href=\"#4-代码块滚动条-原文\" class=\"headerlink\" title=\"4.代码块滚动条[原文]\"></a>4.代码块滚动条[<a href=\"https://blog.iwwee.com/posts/hexo-optimize.html#%E4%B8%BA%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE\">原文</a>]</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.highlight</span>::-webkit-scrollbar &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*滚动条整体样式*/</span></span><br><span class=\"line\">  <span class=\"comment\">/*高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class=\"line\">  <span class=\"comment\">/*width: 10px;*/</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">/* 代码块滚动条 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span>::-webkit-scrollbar-thumb &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*滚动条里面小方块*/</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*background-color: #D62929;*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#6f6969</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">-webkit-linear-gradient</span>(<span class=\"number\">168deg</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">100%</span>, <span class=\"comment\">/*12.5*/</span></span><br><span class=\"line\">      transparent <span class=\"number\">12.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">25%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">25%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">37.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">37.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">50%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">50%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">62.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">62.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">75%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">75%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.2</span>) <span class=\"number\">87.5%</span>,</span><br><span class=\"line\">      transparent <span class=\"number\">87.5%</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.highlight</span>::-webkit-scrollbar-track &#123;</span><br><span class=\"line\">  <span class=\"comment\">/*滚动条里面轨道*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#0f111a</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-添加回到顶部-原文\"><a href=\"#5-添加回到顶部-原文\" class=\"headerlink\" title=\"5.添加回到顶部 [ 原文 ]\"></a>5.添加回到顶部 <a href=\"https://hwame.top/20200520/hello-hexo-troubleshooting.html\">[ 原文 ]</a></h3><p>文件位置：<code>./themes/pure/layout/_common/script.ejs</code>，在合适位置添加如下代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;go-top&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">#go-top &#123;</span><br><span class=\"line\"> width:40px;height:36px;</span><br><span class=\"line\"> background-color:#DDA0DD;</span><br><span class=\"line\"> position:relative;</span><br><span class=\"line\"> border-radius:2px;</span><br><span class=\"line\"> position:fixed;right:10px;bottom:60px;</span><br><span class=\"line\"> cursor:pointer;display:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#go-top:after &#123;</span><br><span class=\"line\"> content:&quot; &quot;;</span><br><span class=\"line\"> position:absolute;left:14px;top:14px;</span><br><span class=\"line\"> border-top:2px solid #fff;border-right:2px solid #fff;</span><br><span class=\"line\"> width:12px;height:12px;</span><br><span class=\"line\"> transform:rotate(-45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#go-top:hover &#123;</span><br><span class=\"line\"> background-color:#8A2BE2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">$(function () &#123;</span><br><span class=\"line\">  var top=$(&quot;#go-top&quot;);</span><br><span class=\"line\">  $(window).scroll(function () &#123;</span><br><span class=\"line\">    ($(window).scrollTop() &gt; 300) ? top.show(300) : top.hide(200);</span><br><span class=\"line\">    $(&quot;#go-top&quot;).click(function () &#123;</span><br><span class=\"line\">      $(&#x27;body,html&#x27;).animate(&#123;scrollTop:0&#125;);</span><br><span class=\"line\">      return false();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-使文章图片居中-原文\"><a href=\"#6-使文章图片居中-原文\" class=\"headerlink\" title=\"6.使文章图片居中[ 原文 ]\"></a>6.使文章图片居中<a href=\"https://hwame.top/20200520/hello-hexo-troubleshooting.html\">[ 原文 ]</a></h3><p>第一步：在<code>./themes/pure/source/css/style.css</code>下</p>\n<p>第二步：125行<code>img</code>修改：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Pure README","date":"2022-10-30T18:10:22.000Z","_content":"\n## 特色\n\n- 多语言\n- 第三方评论框（友言、来必力、gitment、gitalk）\n- 可展示个人豆瓣书单\n- 可展示个人github托管项目\n- 可设置支付宝、微信打赏\n\n## 页面展示\n\n[首页](http://cofess.github.io/) | [归档](http://cofess.github.io/archives/) | [分类](http://cofess.github.io/categories/) | [标签](http://cofess.github.io/tags/) | [项目](http://cofess.github.io/repository/) | [书单](http://cofess.github.io/books/) | [友链](http://cofess.github.io/links/) | [关于](http://cofess.github.io/about/)\n\n## 配置说明\n\n在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件\n\n## 安装主题\n\n```\ngit clone https://github.com/cofess/hexo-theme-pure.git themes/pure\n```\n## 更新主题\n\n```\ncd themes/pure\ngit pull\n```\n## 启用pure主题\n\n打开站点配置文件，找到theme字段，将其值更改为 pure\n\n```\ntheme: pure\n```\n\n到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。\n\n```\nhexo s\n```\n\n## 安装插件\n\n### [hexo-wordcount](https://github.com/willin/hexo-wordcount)\n\n```\nnpm install hexo-wordcount --save\n```\n### [hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)\n\n```\nnpm install hexo-generator-json-content --save\n```\n### [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)\n\n```\nnpm install hexo-generator-feed --save\n```\n### [hexo-generator-sitemap](https://github.com/hexojs/hexo-generator-sitemap)\n\n```\nnpm install hexo-generator-sitemap --save\n```\n### [hexo-generator-baidu-sitemap](https://github.com/coneycode/hexo-generator-baidu-sitemap)\n\n```\nnpm install hexo-generator-baidu-sitemap --save\n```\n## 主题配置\n\n### 设置语言\n\n打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下：\n\n```yml\nlanguage: zh-CN\n```\n\n### 主题颜色\n\n定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple\n\n```yml\n# config\nconfig:\n  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple\n```\n\n### 导航菜单\n\n```yml\n# 导航菜单\nmenu:\n  Home: . \n  Archives: archives # 归档\n  Categories: categories # 分类\n  Tags: tags # 标签\n  Repository: repository # github repositories\n  Books: books     # 书单\n  Links: links # 友链\n  About: about # 关于\n\n# 导航菜单图标（font awesome）\nmenu_icons:\n  enable: true # 是否启用菜单图标\n  home: icon-home-fill\n  archives: icon-archives-fill\n  categories: icon-folder\n  tags: icon-tags\n  repository: icon-project\n  books: icon-book-fill\n  links: icon-friendship\n  about: icon-cup-fill\n```\n\n### 设置个人信息\n\n```yml\n头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。\n\n个人信息大部分都在 主题配置文件 中设置\n```\n\n### 搜索\n\n主题内置三种站内搜索方式：insight、swiftype、baidu\n\n```yml\n# Search\nsearch:\n  insight: true # you need to install `hexo-generator-json-content` before using Insight Search\n  swiftype: # enter swiftype install key here\n  baidu: false # you need to disable other search engines to use Baidu search\n```\n\n### 分享\n\n支持`weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin`\n\n```yml\n# Share\n# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin\nshare:\n  enable: true  # 是否启用分享\n  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标\n  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标\n```\n\n### 评论\n\n主题集成了[disqus](https://disqus.com/)、[友言](http://www.uyan.cc/)、[来必力](https://livere.com/)、[gitment](https://github.com/imsun/gitment)、[gitalk](https://github.com/gitalk/gitalk)评论系统，选择其中一种即可\n\n```yml\n# Comment\n# Gitment\n# Introduction: https://imsun.net/posts/gitment-introduction/\ncomment:\n  type: livere # 启用哪种评论系统\n  disqus:  # enter disqus shortname here\n  youyan: \n    uid: *** # enter youyan uid \n  livere:\n    uid: *** # enter livere uid\n  gitment:\n    githubID: username\n    repo: username.github.io\n    ClientID: ***\n    ClientSecret: ***\n    lazy: false\n```\n\n### 文章浏览量统计\n\n主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。\n\n比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：\n\n```yml\npv:\n  busuanzi:\n    enable: true  # 不蒜子统计\n```\n\n如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）\n\n### 项目\n\n复制`theme/pure/_source/` 目录下`repository`文件夹到`blog path/source/` 目录下\n\n新版配置（支持 Github 和 Gitee）：\n\n*新版配置将会覆盖旧版的 github 配置！*\n\n```yml\n# Repository Info (This will override 'github' option)\n# 项目仓库展示信息（将会覆盖 github 项）\nrepository:\n  platform: github # 托管平台（github | gitee）\n  username: *** # 用户名\n```\n\n旧版配置（仅支持 Github）：\n\n```yml\n# Github\ngithub: \n  username: ***  # github username\n```\n\n### 豆瓣书单\n\n复制`theme/pure/_source/` 目录下`books`文件夹到`blog path/source/` 目录下\n\n```yml\n# douban 豆瓣书单\ndouban:\n  user: *** # 豆瓣用户名\n  start: 0 # 从哪一条记录开始\n  count: 100 # 获取豆瓣书单数据条数\n```\n\n### 友情链接\n\n复制`theme/pure/_source/` 目录下`links`文件夹到`blog path/source/` 目录下\n\n在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。\n\n然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。\n\n单个友情链接的格式为：\n\n```yml\nName:\n    link: http://example.com\n    avatar: http://example.com/avatar.png\n    desc: \"这是一个描述\"\n```\n\n添加多个友情链接，我们只需要根据上面的格式重复填写即可。\n\n. 将 Name 改为友情链接的名字，例如 Cofess。\n\n. http://example.com 为友情链接的地址。\n\n. http://example.com/avatar.png 为友情链接的头像。\n\n. 这是一个描述 为友情链接描述。\n\n### 文章索引目录\n\n```yml\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\ntoc: true # 是否启用内容索引\n```\n\n### sidebar侧边栏\n\n文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：\n\n```yml\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\nsidebar: none # 是否启用sidebar侧边栏，none：不启用\n```\n\n## 博客优化\n\n### [hexo-neat](https://github.com/rozbo/hexo-neat)\n\n> auto Minify html、js、css and make it neat\n\n```\nnpm install hexo-neat --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```yml\n# hexo-neat\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:  \nneat_css:\n  enable: true\n  exclude:\n    - '*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '*.min.js' \n```\n\n### [hexo-baidu-url-submit](https://github.com/huiwang/hexo-baidu-url-submit)\n\n```\nnpm install hexo-baidu-url-submit --save\n```\n\n### [hexo-translate-title](https://github.com/cometlj/hexo-translate-title)\n\n> 使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题\n\n安装\n\n```\nnpm install hexo-translate-title --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```yml\ntranslate_title:\n  translate_way: google    #google | baidu | youdao\n  youdao_api_key: XXX\n  youdao_keyfrom: XXX\n  is_need_proxy: true     #true | false\n  proxy_url: http://localhost:8123\n```\n\n**注意**：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将`_config.yml` 下的`is_need_proxy: true`改为false。如果设置为true,请设置本地代理地址\n\n## 数学公式\n\n> Hexo默认使用\"hexo-renderer-marked\"引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签\n\n### 解决方案\n\n解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。\n\n更换Hexo的markdown渲染引擎，[hexo-renderer-markdown-it-plus](https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus)引擎替换默认的渲染引擎[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked)即可。\n\n### 安装hexo-renderer-markdown-it-plus插件\n\n```\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it-plus --save\n```\n\n### 配置\n\n安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件`_config.yml`中添加\n\n```yml\nmarkdown_it_plus:\n  highlight: true\n  html: true\n  xhtmlOut: true\n  breaks: true\n  langPrefix:\n  linkify: true\n  typographer:\n  quotes: “”‘’\n  plugins:\n    - plugin:\n        name: markdown-it-katex\n        enable: true\n    - plugin:\n        name: markdown-it-mark\n        enable: false  \n```\n\n### 文章启用mathjax\n\n```\ntitle: Hello World\nmathjax: true\n```","source":"_posts/Hexo/Pure README.md","raw":"---\ntitle: Pure README\ntags: Hexo\ncategories: Hexo\ndate: 2022-10-31 02:10:22\n\n---\n\n## 特色\n\n- 多语言\n- 第三方评论框（友言、来必力、gitment、gitalk）\n- 可展示个人豆瓣书单\n- 可展示个人github托管项目\n- 可设置支付宝、微信打赏\n\n## 页面展示\n\n[首页](http://cofess.github.io/) | [归档](http://cofess.github.io/archives/) | [分类](http://cofess.github.io/categories/) | [标签](http://cofess.github.io/tags/) | [项目](http://cofess.github.io/repository/) | [书单](http://cofess.github.io/books/) | [友链](http://cofess.github.io/links/) | [关于](http://cofess.github.io/about/)\n\n## 配置说明\n\n在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件\n\n## 安装主题\n\n```\ngit clone https://github.com/cofess/hexo-theme-pure.git themes/pure\n```\n## 更新主题\n\n```\ncd themes/pure\ngit pull\n```\n## 启用pure主题\n\n打开站点配置文件，找到theme字段，将其值更改为 pure\n\n```\ntheme: pure\n```\n\n到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。\n\n```\nhexo s\n```\n\n## 安装插件\n\n### [hexo-wordcount](https://github.com/willin/hexo-wordcount)\n\n```\nnpm install hexo-wordcount --save\n```\n### [hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)\n\n```\nnpm install hexo-generator-json-content --save\n```\n### [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)\n\n```\nnpm install hexo-generator-feed --save\n```\n### [hexo-generator-sitemap](https://github.com/hexojs/hexo-generator-sitemap)\n\n```\nnpm install hexo-generator-sitemap --save\n```\n### [hexo-generator-baidu-sitemap](https://github.com/coneycode/hexo-generator-baidu-sitemap)\n\n```\nnpm install hexo-generator-baidu-sitemap --save\n```\n## 主题配置\n\n### 设置语言\n\n打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下：\n\n```yml\nlanguage: zh-CN\n```\n\n### 主题颜色\n\n定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple\n\n```yml\n# config\nconfig:\n  skin: # 主题颜色 theme-black theme-blue theme-green theme-purple\n```\n\n### 导航菜单\n\n```yml\n# 导航菜单\nmenu:\n  Home: . \n  Archives: archives # 归档\n  Categories: categories # 分类\n  Tags: tags # 标签\n  Repository: repository # github repositories\n  Books: books     # 书单\n  Links: links # 友链\n  About: about # 关于\n\n# 导航菜单图标（font awesome）\nmenu_icons:\n  enable: true # 是否启用菜单图标\n  home: icon-home-fill\n  archives: icon-archives-fill\n  categories: icon-folder\n  tags: icon-tags\n  repository: icon-project\n  books: icon-book-fill\n  links: icon-friendship\n  about: icon-cup-fill\n```\n\n### 设置个人信息\n\n```yml\n头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。\n\n个人信息大部分都在 主题配置文件 中设置\n```\n\n### 搜索\n\n主题内置三种站内搜索方式：insight、swiftype、baidu\n\n```yml\n# Search\nsearch:\n  insight: true # you need to install `hexo-generator-json-content` before using Insight Search\n  swiftype: # enter swiftype install key here\n  baidu: false # you need to disable other search engines to use Baidu search\n```\n\n### 分享\n\n支持`weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin`\n\n```yml\n# Share\n# weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin\nshare:\n  enable: true  # 是否启用分享\n  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标\n  mobile_sites: weibo,qq,qzone  # 移动端显示的分享图标\n```\n\n### 评论\n\n主题集成了[disqus](https://disqus.com/)、[友言](http://www.uyan.cc/)、[来必力](https://livere.com/)、[gitment](https://github.com/imsun/gitment)、[gitalk](https://github.com/gitalk/gitalk)评论系统，选择其中一种即可\n\n```yml\n# Comment\n# Gitment\n# Introduction: https://imsun.net/posts/gitment-introduction/\ncomment:\n  type: livere # 启用哪种评论系统\n  disqus:  # enter disqus shortname here\n  youyan: \n    uid: *** # enter youyan uid \n  livere:\n    uid: *** # enter livere uid\n  gitment:\n    githubID: username\n    repo: username.github.io\n    ClientID: ***\n    ClientSecret: ***\n    lazy: false\n```\n\n### 文章浏览量统计\n\n主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。\n\n比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：\n\n```yml\npv:\n  busuanzi:\n    enable: true  # 不蒜子统计\n```\n\n如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）\n\n### 项目\n\n复制`theme/pure/_source/` 目录下`repository`文件夹到`blog path/source/` 目录下\n\n新版配置（支持 Github 和 Gitee）：\n\n*新版配置将会覆盖旧版的 github 配置！*\n\n```yml\n# Repository Info (This will override 'github' option)\n# 项目仓库展示信息（将会覆盖 github 项）\nrepository:\n  platform: github # 托管平台（github | gitee）\n  username: *** # 用户名\n```\n\n旧版配置（仅支持 Github）：\n\n```yml\n# Github\ngithub: \n  username: ***  # github username\n```\n\n### 豆瓣书单\n\n复制`theme/pure/_source/` 目录下`books`文件夹到`blog path/source/` 目录下\n\n```yml\n# douban 豆瓣书单\ndouban:\n  user: *** # 豆瓣用户名\n  start: 0 # 从哪一条记录开始\n  count: 100 # 获取豆瓣书单数据条数\n```\n\n### 友情链接\n\n复制`theme/pure/_source/` 目录下`links`文件夹到`blog path/source/` 目录下\n\n在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。\n\n然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。\n\n单个友情链接的格式为：\n\n```yml\nName:\n    link: http://example.com\n    avatar: http://example.com/avatar.png\n    desc: \"这是一个描述\"\n```\n\n添加多个友情链接，我们只需要根据上面的格式重复填写即可。\n\n. 将 Name 改为友情链接的名字，例如 Cofess。\n\n. http://example.com 为友情链接的地址。\n\n. http://example.com/avatar.png 为友情链接的头像。\n\n. 这是一个描述 为友情链接描述。\n\n### 文章索引目录\n\n```yml\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\ntoc: true # 是否启用内容索引\n```\n\n### sidebar侧边栏\n\n文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：\n\n```yml\ntitle: 文章标题\ncategories:\n  - 文章分类\ntags:\n  - 文章标签\nsidebar: none # 是否启用sidebar侧边栏，none：不启用\n```\n\n## 博客优化\n\n### [hexo-neat](https://github.com/rozbo/hexo-neat)\n\n> auto Minify html、js、css and make it neat\n\n```\nnpm install hexo-neat --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```yml\n# hexo-neat\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:  \nneat_css:\n  enable: true\n  exclude:\n    - '*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '*.min.js' \n```\n\n### [hexo-baidu-url-submit](https://github.com/huiwang/hexo-baidu-url-submit)\n\n```\nnpm install hexo-baidu-url-submit --save\n```\n\n### [hexo-translate-title](https://github.com/cometlj/hexo-translate-title)\n\n> 使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题\n\n安装\n\n```\nnpm install hexo-translate-title --save\n```\n\n在博客配置文件`_config.yml`中添加\n\n```yml\ntranslate_title:\n  translate_way: google    #google | baidu | youdao\n  youdao_api_key: XXX\n  youdao_keyfrom: XXX\n  is_need_proxy: true     #true | false\n  proxy_url: http://localhost:8123\n```\n\n**注意**：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将`_config.yml` 下的`is_need_proxy: true`改为false。如果设置为true,请设置本地代理地址\n\n## 数学公式\n\n> Hexo默认使用\"hexo-renderer-marked\"引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签\n\n### 解决方案\n\n解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。\n\n更换Hexo的markdown渲染引擎，[hexo-renderer-markdown-it-plus](https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus)引擎替换默认的渲染引擎[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked)即可。\n\n### 安装hexo-renderer-markdown-it-plus插件\n\n```\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it-plus --save\n```\n\n### 配置\n\n安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件`_config.yml`中添加\n\n```yml\nmarkdown_it_plus:\n  highlight: true\n  html: true\n  xhtmlOut: true\n  breaks: true\n  langPrefix:\n  linkify: true\n  typographer:\n  quotes: “”‘’\n  plugins:\n    - plugin:\n        name: markdown-it-katex\n        enable: true\n    - plugin:\n        name: markdown-it-mark\n        enable: false  \n```\n\n### 文章启用mathjax\n\n```\ntitle: Hello World\nmathjax: true\n```","slug":"Hexo/Pure README","published":1,"updated":"2023-05-06T02:56:27.116Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1o000gncm204cd3lh3","content":"<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ul>\n<li>多语言</li>\n<li>第三方评论框（友言、来必力、gitment、gitalk）</li>\n<li>可展示个人豆瓣书单</li>\n<li>可展示个人github托管项目</li>\n<li>可设置支付宝、微信打赏</li>\n</ul>\n<h2 id=\"页面展示\"><a href=\"#页面展示\" class=\"headerlink\" title=\"页面展示\"></a>页面展示</h2><p><a href=\"http://cofess.github.io/\">首页</a> | <a href=\"http://cofess.github.io/archives/\">归档</a> | <a href=\"http://cofess.github.io/categories/\">分类</a> | <a href=\"http://cofess.github.io/tags/\">标签</a> | <a href=\"http://cofess.github.io/repository/\">项目</a> | <a href=\"http://cofess.github.io/books/\">书单</a> | <a href=\"http://cofess.github.io/links/\">友链</a> | <a href=\"http://cofess.github.io/about/\">关于</a></p>\n<h2 id=\"配置说明\"><a href=\"#配置说明\" class=\"headerlink\" title=\"配置说明\"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新主题\"><a href=\"#更新主题\" class=\"headerlink\" title=\"更新主题\"></a>更新主题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/pure</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用pure主题\"><a href=\"#启用pure主题\" class=\"headerlink\" title=\"启用pure主题\"></a>启用pure主题</h2><p>打开站点配置文件，找到theme字段，将其值更改为 pure</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: pure</span><br></pre></td></tr></table></figure>\n\n<p>到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><h3 id=\"hexo-wordcount\"><a href=\"#hexo-wordcount\" class=\"headerlink\" title=\"hexo-wordcount\"></a><a href=\"https://github.com/willin/hexo-wordcount\">hexo-wordcount</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-json-content\"><a href=\"#hexo-generator-json-content\" class=\"headerlink\" title=\"hexo-generator-json-content\"></a><a href=\"https://github.com/alexbruno/hexo-generator-json-content\">hexo-generator-json-content</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-feed\"><a href=\"#hexo-generator-feed\" class=\"headerlink\" title=\"hexo-generator-feed\"></a><a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-sitemap\"><a href=\"#hexo-generator-sitemap\" class=\"headerlink\" title=\"hexo-generator-sitemap\"></a><a href=\"https://github.com/hexojs/hexo-generator-sitemap\">hexo-generator-sitemap</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-baidu-sitemap\"><a href=\"#hexo-generator-baidu-sitemap\" class=\"headerlink\" title=\"hexo-generator-baidu-sitemap\"></a><a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\">hexo-generator-baidu-sitemap</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h2><h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"主题颜色\"><a href=\"#主题颜色\" class=\"headerlink\" title=\"主题颜色\"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config</span></span><br><span class=\"line\"><span class=\"attr\">config:</span></span><br><span class=\"line\">  <span class=\"attr\">skin:</span> <span class=\"comment\"># 主题颜色 theme-black theme-blue theme-green theme-purple</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"导航菜单\"><a href=\"#导航菜单\" class=\"headerlink\" title=\"导航菜单\"></a>导航菜单</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导航菜单</span></span><br><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">Home:</span> <span class=\"string\">.</span> </span><br><span class=\"line\">  <span class=\"attr\">Archives:</span> <span class=\"string\">archives</span> <span class=\"comment\"># 归档</span></span><br><span class=\"line\">  <span class=\"attr\">Categories:</span> <span class=\"string\">categories</span> <span class=\"comment\"># 分类</span></span><br><span class=\"line\">  <span class=\"attr\">Tags:</span> <span class=\"string\">tags</span> <span class=\"comment\"># 标签</span></span><br><span class=\"line\">  <span class=\"attr\">Repository:</span> <span class=\"string\">repository</span> <span class=\"comment\"># github repositories</span></span><br><span class=\"line\">  <span class=\"attr\">Books:</span> <span class=\"string\">books</span>     <span class=\"comment\"># 书单</span></span><br><span class=\"line\">  <span class=\"attr\">Links:</span> <span class=\"string\">links</span> <span class=\"comment\"># 友链</span></span><br><span class=\"line\">  <span class=\"attr\">About:</span> <span class=\"string\">about</span> <span class=\"comment\"># 关于</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导航菜单图标（font awesome）</span></span><br><span class=\"line\"><span class=\"attr\">menu_icons:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是否启用菜单图标</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">icon-home-fill</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">icon-archives-fill</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">icon-folder</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">icon-tags</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">icon-project</span></span><br><span class=\"line\">  <span class=\"attr\">books:</span> <span class=\"string\">icon-book-fill</span></span><br><span class=\"line\">  <span class=\"attr\">links:</span> <span class=\"string\">icon-friendship</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">icon-cup-fill</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置个人信息\"><a href=\"#设置个人信息\" class=\"headerlink\" title=\"设置个人信息\"></a>设置个人信息</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">头像在themes\\pure\\source\\images</span> <span class=\"string\">目录下替换图片即可，捐献的二维码同理。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">个人信息大部分都在</span> <span class=\"string\">主题配置文件</span> <span class=\"string\">中设置</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Search</span></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">insight:</span> <span class=\"literal\">true</span> <span class=\"comment\"># you need to install `hexo-generator-json-content` before using Insight Search</span></span><br><span class=\"line\">  <span class=\"attr\">swiftype:</span> <span class=\"comment\"># enter swiftype install key here</span></span><br><span class=\"line\">  <span class=\"attr\">baidu:</span> <span class=\"literal\">false</span> <span class=\"comment\"># you need to disable other search engines to use Baidu search</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Share</span></span><br><span class=\"line\"><span class=\"comment\"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span></span><br><span class=\"line\"><span class=\"attr\">share:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span>  <span class=\"comment\"># 是否启用分享</span></span><br><span class=\"line\">  <span class=\"attr\">sites:</span> <span class=\"string\">weibo,qq,wechat,facebook,twitter</span>  <span class=\"comment\"># PC端显示的分享图标</span></span><br><span class=\"line\">  <span class=\"attr\">mobile_sites:</span> <span class=\"string\">weibo,qq,qzone</span>  <span class=\"comment\"># 移动端显示的分享图标</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h3><p>主题集成了<a href=\"https://disqus.com/\">disqus</a>、<a href=\"http://www.uyan.cc/\">友言</a>、<a href=\"https://livere.com/\">来必力</a>、<a href=\"https://github.com/imsun/gitment\">gitment</a>、<a href=\"https://github.com/gitalk/gitalk\">gitalk</a>评论系统，选择其中一种即可</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Comment</span></span><br><span class=\"line\"><span class=\"comment\"># Gitment</span></span><br><span class=\"line\"><span class=\"comment\"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class=\"line\"><span class=\"attr\">comment:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">livere</span> <span class=\"comment\"># 启用哪种评论系统</span></span><br><span class=\"line\">  <span class=\"attr\">disqus:</span>  <span class=\"comment\"># enter disqus shortname here</span></span><br><span class=\"line\">  <span class=\"attr\">youyan:</span> </span><br><span class=\"line\">    <span class=\"attr\">uid:</span> <span class=\"string\">***</span> <span class=\"comment\"># enter youyan uid </span></span><br><span class=\"line\">  <span class=\"attr\">livere:</span></span><br><span class=\"line\">    <span class=\"attr\">uid:</span> <span class=\"string\">***</span> <span class=\"comment\"># enter livere uid</span></span><br><span class=\"line\">  <span class=\"attr\">gitment:</span></span><br><span class=\"line\">    <span class=\"attr\">githubID:</span> <span class=\"string\">username</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span> <span class=\"string\">username.github.io</span></span><br><span class=\"line\">    <span class=\"attr\">ClientID:</span> <span class=\"string\">***</span></span><br><span class=\"line\">    <span class=\"attr\">ClientSecret:</span> <span class=\"string\">***</span></span><br><span class=\"line\">    <span class=\"attr\">lazy:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文章浏览量统计\"><a href=\"#文章浏览量统计\" class=\"headerlink\" title=\"文章浏览量统计\"></a>文章浏览量统计</h3><p>主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。</p>\n<p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pv:</span></span><br><span class=\"line\">  <span class=\"attr\">busuanzi:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span>  <span class=\"comment\"># 不蒜子统计</span></span><br></pre></td></tr></table></figure>\n\n<p>如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）</p>\n<h3 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<p>新版配置（支持 Github 和 Gitee）：</p>\n<p><em>新版配置将会覆盖旧版的 github 配置！</em></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Repository Info (This will override &#x27;github&#x27; option)</span></span><br><span class=\"line\"><span class=\"comment\"># 项目仓库展示信息（将会覆盖 github 项）</span></span><br><span class=\"line\"><span class=\"attr\">repository:</span></span><br><span class=\"line\">  <span class=\"attr\">platform:</span> <span class=\"string\">github</span> <span class=\"comment\"># 托管平台（github | gitee）</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">***</span> <span class=\"comment\"># 用户名</span></span><br></pre></td></tr></table></figure>\n\n<p>旧版配置（仅支持 Github）：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Github</span></span><br><span class=\"line\"><span class=\"attr\">github:</span> </span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">***</span>  <span class=\"comment\"># github username</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"豆瓣书单\"><a href=\"#豆瓣书单\" class=\"headerlink\" title=\"豆瓣书单\"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># douban 豆瓣书单</span></span><br><span class=\"line\"><span class=\"attr\">douban:</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span> <span class=\"string\">***</span> <span class=\"comment\"># 豆瓣用户名</span></span><br><span class=\"line\">  <span class=\"attr\">start:</span> <span class=\"number\">0</span> <span class=\"comment\"># 从哪一条记录开始</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"number\">100</span> <span class=\"comment\"># 获取豆瓣书单数据条数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p>\n<p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p>\n<p>单个友情链接的格式为：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Name:</span></span><br><span class=\"line\">    <span class=\"attr\">link:</span> <span class=\"string\">http://example.com</span></span><br><span class=\"line\">    <span class=\"attr\">avatar:</span> <span class=\"string\">http://example.com/avatar.png</span></span><br><span class=\"line\">    <span class=\"attr\">desc:</span> <span class=\"string\">&quot;这是一个描述&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p>\n<p>. 将 Name 改为友情链接的名字，例如 Cofess。</p>\n<p>. <a href=\"http://example.com/\">http://example.com</a> 为友情链接的地址。</p>\n<p>. <a href=\"http://example.com/avatar.png\">http://example.com/avatar.png</a> 为友情链接的头像。</p>\n<p>. 这是一个描述 为友情链接描述。</p>\n<h3 id=\"文章索引目录\"><a href=\"#文章索引目录\" class=\"headerlink\" title=\"文章索引目录\"></a>文章索引目录</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章分类</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章标签</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是否启用内容索引</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sidebar侧边栏\"><a href=\"#sidebar侧边栏\" class=\"headerlink\" title=\"sidebar侧边栏\"></a>sidebar侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章分类</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章标签</span></span><br><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"string\">none</span> <span class=\"comment\"># 是否启用sidebar侧边栏，none：不启用</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"博客优化\"><a href=\"#博客优化\" class=\"headerlink\" title=\"博客优化\"></a>博客优化</h2><h3 id=\"hexo-neat\"><a href=\"#hexo-neat\" class=\"headerlink\" title=\"hexo-neat\"></a><a href=\"https://github.com/rozbo/hexo-neat\">hexo-neat</a></h3><blockquote>\n<p>auto Minify html、js、css and make it neat</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo-neat</span></span><br><span class=\"line\"><span class=\"attr\">neat_enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">neat_html:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span>  </span><br><span class=\"line\"><span class=\"attr\">neat_css:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.min.css&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">neat_js:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">mangle:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">output:</span></span><br><span class=\"line\">  <span class=\"attr\">compress:</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.min.js&#x27;</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-baidu-url-submit\"><a href=\"#hexo-baidu-url-submit\" class=\"headerlink\" title=\"hexo-baidu-url-submit\"></a><a href=\"https://github.com/huiwang/hexo-baidu-url-submit\">hexo-baidu-url-submit</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-translate-title\"><a href=\"#hexo-translate-title\" class=\"headerlink\" title=\"hexo-translate-title\"></a><a href=\"https://github.com/cometlj/hexo-translate-title\">hexo-translate-title</a></h3><blockquote>\n<p>使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题</p>\n</blockquote>\n<p>安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure>\n\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">translate_title:</span></span><br><span class=\"line\">  <span class=\"attr\">translate_way:</span> <span class=\"string\">google</span>    <span class=\"comment\">#google | baidu | youdao</span></span><br><span class=\"line\">  <span class=\"attr\">youdao_api_key:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\">  <span class=\"attr\">youdao_keyfrom:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\">  <span class=\"attr\">is_need_proxy:</span> <span class=\"literal\">true</span>     <span class=\"comment\">#true | false</span></span><br><span class=\"line\">  <span class=\"attr\">proxy_url:</span> <span class=\"string\">http://localhost:8123</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为false。如果设置为true,请设置本地代理地址</p>\n<h2 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h2><blockquote>\n<p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签</p>\n</blockquote>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p>\n<p>更换Hexo的markdown渲染引擎，<a href=\"https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus\">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked</a>即可。</p>\n<h3 id=\"安装hexo-renderer-markdown-it-plus插件\"><a href=\"#安装hexo-renderer-markdown-it-plus插件\" class=\"headerlink\" title=\"安装hexo-renderer-markdown-it-plus插件\"></a>安装hexo-renderer-markdown-it-plus插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save</span><br><span class=\"line\">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown_it_plus:</span></span><br><span class=\"line\">  <span class=\"attr\">highlight:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">langPrefix:</span></span><br><span class=\"line\">  <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">typographer:</span></span><br><span class=\"line\">  <span class=\"attr\">quotes:</span> <span class=\"string\">“”‘’</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">plugin:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">markdown-it-katex</span></span><br><span class=\"line\">        <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">plugin:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">markdown-it-mark</span></span><br><span class=\"line\">        <span class=\"attr\">enable:</span> <span class=\"literal\">false</span>  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文章启用mathjax\"><a href=\"#文章启用mathjax\" class=\"headerlink\" title=\"文章启用mathjax\"></a>文章启用mathjax</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">mathjax: true</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ul>\n<li>多语言</li>\n<li>第三方评论框（友言、来必力、gitment、gitalk）</li>\n<li>可展示个人豆瓣书单</li>\n<li>可展示个人github托管项目</li>\n<li>可设置支付宝、微信打赏</li>\n</ul>\n<h2 id=\"页面展示\"><a href=\"#页面展示\" class=\"headerlink\" title=\"页面展示\"></a>页面展示</h2><p><a href=\"http://cofess.github.io/\">首页</a> | <a href=\"http://cofess.github.io/archives/\">归档</a> | <a href=\"http://cofess.github.io/categories/\">分类</a> | <a href=\"http://cofess.github.io/tags/\">标签</a> | <a href=\"http://cofess.github.io/repository/\">项目</a> | <a href=\"http://cofess.github.io/books/\">书单</a> | <a href=\"http://cofess.github.io/links/\">友链</a> | <a href=\"http://cofess.github.io/about/\">关于</a></p>\n<h2 id=\"配置说明\"><a href=\"#配置说明\" class=\"headerlink\" title=\"配置说明\"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新主题\"><a href=\"#更新主题\" class=\"headerlink\" title=\"更新主题\"></a>更新主题</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd themes/pure</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用pure主题\"><a href=\"#启用pure主题\" class=\"headerlink\" title=\"启用pure主题\"></a>启用pure主题</h2><p>打开站点配置文件，找到theme字段，将其值更改为 pure</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: pure</span><br></pre></td></tr></table></figure>\n\n<p>到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><h3 id=\"hexo-wordcount\"><a href=\"#hexo-wordcount\" class=\"headerlink\" title=\"hexo-wordcount\"></a><a href=\"https://github.com/willin/hexo-wordcount\">hexo-wordcount</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-json-content\"><a href=\"#hexo-generator-json-content\" class=\"headerlink\" title=\"hexo-generator-json-content\"></a><a href=\"https://github.com/alexbruno/hexo-generator-json-content\">hexo-generator-json-content</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-feed\"><a href=\"#hexo-generator-feed\" class=\"headerlink\" title=\"hexo-generator-feed\"></a><a href=\"https://github.com/hexojs/hexo-generator-feed\">hexo-generator-feed</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-sitemap\"><a href=\"#hexo-generator-sitemap\" class=\"headerlink\" title=\"hexo-generator-sitemap\"></a><a href=\"https://github.com/hexojs/hexo-generator-sitemap\">hexo-generator-sitemap</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-generator-baidu-sitemap\"><a href=\"#hexo-generator-baidu-sitemap\" class=\"headerlink\" title=\"hexo-generator-baidu-sitemap\"></a><a href=\"https://github.com/coneycode/hexo-generator-baidu-sitemap\">hexo-generator-baidu-sitemap</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"主题配置\"><a href=\"#主题配置\" class=\"headerlink\" title=\"主题配置\"></a>主题配置</h2><h3 id=\"设置语言\"><a href=\"#设置语言\" class=\"headerlink\" title=\"设置语言\"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"主题颜色\"><a href=\"#主题颜色\" class=\"headerlink\" title=\"主题颜色\"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config</span></span><br><span class=\"line\"><span class=\"attr\">config:</span></span><br><span class=\"line\">  <span class=\"attr\">skin:</span> <span class=\"comment\"># 主题颜色 theme-black theme-blue theme-green theme-purple</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"导航菜单\"><a href=\"#导航菜单\" class=\"headerlink\" title=\"导航菜单\"></a>导航菜单</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导航菜单</span></span><br><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">Home:</span> <span class=\"string\">.</span> </span><br><span class=\"line\">  <span class=\"attr\">Archives:</span> <span class=\"string\">archives</span> <span class=\"comment\"># 归档</span></span><br><span class=\"line\">  <span class=\"attr\">Categories:</span> <span class=\"string\">categories</span> <span class=\"comment\"># 分类</span></span><br><span class=\"line\">  <span class=\"attr\">Tags:</span> <span class=\"string\">tags</span> <span class=\"comment\"># 标签</span></span><br><span class=\"line\">  <span class=\"attr\">Repository:</span> <span class=\"string\">repository</span> <span class=\"comment\"># github repositories</span></span><br><span class=\"line\">  <span class=\"attr\">Books:</span> <span class=\"string\">books</span>     <span class=\"comment\"># 书单</span></span><br><span class=\"line\">  <span class=\"attr\">Links:</span> <span class=\"string\">links</span> <span class=\"comment\"># 友链</span></span><br><span class=\"line\">  <span class=\"attr\">About:</span> <span class=\"string\">about</span> <span class=\"comment\"># 关于</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导航菜单图标（font awesome）</span></span><br><span class=\"line\"><span class=\"attr\">menu_icons:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是否启用菜单图标</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">icon-home-fill</span></span><br><span class=\"line\">  <span class=\"attr\">archives:</span> <span class=\"string\">icon-archives-fill</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"string\">icon-folder</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"string\">icon-tags</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">icon-project</span></span><br><span class=\"line\">  <span class=\"attr\">books:</span> <span class=\"string\">icon-book-fill</span></span><br><span class=\"line\">  <span class=\"attr\">links:</span> <span class=\"string\">icon-friendship</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span> <span class=\"string\">icon-cup-fill</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置个人信息\"><a href=\"#设置个人信息\" class=\"headerlink\" title=\"设置个人信息\"></a>设置个人信息</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">头像在themes\\pure\\source\\images</span> <span class=\"string\">目录下替换图片即可，捐献的二维码同理。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">个人信息大部分都在</span> <span class=\"string\">主题配置文件</span> <span class=\"string\">中设置</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Search</span></span><br><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">insight:</span> <span class=\"literal\">true</span> <span class=\"comment\"># you need to install `hexo-generator-json-content` before using Insight Search</span></span><br><span class=\"line\">  <span class=\"attr\">swiftype:</span> <span class=\"comment\"># enter swiftype install key here</span></span><br><span class=\"line\">  <span class=\"attr\">baidu:</span> <span class=\"literal\">false</span> <span class=\"comment\"># you need to disable other search engines to use Baidu search</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Share</span></span><br><span class=\"line\"><span class=\"comment\"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span></span><br><span class=\"line\"><span class=\"attr\">share:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span>  <span class=\"comment\"># 是否启用分享</span></span><br><span class=\"line\">  <span class=\"attr\">sites:</span> <span class=\"string\">weibo,qq,wechat,facebook,twitter</span>  <span class=\"comment\"># PC端显示的分享图标</span></span><br><span class=\"line\">  <span class=\"attr\">mobile_sites:</span> <span class=\"string\">weibo,qq,qzone</span>  <span class=\"comment\"># 移动端显示的分享图标</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h3><p>主题集成了<a href=\"https://disqus.com/\">disqus</a>、<a href=\"http://www.uyan.cc/\">友言</a>、<a href=\"https://livere.com/\">来必力</a>、<a href=\"https://github.com/imsun/gitment\">gitment</a>、<a href=\"https://github.com/gitalk/gitalk\">gitalk</a>评论系统，选择其中一种即可</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Comment</span></span><br><span class=\"line\"><span class=\"comment\"># Gitment</span></span><br><span class=\"line\"><span class=\"comment\"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class=\"line\"><span class=\"attr\">comment:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">livere</span> <span class=\"comment\"># 启用哪种评论系统</span></span><br><span class=\"line\">  <span class=\"attr\">disqus:</span>  <span class=\"comment\"># enter disqus shortname here</span></span><br><span class=\"line\">  <span class=\"attr\">youyan:</span> </span><br><span class=\"line\">    <span class=\"attr\">uid:</span> <span class=\"string\">***</span> <span class=\"comment\"># enter youyan uid </span></span><br><span class=\"line\">  <span class=\"attr\">livere:</span></span><br><span class=\"line\">    <span class=\"attr\">uid:</span> <span class=\"string\">***</span> <span class=\"comment\"># enter livere uid</span></span><br><span class=\"line\">  <span class=\"attr\">gitment:</span></span><br><span class=\"line\">    <span class=\"attr\">githubID:</span> <span class=\"string\">username</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span> <span class=\"string\">username.github.io</span></span><br><span class=\"line\">    <span class=\"attr\">ClientID:</span> <span class=\"string\">***</span></span><br><span class=\"line\">    <span class=\"attr\">ClientSecret:</span> <span class=\"string\">***</span></span><br><span class=\"line\">    <span class=\"attr\">lazy:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文章浏览量统计\"><a href=\"#文章浏览量统计\" class=\"headerlink\" title=\"文章浏览量统计\"></a>文章浏览量统计</h3><p>主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。</p>\n<p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">pv:</span></span><br><span class=\"line\">  <span class=\"attr\">busuanzi:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span>  <span class=\"comment\"># 不蒜子统计</span></span><br></pre></td></tr></table></figure>\n\n<p>如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）</p>\n<h3 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<p>新版配置（支持 Github 和 Gitee）：</p>\n<p><em>新版配置将会覆盖旧版的 github 配置！</em></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Repository Info (This will override &#x27;github&#x27; option)</span></span><br><span class=\"line\"><span class=\"comment\"># 项目仓库展示信息（将会覆盖 github 项）</span></span><br><span class=\"line\"><span class=\"attr\">repository:</span></span><br><span class=\"line\">  <span class=\"attr\">platform:</span> <span class=\"string\">github</span> <span class=\"comment\"># 托管平台（github | gitee）</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">***</span> <span class=\"comment\"># 用户名</span></span><br></pre></td></tr></table></figure>\n\n<p>旧版配置（仅支持 Github）：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Github</span></span><br><span class=\"line\"><span class=\"attr\">github:</span> </span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">***</span>  <span class=\"comment\"># github username</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"豆瓣书单\"><a href=\"#豆瓣书单\" class=\"headerlink\" title=\"豆瓣书单\"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># douban 豆瓣书单</span></span><br><span class=\"line\"><span class=\"attr\">douban:</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span> <span class=\"string\">***</span> <span class=\"comment\"># 豆瓣用户名</span></span><br><span class=\"line\">  <span class=\"attr\">start:</span> <span class=\"number\">0</span> <span class=\"comment\"># 从哪一条记录开始</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"number\">100</span> <span class=\"comment\"># 获取豆瓣书单数据条数</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p>\n<p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p>\n<p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p>\n<p>单个友情链接的格式为：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">Name:</span></span><br><span class=\"line\">    <span class=\"attr\">link:</span> <span class=\"string\">http://example.com</span></span><br><span class=\"line\">    <span class=\"attr\">avatar:</span> <span class=\"string\">http://example.com/avatar.png</span></span><br><span class=\"line\">    <span class=\"attr\">desc:</span> <span class=\"string\">&quot;这是一个描述&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p>\n<p>. 将 Name 改为友情链接的名字，例如 Cofess。</p>\n<p>. <a href=\"http://example.com/\">http://example.com</a> 为友情链接的地址。</p>\n<p>. <a href=\"http://example.com/avatar.png\">http://example.com/avatar.png</a> 为友情链接的头像。</p>\n<p>. 这是一个描述 为友情链接描述。</p>\n<h3 id=\"文章索引目录\"><a href=\"#文章索引目录\" class=\"headerlink\" title=\"文章索引目录\"></a>文章索引目录</h3><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章分类</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章标签</span></span><br><span class=\"line\"><span class=\"attr\">toc:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 是否启用内容索引</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sidebar侧边栏\"><a href=\"#sidebar侧边栏\" class=\"headerlink\" title=\"sidebar侧边栏\"></a>sidebar侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章分类</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">文章标签</span></span><br><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"string\">none</span> <span class=\"comment\"># 是否启用sidebar侧边栏，none：不启用</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"博客优化\"><a href=\"#博客优化\" class=\"headerlink\" title=\"博客优化\"></a>博客优化</h2><h3 id=\"hexo-neat\"><a href=\"#hexo-neat\" class=\"headerlink\" title=\"hexo-neat\"></a><a href=\"https://github.com/rozbo/hexo-neat\">hexo-neat</a></h3><blockquote>\n<p>auto Minify html、js、css and make it neat</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo-neat</span></span><br><span class=\"line\"><span class=\"attr\">neat_enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">neat_html:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span>  </span><br><span class=\"line\"><span class=\"attr\">neat_css:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.min.css&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">neat_js:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">mangle:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">output:</span></span><br><span class=\"line\">  <span class=\"attr\">compress:</span></span><br><span class=\"line\">  <span class=\"attr\">exclude:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&#x27;*.min.js&#x27;</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-baidu-url-submit\"><a href=\"#hexo-baidu-url-submit\" class=\"headerlink\" title=\"hexo-baidu-url-submit\"></a><a href=\"https://github.com/huiwang/hexo-baidu-url-submit\">hexo-baidu-url-submit</a></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hexo-translate-title\"><a href=\"#hexo-translate-title\" class=\"headerlink\" title=\"hexo-translate-title\"></a><a href=\"https://github.com/cometlj/hexo-translate-title\">hexo-translate-title</a></h3><blockquote>\n<p>使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题</p>\n</blockquote>\n<p>安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure>\n\n<p>在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">translate_title:</span></span><br><span class=\"line\">  <span class=\"attr\">translate_way:</span> <span class=\"string\">google</span>    <span class=\"comment\">#google | baidu | youdao</span></span><br><span class=\"line\">  <span class=\"attr\">youdao_api_key:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\">  <span class=\"attr\">youdao_keyfrom:</span> <span class=\"string\">XXX</span></span><br><span class=\"line\">  <span class=\"attr\">is_need_proxy:</span> <span class=\"literal\">true</span>     <span class=\"comment\">#true | false</span></span><br><span class=\"line\">  <span class=\"attr\">proxy_url:</span> <span class=\"string\">http://localhost:8123</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为false。如果设置为true,请设置本地代理地址</p>\n<h2 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h2><blockquote>\n<p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签</p>\n</blockquote>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p>\n<p>更换Hexo的markdown渲染引擎，<a href=\"https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus\">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked</a>即可。</p>\n<h3 id=\"安装hexo-renderer-markdown-it-plus插件\"><a href=\"#安装hexo-renderer-markdown-it-plus插件\" class=\"headerlink\" title=\"安装hexo-renderer-markdown-it-plus插件\"></a>安装hexo-renderer-markdown-it-plus插件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save</span><br><span class=\"line\">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件<code>_config.yml</code>中添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown_it_plus:</span></span><br><span class=\"line\">  <span class=\"attr\">highlight:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">langPrefix:</span></span><br><span class=\"line\">  <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">typographer:</span></span><br><span class=\"line\">  <span class=\"attr\">quotes:</span> <span class=\"string\">“”‘’</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">plugin:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">markdown-it-katex</span></span><br><span class=\"line\">        <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">plugin:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">markdown-it-mark</span></span><br><span class=\"line\">        <span class=\"attr\">enable:</span> <span class=\"literal\">false</span>  </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文章启用mathjax\"><a href=\"#文章启用mathjax\" class=\"headerlink\" title=\"文章启用mathjax\"></a>文章启用mathjax</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: Hello World</span><br><span class=\"line\">mathjax: true</span><br></pre></td></tr></table></figure>"},{"title":"在PowerShell中使用title命令","date":"2022-10-30T18:10:22.000Z","typora-root-url":"..","_content":"\n#### 在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\n```powershell\n$host.ui.RawUI.WindowTitle=\"自定义标题\"\n```\n#### 使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\n```powershell\ntest-path $profile\n```\n#### 如果返回值为false则执行如下命令\n```powershell\nNew-Item -path $profile -type file -force\n```\n#### 如果返回值为true则执行如下命令\n\n注：在执行此命令前需要电脑内安装了Visual Studio Code\n\n```powershell\ncode $profile \n```\n#### 运行完之后会打开一个profile文件，在该文件内输入以下代码\n```powershell\nfunction Set-WindowTitle {\n    $host.UI.RawUI.WindowTitle = [string]::Join(\" \", $args)\n}\nSet-Alias -name \"title\" -value Set-WindowTitle\n```\n#### 重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\n```powershell\ntitle A Minecraft Server\n```","source":"_posts/PowerShell/在PowerShell中使用title命令.md","raw":"---\ntitle: 在PowerShell中使用title命令\ndate: 2022-10-31 02:10:22\ntags: PowerShell\ncategories: 网络工程（杂项）\ntypora-root-url: ..\n---\n\n#### 在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\n```powershell\n$host.ui.RawUI.WindowTitle=\"自定义标题\"\n```\n#### 使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\n```powershell\ntest-path $profile\n```\n#### 如果返回值为false则执行如下命令\n```powershell\nNew-Item -path $profile -type file -force\n```\n#### 如果返回值为true则执行如下命令\n\n注：在执行此命令前需要电脑内安装了Visual Studio Code\n\n```powershell\ncode $profile \n```\n#### 运行完之后会打开一个profile文件，在该文件内输入以下代码\n```powershell\nfunction Set-WindowTitle {\n    $host.UI.RawUI.WindowTitle = [string]::Join(\" \", $args)\n}\nSet-Alias -name \"title\" -value Set-WindowTitle\n```\n#### 重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\n```powershell\ntitle A Minecraft Server\n```","slug":"PowerShell/在PowerShell中使用title命令","published":1,"updated":"2023-05-06T02:56:27.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clhbhhj1x0014ncm2eml9dpal","content":"<h4 id=\"在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\"><a href=\"#在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\" class=\"headerlink\" title=\"在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\"></a>在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$host</span>.ui.RawUI.WindowTitle=<span class=\"string\">&quot;自定义标题&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\"><a href=\"#使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\" class=\"headerlink\" title=\"使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\"></a>使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test-path</span> <span class=\"variable\">$profile</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"如果返回值为false则执行如下命令\"><a href=\"#如果返回值为false则执行如下命令\" class=\"headerlink\" title=\"如果返回值为false则执行如下命令\"></a>如果返回值为false则执行如下命令</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">New-Item</span> <span class=\"literal\">-path</span> <span class=\"variable\">$profile</span> <span class=\"literal\">-type</span> file <span class=\"literal\">-force</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"如果返回值为true则执行如下命令\"><a href=\"#如果返回值为true则执行如下命令\" class=\"headerlink\" title=\"如果返回值为true则执行如下命令\"></a>如果返回值为true则执行如下命令</h4><p>注：在执行此命令前需要电脑内安装了Visual Studio Code</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code <span class=\"variable\">$profile</span> </span><br></pre></td></tr></table></figure>\n<h4 id=\"运行完之后会打开一个profile文件，在该文件内输入以下代码\"><a href=\"#运行完之后会打开一个profile文件，在该文件内输入以下代码\" class=\"headerlink\" title=\"运行完之后会打开一个profile文件，在该文件内输入以下代码\"></a>运行完之后会打开一个profile文件，在该文件内输入以下代码</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Set-WindowTitle</span></span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$host</span>.UI.RawUI.WindowTitle = [<span class=\"built_in\">string</span>]::Join(<span class=\"string\">&quot; &quot;</span>, <span class=\"variable\">$args</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Set-Alias</span> <span class=\"literal\">-name</span> <span class=\"string\">&quot;title&quot;</span> <span class=\"literal\">-value</span> <span class=\"built_in\">Set-WindowTitle</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\"><a href=\"#重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\" class=\"headerlink\" title=\"重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\"></a>重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title A Minecraft Server</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h4 id=\"在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\"><a href=\"#在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\" class=\"headerlink\" title=\"在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令\"></a>在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$host</span>.ui.RawUI.WindowTitle=<span class=\"string\">&quot;自定义标题&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\"><a href=\"#使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\" class=\"headerlink\" title=\"使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用\"></a>使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test-path</span> <span class=\"variable\">$profile</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"如果返回值为false则执行如下命令\"><a href=\"#如果返回值为false则执行如下命令\" class=\"headerlink\" title=\"如果返回值为false则执行如下命令\"></a>如果返回值为false则执行如下命令</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">New-Item</span> <span class=\"literal\">-path</span> <span class=\"variable\">$profile</span> <span class=\"literal\">-type</span> file <span class=\"literal\">-force</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"如果返回值为true则执行如下命令\"><a href=\"#如果返回值为true则执行如下命令\" class=\"headerlink\" title=\"如果返回值为true则执行如下命令\"></a>如果返回值为true则执行如下命令</h4><p>注：在执行此命令前需要电脑内安装了Visual Studio Code</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code <span class=\"variable\">$profile</span> </span><br></pre></td></tr></table></figure>\n<h4 id=\"运行完之后会打开一个profile文件，在该文件内输入以下代码\"><a href=\"#运行完之后会打开一个profile文件，在该文件内输入以下代码\" class=\"headerlink\" title=\"运行完之后会打开一个profile文件，在该文件内输入以下代码\"></a>运行完之后会打开一个profile文件，在该文件内输入以下代码</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Set-WindowTitle</span></span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$host</span>.UI.RawUI.WindowTitle = [<span class=\"built_in\">string</span>]::Join(<span class=\"string\">&quot; &quot;</span>, <span class=\"variable\">$args</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Set-Alias</span> <span class=\"literal\">-name</span> <span class=\"string\">&quot;title&quot;</span> <span class=\"literal\">-value</span> <span class=\"built_in\">Set-WindowTitle</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\"><a href=\"#重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\" class=\"headerlink\" title=\"重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了\"></a>重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title A Minecraft Server</span><br></pre></td></tr></table></figure>"},{"title":"数据通信基础","date":"2023-05-06T06:40:23.000Z","typora-root-url":"..","_content":"\n# Ⅰ - 通信指标\n## 1.通信基础概念\n\n- 通信的实质就是实现信息的有效传递，它不仅要将有用的信息进行**无失真、高效率的传输**，而且还要在传输的过程中**减少或消除无用信息和有害信息**。\n\n- **数据和信号：**\n\n  数据是运送**信息的实体**，而信号则是数据的**电器的或电磁的表现**。无论数据或信号，既可以是模拟的也可以是数字的。所谓“模拟的”就是连续变化的，而“数字的”就表示取值仅允许为有限的几个离散数值。\n\n- **信道：**\n\n  信道一般用来表示向某一个方向传送信息的媒体，从通信的双方信息交互的方式看，可以有三种方式： \n  **（1）单工通信：**只有一个方向的通信而没有反方向的交互，仅需要一条信道（如无线电广播、电视广播）。\n  **（2）半双工通信：**通信的双方都可以发送消息，但不能同时发送（如集线器）。\n  **（3）全双工通信：**通信的双方都可以同时发送和接收信息，通常需要两条信道，（如交换机）。\n\n- **码元：**\n\n  数字通信中对数字信号的计量单位采用码元这个概念。一个码元指的是一个固定时常的数字信号波形，该时长称为码元宽度。\n\n- **传输速率：**\n\n  （1）码元传输速率：也叫码元速率、符号速率、波形速率等，他表示**单位时间内数字通信系统所传输的码元个数**（符号个数或脉冲个数），单位是波特（Baud）。\n\n- **抖动：**\n\n  指在噪声因素的影响下，数字信号的有效瞬间相对于应生成理想时间位置的短时偏离，是数字通信系统中数字信号传输的一种**不稳定现象**。\n\n## 2.网络传输指标\n\n- 传输指标：对网络的**效率和性能进行衡量**。\n\n- 带宽：\n\n  指的是在**一段特定的时间内网络所能传送的比特数**，单位是bit/s。\n\n- 时延：\n\n  时延指的是一个报文或者分组从一个网络一端传到另一段所需的时间，一般情况下由三个部分组成。\n\n  **（1）发送时延** = 报文长度/信道带宽\n\n  **（2）传播时延** = 信道长度/信道传播速率\n\n  **（3）处理时延** = 数据在交换节点上为储存转发而进行一些必要的处理所花费的时间，有时可以忽略。\n\n  **（4）总时延 = 发送时延 + 传播时延 + 处理时延**\n\n  **（5）RTT(Round-Trip Time，往返时延)** 也是一个重要的性能指标，它表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时延（参考Ping命令）。\n\n- 时延带宽积：\n\n  时延带宽积 = 传播时延 * 带宽，相当于第一个比特到达接收方之前，发送方最多发送的比特数。\n\n- 误码率/误位率：\n\n  指在一定统计时间内，数字信号在传输过程中发生错误的码元/位数与传输的总码元/总位数之比，一般网络要求误码率低于10^-6。\n  \n  # 3.数据损害\n  \n- 传输损害：常见的损害有衰减、延迟变形、噪声。\n\n- 衰减：\n\n  在任何传输介质上的信号强度**随着距离的变长而衰减**。\n\n- 延迟变形：\n\n  延迟变形是有线传输介质独有的现象，它是由传播速率随着频率而变化所引起的，**延迟变形对数字信号的影响最大**。\n\n- 噪声：\n\n  因传输系统造成的各种失真，以及突然产生了不必要的信号而产生了噪声，噪声可分为以下四种。\n\n  **（1）热噪声：**是导体中电子的热震动引起的，它出现在所有的电子设备和传输介质中。\n\n  **（2）内调制杂音：**是当不同频率的信号同时通过一个传输介质时产生。\n\n  **（3）串扰：** 信号通路之间产生了不必要的耦合，例如双绞线之间因电耦合而产生的串扰，也有可能会在运载多个型号的同轴电缆中产生。\n\n  **（4）脉冲噪声：**因意外产生的电磁干扰，如打雷，**主要影响的是数字信号**。\n# Ⅱ - 数字通信系统\n\n**··· ··· ···**\n","source":"_posts/网络规划设计师/数据通信基础.md","raw":"---\ntitle: 数据通信基础\ndate: 2023-5-6 14:40:23\ntags: 网络规划设计师\ncategories: 网络规划设计师\ntypora-root-url: ..\n---\n\n# Ⅰ - 通信指标\n## 1.通信基础概念\n\n- 通信的实质就是实现信息的有效传递，它不仅要将有用的信息进行**无失真、高效率的传输**，而且还要在传输的过程中**减少或消除无用信息和有害信息**。\n\n- **数据和信号：**\n\n  数据是运送**信息的实体**，而信号则是数据的**电器的或电磁的表现**。无论数据或信号，既可以是模拟的也可以是数字的。所谓“模拟的”就是连续变化的，而“数字的”就表示取值仅允许为有限的几个离散数值。\n\n- **信道：**\n\n  信道一般用来表示向某一个方向传送信息的媒体，从通信的双方信息交互的方式看，可以有三种方式： \n  **（1）单工通信：**只有一个方向的通信而没有反方向的交互，仅需要一条信道（如无线电广播、电视广播）。\n  **（2）半双工通信：**通信的双方都可以发送消息，但不能同时发送（如集线器）。\n  **（3）全双工通信：**通信的双方都可以同时发送和接收信息，通常需要两条信道，（如交换机）。\n\n- **码元：**\n\n  数字通信中对数字信号的计量单位采用码元这个概念。一个码元指的是一个固定时常的数字信号波形，该时长称为码元宽度。\n\n- **传输速率：**\n\n  （1）码元传输速率：也叫码元速率、符号速率、波形速率等，他表示**单位时间内数字通信系统所传输的码元个数**（符号个数或脉冲个数），单位是波特（Baud）。\n\n- **抖动：**\n\n  指在噪声因素的影响下，数字信号的有效瞬间相对于应生成理想时间位置的短时偏离，是数字通信系统中数字信号传输的一种**不稳定现象**。\n\n## 2.网络传输指标\n\n- 传输指标：对网络的**效率和性能进行衡量**。\n\n- 带宽：\n\n  指的是在**一段特定的时间内网络所能传送的比特数**，单位是bit/s。\n\n- 时延：\n\n  时延指的是一个报文或者分组从一个网络一端传到另一段所需的时间，一般情况下由三个部分组成。\n\n  **（1）发送时延** = 报文长度/信道带宽\n\n  **（2）传播时延** = 信道长度/信道传播速率\n\n  **（3）处理时延** = 数据在交换节点上为储存转发而进行一些必要的处理所花费的时间，有时可以忽略。\n\n  **（4）总时延 = 发送时延 + 传播时延 + 处理时延**\n\n  **（5）RTT(Round-Trip Time，往返时延)** 也是一个重要的性能指标，它表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时延（参考Ping命令）。\n\n- 时延带宽积：\n\n  时延带宽积 = 传播时延 * 带宽，相当于第一个比特到达接收方之前，发送方最多发送的比特数。\n\n- 误码率/误位率：\n\n  指在一定统计时间内，数字信号在传输过程中发生错误的码元/位数与传输的总码元/总位数之比，一般网络要求误码率低于10^-6。\n  \n  # 3.数据损害\n  \n- 传输损害：常见的损害有衰减、延迟变形、噪声。\n\n- 衰减：\n\n  在任何传输介质上的信号强度**随着距离的变长而衰减**。\n\n- 延迟变形：\n\n  延迟变形是有线传输介质独有的现象，它是由传播速率随着频率而变化所引起的，**延迟变形对数字信号的影响最大**。\n\n- 噪声：\n\n  因传输系统造成的各种失真，以及突然产生了不必要的信号而产生了噪声，噪声可分为以下四种。\n\n  **（1）热噪声：**是导体中电子的热震动引起的，它出现在所有的电子设备和传输介质中。\n\n  **（2）内调制杂音：**是当不同频率的信号同时通过一个传输介质时产生。\n\n  **（3）串扰：** 信号通路之间产生了不必要的耦合，例如双绞线之间因电耦合而产生的串扰，也有可能会在运载多个型号的同轴电缆中产生。\n\n  **（4）脉冲噪声：**因意外产生的电磁干扰，如打雷，**主要影响的是数字信号**。\n# Ⅱ - 数字通信系统\n\n**··· ··· ···**\n","slug":"网络规划设计师/数据通信基础","published":1,"updated":"2023-05-06T09:44:51.882Z","_id":"clhbstk1r000790m26nrq1642","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Ⅰ-通信指标\"><a href=\"#Ⅰ-通信指标\" class=\"headerlink\" title=\"Ⅰ - 通信指标\"></a>Ⅰ - 通信指标</h1><h2 id=\"1-通信基础概念\"><a href=\"#1-通信基础概念\" class=\"headerlink\" title=\"1.通信基础概念\"></a>1.通信基础概念</h2><ul>\n<li><p>通信的实质就是实现信息的有效传递，它不仅要将有用的信息进行<strong>无失真、高效率的传输</strong>，而且还要在传输的过程中<strong>减少或消除无用信息和有害信息</strong>。</p>\n</li>\n<li><p><strong>数据和信号：</strong></p>\n<p>数据是运送<strong>信息的实体</strong>，而信号则是数据的<strong>电器的或电磁的表现</strong>。无论数据或信号，既可以是模拟的也可以是数字的。所谓“模拟的”就是连续变化的，而“数字的”就表示取值仅允许为有限的几个离散数值。</p>\n</li>\n<li><p><strong>信道：</strong></p>\n<p>信道一般用来表示向某一个方向传送信息的媒体，从通信的双方信息交互的方式看，可以有三种方式：<br><strong>（1）单工通信：</strong>只有一个方向的通信而没有反方向的交互，仅需要一条信道（如无线电广播、电视广播）。<br><strong>（2）半双工通信：</strong>通信的双方都可以发送消息，但不能同时发送（如集线器）。<br><strong>（3）全双工通信：</strong>通信的双方都可以同时发送和接收信息，通常需要两条信道，（如交换机）。</p>\n</li>\n<li><p><strong>码元：</strong></p>\n<p>数字通信中对数字信号的计量单位采用码元这个概念。一个码元指的是一个固定时常的数字信号波形，该时长称为码元宽度。</p>\n</li>\n<li><p><strong>传输速率：</strong></p>\n<p>（1）码元传输速率：也叫码元速率、符号速率、波形速率等，他表示<strong>单位时间内数字通信系统所传输的码元个数</strong>（符号个数或脉冲个数），单位是波特（Baud）。</p>\n</li>\n<li><p><strong>抖动：</strong></p>\n<p>指在噪声因素的影响下，数字信号的有效瞬间相对于应生成理想时间位置的短时偏离，是数字通信系统中数字信号传输的一种<strong>不稳定现象</strong>。</p>\n</li>\n</ul>\n<h2 id=\"2-网络传输指标\"><a href=\"#2-网络传输指标\" class=\"headerlink\" title=\"2.网络传输指标\"></a>2.网络传输指标</h2><ul>\n<li><p>传输指标：对网络的<strong>效率和性能进行衡量</strong>。</p>\n</li>\n<li><p>带宽：</p>\n<p>指的是在<strong>一段特定的时间内网络所能传送的比特数</strong>，单位是bit/s。</p>\n</li>\n<li><p>时延：</p>\n<p>时延指的是一个报文或者分组从一个网络一端传到另一段所需的时间，一般情况下由三个部分组成。</p>\n<p><strong>（1）发送时延</strong> = 报文长度/信道带宽</p>\n<p><strong>（2）传播时延</strong> = 信道长度/信道传播速率</p>\n<p><strong>（3）处理时延</strong> = 数据在交换节点上为储存转发而进行一些必要的处理所花费的时间，有时可以忽略。</p>\n<p><strong>（4）总时延 = 发送时延 + 传播时延 + 处理时延</strong></p>\n<p><strong>（5）RTT(Round-Trip Time，往返时延)</strong> 也是一个重要的性能指标，它表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时延（参考Ping命令）。</p>\n</li>\n<li><p>时延带宽积：</p>\n<p>时延带宽积 = 传播时延 * 带宽，相当于第一个比特到达接收方之前，发送方最多发送的比特数。</p>\n</li>\n<li><p>误码率/误位率：</p>\n<p>指在一定统计时间内，数字信号在传输过程中发生错误的码元/位数与传输的总码元/总位数之比，一般网络要求误码率低于10^-6。</p>\n<h1 id=\"3-数据损害\"><a href=\"#3-数据损害\" class=\"headerlink\" title=\"3.数据损害\"></a>3.数据损害</h1></li>\n<li><p>传输损害：常见的损害有衰减、延迟变形、噪声。</p>\n</li>\n<li><p>衰减：</p>\n<p>在任何传输介质上的信号强度<strong>随着距离的变长而衰减</strong>。</p>\n</li>\n<li><p>延迟变形：</p>\n<p>延迟变形是有线传输介质独有的现象，它是由传播速率随着频率而变化所引起的，<strong>延迟变形对数字信号的影响最大</strong>。</p>\n</li>\n<li><p>噪声：</p>\n<p>因传输系统造成的各种失真，以及突然产生了不必要的信号而产生了噪声，噪声可分为以下四种。</p>\n<p><strong>（1）热噪声：</strong>是导体中电子的热震动引起的，它出现在所有的电子设备和传输介质中。</p>\n<p><strong>（2）内调制杂音：</strong>是当不同频率的信号同时通过一个传输介质时产生。</p>\n<p><strong>（3）串扰：</strong> 信号通路之间产生了不必要的耦合，例如双绞线之间因电耦合而产生的串扰，也有可能会在运载多个型号的同轴电缆中产生。</p>\n<p><strong>（4）脉冲噪声：</strong>因意外产生的电磁干扰，如打雷，<strong>主要影响的是数字信号</strong>。</p>\n<h1 id=\"Ⅱ-数字通信系统\"><a href=\"#Ⅱ-数字通信系统\" class=\"headerlink\" title=\"Ⅱ - 数字通信系统\"></a>Ⅱ - 数字通信系统</h1></li>\n</ul>\n<p><strong>··· ··· ···</strong></p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h1 id=\"Ⅰ-通信指标\"><a href=\"#Ⅰ-通信指标\" class=\"headerlink\" title=\"Ⅰ - 通信指标\"></a>Ⅰ - 通信指标</h1><h2 id=\"1-通信基础概念\"><a href=\"#1-通信基础概念\" class=\"headerlink\" title=\"1.通信基础概念\"></a>1.通信基础概念</h2><ul>\n<li><p>通信的实质就是实现信息的有效传递，它不仅要将有用的信息进行<strong>无失真、高效率的传输</strong>，而且还要在传输的过程中<strong>减少或消除无用信息和有害信息</strong>。</p>\n</li>\n<li><p><strong>数据和信号：</strong></p>\n<p>数据是运送<strong>信息的实体</strong>，而信号则是数据的<strong>电器的或电磁的表现</strong>。无论数据或信号，既可以是模拟的也可以是数字的。所谓“模拟的”就是连续变化的，而“数字的”就表示取值仅允许为有限的几个离散数值。</p>\n</li>\n<li><p><strong>信道：</strong></p>\n<p>信道一般用来表示向某一个方向传送信息的媒体，从通信的双方信息交互的方式看，可以有三种方式：<br><strong>（1）单工通信：</strong>只有一个方向的通信而没有反方向的交互，仅需要一条信道（如无线电广播、电视广播）。<br><strong>（2）半双工通信：</strong>通信的双方都可以发送消息，但不能同时发送（如集线器）。<br><strong>（3）全双工通信：</strong>通信的双方都可以同时发送和接收信息，通常需要两条信道，（如交换机）。</p>\n</li>\n<li><p><strong>码元：</strong></p>\n<p>数字通信中对数字信号的计量单位采用码元这个概念。一个码元指的是一个固定时常的数字信号波形，该时长称为码元宽度。</p>\n</li>\n<li><p><strong>传输速率：</strong></p>\n<p>（1）码元传输速率：也叫码元速率、符号速率、波形速率等，他表示<strong>单位时间内数字通信系统所传输的码元个数</strong>（符号个数或脉冲个数），单位是波特（Baud）。</p>\n</li>\n<li><p><strong>抖动：</strong></p>\n<p>指在噪声因素的影响下，数字信号的有效瞬间相对于应生成理想时间位置的短时偏离，是数字通信系统中数字信号传输的一种<strong>不稳定现象</strong>。</p>\n</li>\n</ul>\n<h2 id=\"2-网络传输指标\"><a href=\"#2-网络传输指标\" class=\"headerlink\" title=\"2.网络传输指标\"></a>2.网络传输指标</h2><ul>\n<li><p>传输指标：对网络的<strong>效率和性能进行衡量</strong>。</p>\n</li>\n<li><p>带宽：</p>\n<p>指的是在<strong>一段特定的时间内网络所能传送的比特数</strong>，单位是bit/s。</p>\n</li>\n<li><p>时延：</p>\n<p>时延指的是一个报文或者分组从一个网络一端传到另一段所需的时间，一般情况下由三个部分组成。</p>\n<p><strong>（1）发送时延</strong> = 报文长度/信道带宽</p>\n<p><strong>（2）传播时延</strong> = 信道长度/信道传播速率</p>\n<p><strong>（3）处理时延</strong> = 数据在交换节点上为储存转发而进行一些必要的处理所花费的时间，有时可以忽略。</p>\n<p><strong>（4）总时延 = 发送时延 + 传播时延 + 处理时延</strong></p>\n<p><strong>（5）RTT(Round-Trip Time，往返时延)</strong> 也是一个重要的性能指标，它表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时延（参考Ping命令）。</p>\n</li>\n<li><p>时延带宽积：</p>\n<p>时延带宽积 = 传播时延 * 带宽，相当于第一个比特到达接收方之前，发送方最多发送的比特数。</p>\n</li>\n<li><p>误码率/误位率：</p>\n<p>指在一定统计时间内，数字信号在传输过程中发生错误的码元/位数与传输的总码元/总位数之比，一般网络要求误码率低于10^-6。</p>\n<h1 id=\"3-数据损害\"><a href=\"#3-数据损害\" class=\"headerlink\" title=\"3.数据损害\"></a>3.数据损害</h1></li>\n<li><p>传输损害：常见的损害有衰减、延迟变形、噪声。</p>\n</li>\n<li><p>衰减：</p>\n<p>在任何传输介质上的信号强度<strong>随着距离的变长而衰减</strong>。</p>\n</li>\n<li><p>延迟变形：</p>\n<p>延迟变形是有线传输介质独有的现象，它是由传播速率随着频率而变化所引起的，<strong>延迟变形对数字信号的影响最大</strong>。</p>\n</li>\n<li><p>噪声：</p>\n<p>因传输系统造成的各种失真，以及突然产生了不必要的信号而产生了噪声，噪声可分为以下四种。</p>\n<p><strong>（1）热噪声：</strong>是导体中电子的热震动引起的，它出现在所有的电子设备和传输介质中。</p>\n<p><strong>（2）内调制杂音：</strong>是当不同频率的信号同时通过一个传输介质时产生。</p>\n<p><strong>（3）串扰：</strong> 信号通路之间产生了不必要的耦合，例如双绞线之间因电耦合而产生的串扰，也有可能会在运载多个型号的同轴电缆中产生。</p>\n<p><strong>（4）脉冲噪声：</strong>因意外产生的电磁干扰，如打雷，<strong>主要影响的是数字信号</strong>。</p>\n<h1 id=\"Ⅱ-数字通信系统\"><a href=\"#Ⅱ-数字通信系统\" class=\"headerlink\" title=\"Ⅱ - 数字通信系统\"></a>Ⅱ - 数字通信系统</h1></li>\n</ul>\n<p><strong>··· ··· ···</strong></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clhbhhj1c0001ncm29jcy1xno","category_id":"clhbhhj1h0004ncm2b4y776hw","_id":"clhbhhj1q000hncm2h1g8e6u7"},{"post_id":"clhbhhj1f0003ncm2fii08qzz","category_id":"clhbhhj1m000cncm2e4dd6h5a","_id":"clhbhhj1s000mncm25aka0z5p"},{"post_id":"clhbhhj1j0007ncm2099h0gus","category_id":"clhbhhj1m000cncm2e4dd6h5a","_id":"clhbhhj1t000qncm2bgdee2h5"},{"post_id":"clhbhhj1k0009ncm26n459okt","category_id":"clhbhhj1m000cncm2e4dd6h5a","_id":"clhbhhj1v000uncm28a8m6cct"},{"post_id":"clhbhhj1m000bncm29jqs8p3q","category_id":"clhbhhj1m000cncm2e4dd6h5a","_id":"clhbhhj1v000xncm28t6obp4j"},{"post_id":"clhbhhj1n000fncm2fdahbmrc","category_id":"clhbhhj1u000tncm267vo0mxs","_id":"clhbhhj1w0011ncm24xgr6567"},{"post_id":"clhbhhj1o000gncm204cd3lh3","category_id":"clhbhhj1u000tncm267vo0mxs","_id":"clhbhhj1w0013ncm2brun68w0"},{"post_id":"clhbhhj1x0014ncm2eml9dpal","category_id":"clhbhhj1y0015ncm2g5u2bdca","_id":"clhbhhj1z0018ncm2bbajb3e9"},{"post_id":"clhbstk1r000790m26nrq1642","category_id":"clhbm9a2u000390m2cxj7emnb","_id":"clhbstk1t000990m28pdu51b5"}],"PostTag":[{"post_id":"clhbhhj1c0001ncm29jcy1xno","tag_id":"clhbhhj1i0005ncm261pl4kuv","_id":"clhbhhj1n000encm2fuqccw5d"},{"post_id":"clhbhhj1f0003ncm2fii08qzz","tag_id":"clhbhhj1n000dncm25eop55sl","_id":"clhbhhj1s000kncm2etgvf15v"},{"post_id":"clhbhhj1j0007ncm2099h0gus","tag_id":"clhbhhj1n000dncm25eop55sl","_id":"clhbhhj1t000oncm2h9qv983x"},{"post_id":"clhbhhj1k0009ncm26n459okt","tag_id":"clhbhhj1n000dncm25eop55sl","_id":"clhbhhj1u000sncm29tw66s9u"},{"post_id":"clhbhhj1m000bncm29jqs8p3q","tag_id":"clhbhhj1n000dncm25eop55sl","_id":"clhbhhj1v000wncm205ned532"},{"post_id":"clhbhhj1n000fncm2fdahbmrc","tag_id":"clhbhhj1v000vncm21yp105y6","_id":"clhbhhj1w0010ncm28u8o5bbl"},{"post_id":"clhbhhj1o000gncm204cd3lh3","tag_id":"clhbhhj1v000vncm21yp105y6","_id":"clhbhhj1w0012ncm23vamcjwh"},{"post_id":"clhbhhj1x0014ncm2eml9dpal","tag_id":"clhbhhj1y0016ncm2512s100f","_id":"clhbhhj1z0017ncm233k62rvj"},{"post_id":"clhbstk1r000790m26nrq1642","tag_id":"clhbstrwr000a90m240f48p7h","_id":"clhbstrws000b90m27gj34g08"}],"Tag":[{"name":"Git","_id":"clhbhhj1i0005ncm261pl4kuv"},{"name":"HCIP-datacom","_id":"clhbhhj1n000dncm25eop55sl"},{"name":"Hexo","_id":"clhbhhj1v000vncm21yp105y6"},{"name":"PowerShell","_id":"clhbhhj1y0016ncm2512s100f"},{"name":"网规","_id":"clhbm9a2v000490m2hosj0ci1"},{"name":"网络规划设计师","_id":"clhbstrwr000a90m240f48p7h"}]}}