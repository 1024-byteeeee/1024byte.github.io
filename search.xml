<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>8.网络管理与QoS</title>
      <link href="/posts/17d3165a.html"/>
      <url>/posts/17d3165a.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-网络管理基础"><a href="#Ⅰ-网络管理基础" class="headerlink" title="Ⅰ - 网络管理基础"></a>Ⅰ - 网络管理基础</h1><h2 id="1-网络管理功能"><a href="#1-网络管理功能" class="headerlink" title="1.网络管理功能"></a>1.网络管理功能</h2><ul><li>网络管理五大功能域：故障管理、配置管理、计费管理、性能管理和安全管理。</li><li>故障管理目的：尽快发现故障，找出故障原因，以便采取补救措施。</li><li>网管系统中代理与监视器的两种通信方式：轮询、事件报告。</li></ul><h2 id="2-网络管理系统组成"><a href="#2-网络管理系统组成" class="headerlink" title="2.网络管理系统组成"></a>2.网络管理系统组成</h2><ul><li>网络管理站：简单理解就是安装网管软件的服务器或者PC。</li><li>管理代理（Agent）：位于被管理设备的内部，把网管站的要求转换为本地特有命令，完成网管站的指示，agent也可以把自身系统中的日志上报网管站。</li><li>网络管理协议：用于网络管理站和管理代理之间传递信息，常见的有SNMP、netconf等。</li><li>管理信息库：（Management Information Base，MIB）是一个信息储存库，结构化定义被管对象的具体细节。</li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E4%B8%8EQoS/%E7%AE%A1%E7%90%86%E7%AB%99-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%9E%8B.png" alt="管理站-代理模型"></p><h2 id="3-管理数据库MIB"><a href="#3-管理数据库MIB" class="headerlink" title="3.管理数据库MIB"></a>3.管理数据库MIB</h2><ul><li>被管理<strong>对象标识符OID</strong>。</li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E4%B8%8EQoS/%E6%B3%A8%E5%86%8C%E5%B1%82%E6%AC%A1.png" alt="注册层次"></p><h1 id="Ⅱ-网管协议SNMP"><a href="#Ⅱ-网管协议SNMP" class="headerlink" title="Ⅱ - 网管协议SNMP"></a>Ⅱ - 网管协议SNMP</h1><h2 id="1-网络管理协议五大标准"><a href="#1-网络管理协议五大标准" class="headerlink" title="1.网络管理协议五大标准"></a>1.网络管理协议五大标准</h2><ul><li>ISO制定：<strong>CMIS&#x2F;CMIP</strong>公共管理信息服务规范。</li><li>基于TPC&#x2F;IP：简单网络管理协议<strong>SNMPv1、SNMPv2、SNMPv3</strong>。</li><li>基于局域网：远程监控网络RMON（RMON-1、RMON-2）。</li><li>IEEE制定：基于物理层和数据链路层<strong>CMOL</strong>。</li><li>ITU-T：电信网络管理标准<strong>TMN</strong>。</li></ul><h2 id="2-SNMPv1"><a href="#2-SNMPv1" class="headerlink" title="2.SNMPv1"></a>2.SNMPv1</h2><ul><li>SNMP为<strong>应用层</strong>协议，运行在<strong>UDP</strong>上，client端口161，server端口162。</li><li><strong>不可靠，但效率高</strong>，不会因为网络管理增加太多网络负载。</li><li>每个代理进程管理若干被管理对象，并且与某些管理站建立<strong>团体（community）</strong>关系。</li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E4%B8%8EQoS/SNMPv1%E7%9A%84%E5%9B%A2%E4%BD%93%E5%85%B3%E7%B3%BB.png" alt="SNMPv1的团体关系"></p><h2 id="3-SNMP协议的操作"><a href="#3-SNMP协议的操作" class="headerlink" title="3.SNMP协议的操作"></a>3.SNMP协议的操作</h2><table><thead><tr><th align="center">操作编号</th><th align="center">分类</th><th align="center">名称</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">网管找客户端</td><td align="center">get-request</td><td align="center">查询一个或多个变量的值</td></tr><tr><td align="center">1</td><td align="center">网管找客户端</td><td align="center">get-next-request</td><td align="center">再MIB树上检索下一个变量</td></tr><tr><td align="center">2</td><td align="center">网管找客户端</td><td align="center">set-request</td><td align="center">一个或多个变量的值进行设置</td></tr><tr><td align="center">3</td><td align="center">客户端反馈</td><td align="center">get-response</td><td align="center">对get&#x2F;set报文做出响应</td></tr><tr><td align="center">4</td><td align="center">客户端反馈</td><td align="center">trap</td><td align="center">向管理进程报告代理发生的事件</td></tr></tbody></table><ul><li>前三个可以简写为get、get-next-set。</li><li>客户端使用<strong>161端口</strong>来接收get&#x2F;set，服务器使用<strong>162端口</strong>来接收trap。</li></ul><h2 id="4-SNMPv1的机制与问题"><a href="#4-SNMPv1的机制与问题" class="headerlink" title="4.SNMPv1的机制与问题"></a>4.SNMPv1的机制与问题</h2><ul><li>SNMP网络管理中，管理站和代理站之间可以是<strong>一对多</strong>关系，也可以是<strong>多对一</strong>关系。</li><li>RFC1157规定SNMP基本认证和控制机制，通过<strong>团体名验证</strong>实现。</li><li>团体名明文传输，不安全。</li></ul><h2 id="5-SNMPv2"><a href="#5-SNMPv2" class="headerlink" title="5.SNMPv2"></a>5.SNMPv2</h2><ul><li><p>SNMPv2定义了GetBulk和inform两个新协议操作。</p><ul><li><p>GetBulk：</p><p>快速获取大块数据。</p></li><li><p>inform：</p><p>允许一个NMS向另一个NMS发送Trap信息&#x2F;接收响应消息。</p></li></ul></li></ul><h2 id="6-SNMPv3"><a href="#6-SNMPv3" class="headerlink" title="6.SNMPv3"></a>6.SNMPv3</h2><ul><li>SNMPv3重新定义了<strong>网络管理框架和安全机制</strong>。</li><li>重新定义网络管理框架：将前两版中的管理站和代理统一叫做SNMP实体（entity）。</li><li>安全机制：认证和加密传输。<ul><li>时间序列模块：提供重放攻击防护。</li><li>认证模块：完整性和数据源认证，使用SHA或MD5。</li><li>加密模块：防止内容泄露，使用DES算法。</li></ul></li><li>SNMPv3防护拒绝服务和通信分析。</li></ul><h1 id="Ⅲ-网络管理命令"><a href="#Ⅲ-网络管理命令" class="headerlink" title="Ⅲ - 网络管理命令"></a>Ⅲ - 网络管理命令</h1><h2 id="1-网络诊断命令ipconfig"><a href="#1-网络诊断命令ipconfig" class="headerlink" title="1.网络诊断命令ipconfig"></a>1.网络诊断命令ipconfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /all<span class="comment">//显示IP、掩码、网关/MAC地址，DHCP等详细信息</span></span><br><span class="line">ipconfig /renew<span class="comment">//更新DHCP配置，重新获取IP地址</span></span><br><span class="line">ipconfig /release<span class="comment">//释放DHCP获得的IP地址</span></span><br><span class="line">ipconfig /flushdns<span class="comment">//清除DNS缓存信息</span></span><br><span class="line">ipconfig /displaydns<span class="comment">//显示DNS缓存信息 </span></span><br></pre></td></tr></table></figure><h2 id="2-故障诊断-ping-amp-traceroute"><a href="#2-故障诊断-ping-amp-traceroute" class="headerlink" title="2.故障诊断-ping&amp;traceroute"></a>2.故障诊断-ping&amp;traceroute</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ping -t<span class="comment">//一直ping，直到按下ctrl+c中断</span></span><br><span class="line">ping -a<span class="comment">//将IP解析为主机名</span></span><br><span class="line">ping -n Conunt<span class="comment">//设置ping包的个数</span></span><br><span class="line">tracert<span class="comment">//跟踪网络传输路径（原理：递增TTL字段的ICMP回送错误报文）</span></span><br><span class="line">pathping<span class="comment">//结合了ping和tracert功能，不显示显示通信线路上每个子网的延时和丢包率。</span></span><br></pre></td></tr></table></figure><h2 id="3-ARP"><a href="#3-ARP" class="headerlink" title="3.ARP"></a>3.ARP</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arp -a<span class="comment">//显示当前ARP缓存表</span></span><br><span class="line">arp -d<span class="comment">//删除某条ARP缓存</span></span><br><span class="line">arp -s<span class="comment">//静态绑定ARP</span></span><br></pre></td></tr></table></figure><h2 id="4-netstat"><a href="#4-netstat" class="headerlink" title="4.netstat"></a>4.netstat</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat<span class="comment">//显示TCP连接，侦听的端口及统计信息</span></span><br><span class="line">netstat -n<span class="comment">//显示活动的TCP连接</span></span><br><span class="line">netstat -r<span class="comment">//显示IP路由表，与route print一样</span></span><br></pre></td></tr></table></figure><h2 id="5-route和nslookup"><a href="#5-route和nslookup" class="headerlink" title="5.route和nslookup"></a>5.route和nslookup</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">route print<span class="comment">//显示路由表</span></span><br><span class="line">route add<span class="comment">//添加静态路由（重启后丢失）</span></span><br><span class="line">route add -p<span class="comment">//与add联合使用（重启后还在）</span></span><br><span class="line">nslookup<span class="comment">//显示DNS查询信息，诊断，排查故障</span></span><br></pre></td></tr></table></figure><h1 id="Ⅳ-QoS服务质量"><a href="#Ⅳ-QoS服务质量" class="headerlink" title="Ⅳ - QoS服务质量"></a>Ⅳ - QoS服务质量</h1><h2 id="1-QoS服务模型"><a href="#1-QoS服务模型" class="headerlink" title="1.QoS服务模型"></a>1.QoS服务模型</h2><ul><li><p>QoS（服务质量）是为指定的网络通信提供更好的服务能力, 是用来解决网络延迟和阻塞等问题的一种技术。通常QoS提供以下三种服务模型：</p><ul><li><p>Best-Effort service（尽力而为服务模型）：</p><p>Best-Effort（尽力而为服务模型）是一个单一的服务模型，也是最简单的服务模型。对Best-Effort服务模型，网络尽最大的可能来发送报文。但对延时、可靠性等性能丌提供任何保证。Best-Effort服务模型是网络的缺省服务模型，通过FIFO（first in first out 先入先出）队列来实现。它适用于绝大多数网络应用，如FTP、E-Mail等。</p></li><li><p>Integrated service（综合服务模型，Int-Serv）：</p><p>Int-Serv综合服务模型，它可以满足多种QoS需求。该模型使用资源预留协议（RSVP）， <strong>RSVP运行在从源端到目的端的每个设备上</strong>，可以监视每个流，以防止其消耗资源过多。这种体系能够明确区分并保证每一个业务流的服务质量，为网络提供最细粒度化的服务质量区分。但是，Inter-Serv模型对设备的要求高，当网络中的数据流数量很大时，设备的存储和处理能力会遇到很大的压力。Inter-Serv模型可扩展性差，难以在Internet核心网络实施。</p></li><li><p>Differentiated service（区分服务模型，Diff-Serv）：</p><p>Diff-Serv是一个多服务模型，它可以满足不同的QoS需求。与Int-Serv不同，它<strong>不需要通知网络为每个业务预留资源</strong>。区分服务实现简单，扩展性较好。DiffServ模型的基本思想是根据预先确定的规则对数据流进行分类，给不同类型流量确定不同优先级和操作。</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.动态路由协议</title>
      <link href="/posts/18116d90.html"/>
      <url>/posts/18116d90.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-RIP"><a href="#Ⅰ-RIP" class="headerlink" title="Ⅰ - RIP"></a>Ⅰ - RIP</h1><h2 id="1-RIP协议"><a href="#1-RIP协议" class="headerlink" title="1.RIP协议"></a>1.RIP协议</h2><ul><li>RIP(Routing Information Protocol,路由信息协议）：距离矢量路由协议</li><li>计算跳数：最大15跳，16跳不可达，一般用于小型网络。</li><li>30s周期性更新路由表、180s无更新表示不存在、240s删除路由表。</li><li>支持等价负载均衡和链路冗余，使用UDP的520端口。</li></ul><h2 id="2-RIPv1与RIPv2对比"><a href="#2-RIPv1与RIPv2对比" class="headerlink" title="2.RIPv1与RIPv2对比"></a>2.RIPv1与RIPv2对比</h2><table><thead><tr><th align="center">RIPv1</th><th align="center">RIPv2</th></tr></thead><tbody><tr><td align="center">有类，不携带子网掩码</td><td align="center">无类，携带子网掩码</td></tr><tr><td align="center">广播更新</td><td align="center">组播更新（224.0.0.9）</td></tr><tr><td align="center">周期性更新（30s）</td><td align="center">触发更新</td></tr><tr><td align="center">不支持VLSM、CIDR</td><td align="center">支持VLSM、DIDR</td></tr><tr><td align="center">不提供认证</td><td align="center">提供明文和MD5认证</td></tr></tbody></table><h2 id="3-距离矢量路由协议"><a href="#3-距离矢量路由协议" class="headerlink" title="3.距离矢量路由协议"></a>3.距离矢量路由协议</h2><ul><li>使用距离矢量路由协议的路由器并<strong>不了解网络的拓扑</strong>，该路由器只知道：<ul><li>自身与目的网络之间的距离。</li><li>应该往哪个方向或哪个接口转发数据包。</li></ul></li></ul><h2 id="4-距离矢量路由选择协议的特点"><a href="#4-距离矢量路由选择协议的特点" class="headerlink" title="4.距离矢量路由选择协议的特点"></a>4.距离矢量路由选择协议的特点</h2><ul><li>周期性地<strong>（广播）整张路由表</strong>。</li></ul><h2 id="5-RIP路由的度量值"><a href="#5-RIP路由的度量值" class="headerlink" title="5.RIP路由的度量值"></a>5.RIP路由的度量值</h2><ul><li>RIP以<strong>跳数</strong>作为度量值，虽然简单，但事实上不科学，例如现在有两条路可选，它会选择经过路由器少的那条路，而不是带宽更大的那条路。</li></ul><h2 id="6-路由优先级"><a href="#6-路由优先级" class="headerlink" title="6.路由优先级"></a>6.路由优先级</h2><table><thead><tr><th align="center">路由协议或种类</th><th align="center">相应路由的优先级</th></tr></thead><tbody><tr><td align="center">DIRECT</td><td align="center">0</td></tr><tr><td align="center">OSPF</td><td align="center">10</td></tr><tr><td align="center">IS-IS</td><td align="center">15</td></tr><tr><td align="center">STATIC</td><td align="center">60</td></tr><tr><td align="center">RIP</td><td align="center">100</td></tr><tr><td align="center">OSPF AS E</td><td align="center">150</td></tr><tr><td align="center">OSPF NSSA</td><td align="center">150</td></tr><tr><td align="center">IBGP</td><td align="center">255</td></tr><tr><td align="center">EBGP</td><td align="center">255</td></tr></tbody></table><h2 id="7-RIP防环机制"><a href="#7-RIP防环机制" class="headerlink" title="7.RIP防环机制"></a>7.RIP防环机制</h2><ul><li><p>最大跳数：</p><p>当一个路由条目发送出去跳数自动加1，最大为16跳，16跳时不可达。</p></li><li><p>水平分割：</p><p>一条路由信息不会发送给信息的来源。</p></li><li><p>反向毒化：</p><p>把邻居学习到的路由信息设置为16跳，再发送给那个邻居。</p></li><li><p>抑制定时器和触发更新也可以防止环路。</p></li></ul><h2 id="8-RIP协议总结"><a href="#8-RIP协议总结" class="headerlink" title="8.RIP协议总结"></a>8.RIP协议总结</h2><ul><li>RIP（Routing Information Protocols，路由信息协议）。</li><li>应用较早、使用较为普遍的<strong>内部网关协议</strong>。</li><li>适用于小型网络，是典型的距离矢量路由协议。</li><li>使用UDP 520端口。</li></ul><h1 id="Ⅱ-OSPF"><a href="#Ⅱ-OSPF" class="headerlink" title="Ⅱ - OSPF"></a>Ⅱ - OSPF</h1><h2 id="1-OSPF简介"><a href="#1-OSPF简介" class="headerlink" title="1.OSPF简介"></a>1.OSPF简介</h2><ul><li>Open Shortest Path First，开放式最短路径优先协议。</li><li>OSPF是一种链路状态路由协议。</li><li>Open意味着公有，任何设备厂商都能够支持OSPF，是目前业内使用最广泛的IGP。</li><li>路由器之间<strong>交互的是链路状态信息</strong>，而不是直接交换路由。</li><li>每台OSPF路由器都知晓网络拓扑结构，采用<strong>SPF算法</strong>计算到达目的地的最短路径。</li><li>支持VLSM，支持手工路由汇总。</li></ul><h2 id="2-OSPF基本特点"><a href="#2-OSPF基本特点" class="headerlink" title="2.OSPF基本特点"></a>2.OSPF基本特点</h2><ul><li><p>适应范围广：</p><p>支持各种规模的网络。</p></li><li><p>快速收敛：</p><p>在网络的拓扑结构发生变化后立即发送更新报文，使这一变化在自治系统中同步。</p></li><li><p>无自环：</p><p>使用SPF最短路径树算法进行路由计算，不会产生环路。</p></li><li><p>区域划分：</p><p>允许网络被划分成区域来管理，链路状态数据库仅需和区域内其他路由器保持一致。减小对路由器内存和CPU的消耗。同时区域间传送的路由信息减小，降低网络带宽占用。</p></li></ul><h2 id="3-Router-ID"><a href="#3-Router-ID" class="headerlink" title="3.Router ID"></a>3.Router ID</h2><ul><li><p>Router Identifier，路由器标示符，用于在一个OSPF域中唯一地标识一台路由器，每台运行OSPF的路由器具备Router-ID。</p></li><li><p>相同OSPF区域内，禁止出现两台路由器的Router ID相同。</p></li><li><p>OSPF Router-ID可以通过手工配置的方式，或使用自动获取的方式。自动选取的机制是：若路由器存在loopback接口，则选最大的loopback接口IP地址，若无则选活跃的物理接口中IP地址最大的作RouterID（实际项目手工配置）。</p></li><li><p>Router-ID值遵循稳定第一的原则，不会抢占。如果需要更新RouterID：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">undo ip address//重配进程</span><br><span class="line">reset ospf process//重启进程</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-OSPF-Cost"><a href="#4-OSPF-Cost" class="headerlink" title="4.OSPF Cost"></a>4.OSPF Cost</h2><ul><li>OSPF使用Cost“开销”作为路由度量值。</li><li>OSPF接口cost&#x3D;100M&#x2F;接口带宽，其中100M为OSPF参考带宽，可以被修改。</li><li>每一个激活OSPF的接口都有一个cost值。</li><li>一条OSPF路由的cost值由该路由从起源一路到达本地的所有<strong>入接口cost值的总和</strong>。</li></ul><h2 id="5-OSPF区域"><a href="#5-OSPF区域" class="headerlink" title="5.OSPF区域"></a>5.OSPF区域</h2><ul><li><p>所有非骨干区域必须与骨干区域直连。</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/OSPF%E5%8C%BA%E5%9F%9F.png" alt="OSPF区域"></p></li></ul><h2 id="6-OSPF路由器角色"><a href="#6-OSPF路由器角色" class="headerlink" title="6.OSPF路由器角色"></a>6.OSPF路由器角色</h2><ul><li><p>区域内路由器（IR，Internal Router）：</p><p>在区域内部的路由器。</p></li><li><p>区域边界路由器（ABR，Area Border Router）：</p><p>在区域与区域之间的路由器。</p></li><li><p>骨干路由器（BR，Backbone Router）：</p><p>位于area 0内的路由器。</p></li><li><p>AS边界路由器（AS Boundary Router）：</p><p>位于AS边界（与其他路由协议相邻接位置）的路由器。</p></li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE/OSPF%E8%B7%AF%E7%94%B1%E5%99%A8%E8%A7%92%E8%89%B2.png" alt="OSPF路由器角色"></p><h2 id="7-OSPF总结"><a href="#7-OSPF总结" class="headerlink" title="7.OSPF总结"></a>7.OSPF总结</h2><ul><li>OSPF(Open Shortest Path First，开放式最短路径优先协议）内部网关协议，链路状态路由协议，通过连通性、距离、时延、带宽等状态计算最佳路径，采用Dijkstra算法（也叫SPF算法）。</li><li>触发式更新、分层路由，支持大型网络。</li><li>Area 0.0.0.0或者Area 0来表示，不是区域1。</li><li>点对点网络上每10秒发送一次hello，在NBMA网络每30秒发送一次，Deadtime为hello时间4倍。</li><li>OSPF系统内几个特殊组播地址：<ul><li>224.0.0.1–在本地子网的所有主机。</li><li>224.0.0.2–在本地子网的所有路由器。</li><li>224.0.0.5–运行OSPF协议的路由器。</li><li>224.0.0.6–OSPF指定&#x2F;备用指定路由器DR&#x2F;BDR。</li><li>目标地址224.0.0.5指所有路由器，用于发现建立邻居、还用于选出区域内的指定路由器DR和备份指定路由器BDR（DR&#x2F;BDR组播地址是224.0.0.6）。</li></ul></li></ul><h1 id="Ⅲ-BGP"><a href="#Ⅲ-BGP" class="headerlink" title="Ⅲ - BGP"></a>Ⅲ - BGP</h1><h2 id="1-BGP基础"><a href="#1-BGP基础" class="headerlink" title="1.BGP基础"></a>1.BGP基础</h2><ul><li>BGP（Border Gateway Protocol，边界网关协议）外部网关协议，用于不同自治系统AS之间，寻找最佳路由。</li><li>通过TCP 179端口建立连接，支持VLSM和CIDR，是一种路径矢量协议，目前最新版本是BGP4，BGP4+支持IPv6。</li><li>Open建立邻居关系，Keepalive周期性探测邻居存活，每一个自治系统要选择至少一个路由器作为该自治系统的“BGP发言人”，支持增量更新，支持认证。可靠传输，防止环路。自治通信，策略选路。支持无类、支持聚合。</li></ul><h2 id="2-BGP四个报文"><a href="#2-BGP四个报文" class="headerlink" title="2.BGP四个报文"></a>2.BGP四个报文</h2><table><thead><tr><th align="center">报文类型</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">打开（Open）</td><td align="center">建立邻居关系</td></tr><tr><td align="center">更新（Update）</td><td align="center">发送新的路由信息</td></tr><tr><td align="center">保持活动状态（Keep alive）</td><td align="center">周期性确认邻居关系</td></tr><tr><td align="center">通告（Notification）</td><td align="center">报告检测到的错误</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作银河麒麟V10启动盘</title>
      <link href="/posts/96adbbf.html"/>
      <url>/posts/96adbbf.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-注意事项"><a href="#1-注意事项" class="headerlink" title="1.注意事项"></a>1.注意事项</h2><ul><li><p>银河麒麟v10系统支持目前所有主流CPU架构，获取镜像的时候请一定要注意镜像版本与支持的CPU匹配情况，以免导致制作完成启动盘而无法正常安装的问题。</p></li><li><p>X86_64版镜像支持常见的intel、AMD、国产兆芯、国产海光等64位桌面及服务器处理器。</p></li><li><p>MIPS64e版镜像支持中科龙芯Longson3A3000、3A4000桌面处理器以及龙芯Longson3B3000、3B4000 服务器处理器。</p></li><li><p>Arm64版镜像支持华为鲲鹏920s、飞腾 2000&#x2F;4的桌面处理器，以及华为鲲鹏916、920、 飞腾2000&#x2F;64等服务器处理器。</p></li></ul><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2.准备工作"></a>2.准备工作</h2><ul><li>准备一个大小 &gt;&#x3D; 8G 的U盘。</li><li>下载<a href="http://www.dnxtc.net/software/xtgj/2017-11-13/7032.html">UltraISO</a>软碟通。</li><li>下载与CPU相匹配的银河麒麟操作系统镜像，下载地址：<a href="https://www.kylinos.cn/support/trial.html?pid=2">【单击跳转】</a></li></ul><h2 id="3-制作启动U盘"><a href="#3-制作启动U盘" class="headerlink" title="3.制作启动U盘"></a>3.制作启动U盘</h2><ul><li><p>插入U盘打开UltraISO（如果提示需要注册，输入注册码 -&gt; 注册名：王涛 -&gt; 注册码：7C81-1689-4046-626F）。</p></li><li><p>按 <code>ctrl + O</code> 选择已经下载好的系统镜像。</p><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E9%80%89%E6%8B%A9%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F%EF%BC%881%EF%BC%89.png" alt="选择系统镜像（1）"></p><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E9%80%89%E6%8B%A9%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F%EF%BC%882%EF%BC%89.png" alt="选择系统镜像（2）"></p></li><li><p>点击启动，再点击写入硬盘映像。</p></li></ul><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E5%87%86%E5%A4%87%E5%86%99%E5%85%A5%E9%95%9C%E5%83%8F.png" alt="准备写入镜像"></p><ul><li>选择自己的U盘，然后点击写入。</li></ul><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E5%86%99%E5%85%A5%E9%95%9C%E5%83%8F.png" alt="写入镜像"></p><ul><li><p>写入开始前确认U盘内无重要文件，然后点击“是”。</p><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E8%AD%A6%E5%91%8A%EF%BC%81%E6%B3%A8%E6%84%8F%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%EF%BC%81.png" alt="警告！注意备份文件！"></p></li><li><p>等待写入完成。</p><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E7%AD%89%E5%BE%85%E5%86%99%E5%85%A5%E5%AE%8C%E6%88%90%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7.png" alt="等待写入完成······"></p></li><li><p>刻录成功。</p><p><img src="/../images/%E5%88%B6%E4%BD%9C%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E5%90%AF%E5%8A%A8U%E7%9B%98/%E5%88%BB%E5%BD%95%E6%88%90%E5%8A%9F.png" alt="刻录成功"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 银河麒麟V10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银河麒麟V10修改密码</title>
      <link href="/posts/7fcc22e9.html"/>
      <url>/posts/7fcc22e9.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-进入高级选项"><a href="#1-进入高级选项" class="headerlink" title="1.进入高级选项"></a>1.进入高级选项</h2><ul><li><p>开机时按 <code>↓</code> 选择Advanced options for Kylin V10（银河麒麟V10高级选项），然后回车进入。</p><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E8%BF%9B%E5%85%A5%E9%AB%98%E7%BA%A7%E6%A8%A1%E5%BC%8F.png" alt="进入高级模式"></p></li></ul><h2 id="2-进入恢复模式编辑引导"><a href="#2-进入恢复模式编辑引导" class="headerlink" title="2.进入恢复模式编辑引导"></a>2.进入恢复模式编辑引导</h2><ul><li>按 <code>↓</code> 选择<code>Kylin V10 ··· ··· （recovery mod）（恢复模式）</code>，按下 <code>E</code> 键。</li></ul><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E9%80%89%E6%8B%A9%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%BC%8F%E6%8C%89%E4%B8%8BE%E9%94%AE.png" alt="选择恢复模式按下E键"></p><ul><li><p>在 <code>linux /image ··· ··· gle nomodeset console=tty1 security= </code> 将光标置于 <code>security=</code> 之后（注意：此处<code>=</code>之后有一个空格，移动光标时可以在下一行的<code>echo</code>前侧按一下 <code>←</code> 退到 <code>security=</code> 位置）。</p></li><li><p>输入 <code>rw init=/bin/bash</code> 并按F10保存并执行。</p><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E7%BC%96%E8%BE%91%E5%BC%95%E5%AF%BC%EF%BC%881%EF%BC%89.png" alt="编辑引导（1）"></p><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E7%BC%96%E8%BE%91%E5%BC%95%E5%AF%BC%EF%BC%882%EF%BC%89.png" alt="编辑引导（2）"></p><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E7%BC%96%E8%BE%91%E5%BC%95%E5%AF%BC%EF%BC%883%EF%BC%89.png" alt="编辑引导（3）"></p></li></ul><h2 id="3-修改密码"><a href="#3-修改密码" class="headerlink" title="3.修改密码"></a>3.修改密码</h2><ul><li>输入 <code>passwd [用户名]</code> 回车。</li><li>输入新密码 -&gt; 回车 -&gt; 确认新密码 -&gt; 回车，提示 <code>password updated succesfully</code> 表示密码修改成功（注意：Linux系统的密码输入均为密文输入，输入时不会在屏幕上显示，输入完回车即可）。</li></ul><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%EF%BC%881%EF%BC%89.png" alt="修改密码（1）"></p><p><img src="/../images/%E9%93%B6%E6%B2%B3%E9%BA%92%E9%BA%9FV10%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%EF%BC%882%EF%BC%89.png" alt="修改密码（2）"></p><ul><li>输入 <code>/sbin/reboot -f</code> 重启系统完成密码修改，输入新密码登陆系统。</li></ul><h2 id="4-外链"><a href="#4-外链" class="headerlink" title="4.外链"></a>4.外链</h2><ul><li><p>原文链接：<a href="https://blog.csdn.net/LH643/article/details/125150595">【单击跳转】</a></p></li><li><p>麒麟软件官网修改密码步骤：<a href="http://eco.kylinos.cn/document/question/xi-tong-shi-yong/28.html">【单击跳转】</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 银河麒麟V10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.IP路由基础</title>
      <link href="/posts/e175ee3c.html"/>
      <url>/posts/e175ee3c.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-IP路由基础"><a href="#Ⅰ-IP路由基础" class="headerlink" title="Ⅰ - IP路由基础"></a>Ⅰ - IP路由基础</h1><h2 id="1-什么是路由"><a href="#1-什么是路由" class="headerlink" title="1.什么是路由"></a>1.什么是路由</h2><ul><li>当路由器或其他三层设备收到一个IP数据包时，会查看数据包的IP头部中的<strong>目的IP地址</strong>，并在路由表中进行查找，在匹配到<strong>最优的路由</strong>后，将数据报扔给该路由所指出接口或下一跳。</li></ul><h2 id="2-路由器的工作内容"><a href="#2-路由器的工作内容" class="headerlink" title="2.路由器的工作内容"></a>2.路由器的工作内容</h2><ul><li>建立并维护RIB（路由表，静态路由&#x2F;路由协议）。</li><li>根据路由表<strong>转发数据</strong>。</li></ul><h2 id="3-IP路由表"><a href="#3-IP路由表" class="headerlink" title="3.IP路由表"></a>3.IP路由表</h2><ul><li>初始情况下，路由器所知的网络，只有其直连所在网络。</li><li>直连网络在路由表中的标记为<code>Direct</code>。</li><li>直连网络出现在路由表中的前提，是该网络的接口物理机协议状态都是<code>UP</code>。</li><li>接口<code>UP</code>，协议<code>DOWN</code>的可能原因：<ul><li>IP地址冲突，子网掩码设置错误。</li><li>没有设置<code>DCE</code>时钟。</li><li>没有设置对<code>FR/PPP</code>的封装。</li><li><code>Hello</code>和<code>Dead</code>的更新时钟不同，两端路由器不同。</li></ul></li></ul><h2 id="4-查看路由表"><a href="#4-查看路由表" class="headerlink" title="4.查看路由表"></a>4.查看路由表</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">Router</span>]display ip routing<span class="literal">-table</span> </span><br><span class="line">Route Flags: <span class="built_in">R</span> - relay, D - download to fib</span><br><span class="line"><span class="literal">------------------------------------------------------------------------------</span></span><br><span class="line">Routing Tables: Public</span><br><span class="line">         Destinations : <span class="number">4</span>        Routes : <span class="number">4</span>        </span><br><span class="line"></span><br><span class="line">Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface</span><br><span class="line"></span><br><span class="line">      <span class="number">127.0</span>.<span class="number">0.0</span>/<span class="number">8</span>   Direct  <span class="number">0</span>    <span class="number">0</span>           D   <span class="number">127.0</span>.<span class="number">0.1</span>       InLoopBack0</span><br><span class="line">      <span class="number">127.0</span>.<span class="number">0.1</span>/<span class="number">32</span>  Direct  <span class="number">0</span>    <span class="number">0</span>           D   <span class="number">127.0</span>.<span class="number">0.1</span>       InLoopBack0</span><br><span class="line"><span class="number">127.255</span>.<span class="number">255.255</span>/<span class="number">32</span>  Direct  <span class="number">0</span>    <span class="number">0</span>           D   <span class="number">127.0</span>.<span class="number">0.1</span>       InLoopBack0</span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.255</span>/<span class="number">32</span>  Direct  <span class="number">0</span>    <span class="number">0</span>           D   <span class="number">127.0</span>.<span class="number">0.1</span>       InLoopBack0</span><br><span class="line"></span><br><span class="line">Destination/Mask：目的地址/掩码</span><br><span class="line">Proto：协议</span><br><span class="line">Pre：优先级</span><br><span class="line">Cost：开销</span><br><span class="line">Flags：标志位</span><br><span class="line">NextHop：下一跳</span><br><span class="line">Interface：出接口</span><br></pre></td></tr></table></figure><h2 id="5-路由条目的来源"><a href="#5-路由条目的来源" class="headerlink" title="5.路由条目的来源"></a>5.路由条目的来源</h2><ul><li>直连路由，路由器本地接口所在网段。</li><li>静态路由，手工配置的路由条目。</li><li>动态路由，路由器与路由器之间通过动态路由协议学习到的路由。</li></ul><h2 id="6-动态路由协议分类"><a href="#6-动态路由协议分类" class="headerlink" title="6.动态路由协议分类"></a>6.动态路由协议分类</h2><ul><li>距离矢量路由协议：<ul><li>RIP</li><li>BGP（路径矢量路由协议）</li></ul></li><li>链路状态路由协议：<ul><li>OSPF</li><li>IS-IS</li></ul></li><li>IGP：<ul><li>RIP</li><li>OSPF</li><li>IS-IS</li></ul></li><li>EGP：<ul><li>BGP</li></ul></li></ul><h1 id="Ⅱ-静态路由与默认路由"><a href="#Ⅱ-静态路由与默认路由" class="headerlink" title="Ⅱ - 静态路由与默认路由"></a>Ⅱ - 静态路由与默认路由</h1><h2 id="1-什么是静态路由"><a href="#1-什么是静态路由" class="headerlink" title="1.什么是静态路由"></a>1.什么是静态路由</h2><ul><li>静态路由指的是采用手工配置的方式为路由器添加路由条目。</li></ul><h2 id="2-静态路由的特点"><a href="#2-静态路由的特点" class="headerlink" title="2.静态路由的特点"></a>2.静态路由的特点</h2><ul><li>优点：<ul><li>配置简单。</li><li>手工配置，可控性高。</li><li>节省网络带宽。</li></ul></li><li>缺点：<ul><li>网络规模大的情况下，采用静态路由的配置方式工作量太大。</li><li>网络发生故障时无法动态响应路由变化。</li></ul></li></ul><h2 id="3-默认路由"><a href="#3-默认路由" class="headerlink" title="3.默认路由"></a>3.默认路由</h2><ul><li>默认路由是一种特殊的静态路由。</li><li>配置简单，易于管理。</li><li>减少查找路由表的时间，减少网络开销。</li><li>一般在网络出口配置默认路由。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.网络服务与应用</title>
      <link href="/posts/33951.html"/>
      <url>/posts/33951.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-DNS（域名系统）"><a href="#Ⅰ-DNS（域名系统）" class="headerlink" title="Ⅰ - DNS（域名系统）"></a>Ⅰ - DNS（域名系统）</h1><h2 id="1-DNS域名系统"><a href="#1-DNS域名系统" class="headerlink" title="1.DNS域名系统"></a>1.DNS域名系统</h2><ul><li><p>DNS的基本作用是把域名转换为IP地址。</p></li><li><p>DNS&#x2F;DHCP服务器的IP地址必须设置为<strong>静态IP地址</strong>，WEB&#x2F;FTP可以设置为动态IP地址。</p></li><li><p>Linux系统中提供DNS服务的组件为<code>bind</code>，主配置文件为<code>named.conf</code>。</p></li><li><p>诊断域名系统基础结构的信息和查看DNS服务器的IP地址的命令是<strong>nslookup</strong></p><bsp/></li></ul><h2 id="2-DNS域名结构"><a href="#2-DNS域名结构" class="headerlink" title="2.DNS域名结构"></a>2.DNS域名结构</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8E%E5%BA%94%E7%94%A8/DNS%E5%9F%9F%E5%90%8D%E7%BB%93%E6%9E%84.png" alt="DNS域名结构"></p><h2 id="3-DNS记录类型"><a href="#3-DNS记录类型" class="headerlink" title="3.DNS记录类型"></a>3.DNS记录类型</h2><table><thead><tr><th align="center">记录类型</th><th align="center">说明</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">SOA</td><td align="center">SOA叫起始授权机构记录，SOA记录用于在众多NS记录中哪一台是主服务器。</td><td align="center">SOA记录还设置一些数据版本和更新以及过期时间的信息。</td></tr><tr><td align="center">A</td><td align="center">把主机名解析为IP地址</td><td align="center"><a href="http://www.test.com/">www.test.com</a> → 1.1.1.1</td></tr><tr><td align="center">指针PTR</td><td align="center">反向查询，把IP地址解析为主机</td><td align="center">1.1.1.1 → <a href="http://www.test.com/">www.test.com</a></td></tr><tr><td align="center">名字服务器NS</td><td align="center">为一个域指定授权域名服务器，该域的所有子域也被委派给这个服务器</td><td align="center">比如某个区域由ns1.domain.com进行解析。</td></tr><tr><td align="center">邮件服务器MX</td><td align="center">指明区域的邮件服务器及优先级</td><td align="center">建立电子邮箱服务，需要MX记录将指向邮件服务器地址。</td></tr><tr><td align="center">别名CNAME</td><td align="center">指定主机名的别名<br/>把主机名解析为另一个主机名</td><td align="center"><a href="http://www.test.com别名为webserver12.test.com/">www.test.com别名为webserver12.test.com</a></td></tr></tbody></table><h2 id="4-DNS查询过程"><a href="#4-DNS查询过程" class="headerlink" title="4.DNS查询过程"></a>4.DNS查询过程</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8E%E5%BA%94%E7%94%A8/DNS%E6%9F%A5%E8%AF%A2%E8%BF%87%E7%A8%8B1.png" alt="DNS查询过程1"></p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8E%E5%BA%94%E7%94%A8/DNS%E6%9F%A5%E8%AF%A2%E8%BF%87%E7%A8%8B2.png" alt="DNS查询过程2"></p><h2 id="5-DNS查询方式"><a href="#5-DNS查询方式" class="headerlink" title="5.DNS查询方式"></a>5.DNS查询方式</h2><ul><li><p>递归查询（老好人）：</p><p>域名服务器帮助用户进行名字解析，并返回最后的结果。</p></li><li><p>迭代查询（踢皮球）：</p><p>域名服务器进行迭代访问，反复多次，直到最后找到结果。</p></li></ul><h1 id="Ⅱ-PGP与邮件协议"><a href="#Ⅱ-PGP与邮件协议" class="headerlink" title="Ⅱ - PGP与邮件协议"></a>Ⅱ - PGP与邮件协议</h1><h2 id="1-PGP与邮件协议"><a href="#1-PGP与邮件协议" class="headerlink" title="1.PGP与邮件协议"></a>1.PGP与邮件协议</h2><ul><li>发送邮件协议<strong>SMTP</strong>，接收邮件协议<strong>POP3&#x2F;IMAP4</strong>。</li><li>POP3协议的一个特点就是只要用户从POP3服务器读取了邮件，POP3服务器就将该邮件删除了。</li><li>IMAP是一个<strong>联机协议</strong>。当用户PC上的IMAP客户程序打开IMAP服务器的邮箱时，用户可以看到邮件的首部。用户打开某个邮件时，那个邮件才传到用户的计算机上，所以用户可以在不同的地方使用不同的计算机反复阅读自己的邮件，直到用户发出删除邮件的命令，IMAP服务器邮箱中的邮件会一直保存着。</li><li>邮件保密使用PGP协议，PGP的功能包括<strong>加密、鉴别、电子签名和压缩</strong>等技术，这些功能保证了电子邮件的安全性、报文完整性和发送方鉴别。</li></ul><h2 id="2-IMAP与POP3对比"><a href="#2-IMAP与POP3对比" class="headerlink" title="2.IMAP与POP3对比"></a>2.IMAP与POP3对比</h2><table><thead><tr><th align="center">操作位置</th><th align="center">操作内容</th><th align="center">IMAP</th><th align="center">POP3</th></tr></thead><tbody><tr><td align="center">收件箱</td><td align="center">阅读、标记、移动、删除邮件等</td><td align="center">客户端与邮箱更新同步</td><td align="center">仅客户端内</td></tr><tr><td align="center">发件箱</td><td align="center">保存到已发送</td><td align="center">客户端与邮箱更新同步</td><td align="center">仅客户端内</td></tr><tr><td align="center">创建文件夹</td><td align="center">新建自定义的文件夹</td><td align="center">客户端与邮箱更新同步</td><td align="center">仅客户端内</td></tr><tr><td align="center">草稿</td><td align="center">保存草稿</td><td align="center">客户端与邮箱更新同步</td><td align="center">仅客户端内</td></tr><tr><td align="center">垃圾文件夹</td><td align="center">接收误移入垃圾文件夹的邮件</td><td align="center">支持</td><td align="center">不支持</td></tr><tr><td align="center">广告邮件</td><td align="center">接收被移入广告邮件夹的邮件</td><td align="center">支持</td><td align="center">不支持</td></tr></tbody></table><h1 id="Ⅲ-文件传输协议"><a href="#Ⅲ-文件传输协议" class="headerlink" title="Ⅲ - 文件传输协议"></a>Ⅲ - 文件传输协议</h1><h2 id="1-FTP-x2F-TFTP"><a href="#1-FTP-x2F-TFTP" class="headerlink" title="1.FTP&#x2F;TFTP"></a>1.FTP&#x2F;TFTP</h2><ul><li><p>FTP的主要功能是减少或消除在不同操作系统下处理文件的不兼容性（如Windows系统和Linux系统之间互传文件）。</p></li><li><p>FTP是一个交互会话系统，在进行文件传输时，FTP的客户与服务器之间需要建立两个<strong>TCP链接</strong>，分别是<strong>控制连接（21端口）</strong>和<strong>数据连接（20端口）</strong>。</p></li><li><p>FTP的常用命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">get //下载</span><br><span class="line">mget //批量下载</span><br><span class="line">put //上传</span><br><span class="line">mput //批量上传</span><br><span class="line"><span class="built_in">ls</span> //列表</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-TFTP"><a href="#2-TFTP" class="headerlink" title="2.TFTP"></a>2.TFTP</h2><ul><li><p>TFTP是一个很小且易于实现的文件传送协议，它的工作方式也采用C&#x2F;S模式，但传输层使用<strong>UDP69端口</strong>，所以TFFTP需要在应用层有自己的差错改正措施。</p></li><li><p><strong>TFTP只支持文件传输而不支持交互</strong>，TFTP没有一个庞大的命令集，没有ls功能，也不能对用户进行身份鉴别。</p></li><li><p>TFTP主要特点：</p><p>因为工作在停止等待方式，每个报文需要应答，UDP报文固定512B长，可对文件进行读或写。</p></li></ul><h1 id="Ⅳ-远程登录与HTTP"><a href="#Ⅳ-远程登录与HTTP" class="headerlink" title="Ⅳ - 远程登录与HTTP"></a>Ⅳ - 远程登录与HTTP</h1><h2 id="1-远程登陆协议"><a href="#1-远程登陆协议" class="headerlink" title="1.远程登陆协议"></a>1.远程登陆协议</h2><ul><li>telnet远程登陆设备如交换机路由器，进行设备管理和配置，使用<strong>TCP 23端口</strong>，他是<strong>明文传输，不安全</strong>。</li><li>telnet相对的管理协议SSH，使用<strong>TCP 22端口，加密传输</strong>。</li><li>Windows远程登陆协议RDP（远程桌面），使用<strong>TCP 3389端口</strong>。</li></ul><h2 id="２-HTTP与HTTPS协议"><a href="#２-HTTP与HTTPS协议" class="headerlink" title="２.HTTP与HTTPS协议"></a>２.HTTP与HTTPS协议</h2><ul><li>WWW是一种分布式的超媒体系统，它是超文本(HyperText)系统的扩充，一个超文本由多个信息<br>源链接成。利用一个链接可使用户找到另一个文档，这些文档可以位于世界上任何一个接在因特<br>网上的超文本系统中，<strong>超文本是万维网的基础</strong>。<ul><li>HTTPS不是一个单独的协议，而是两个协议的结合，即在加密的安全套接层或传输层安全(TLS)上进行普通的HTTP交互传输，这种方式提供了一种免于窃听者或中间人攻击的合理保护。</li><li>HTTPS端口是443，HTTP默认端口80。</li><li>S-HTTP 安全的超文本传输协议（Security HTTP）。</li><li>S-HTTP语法与HTTP一样，而报文头有所区别，进行了加密。</li></ul></li></ul><h2 id="３-Cookie、Session与Web缓存"><a href="#３-Cookie、Session与Web缓存" class="headerlink" title="３.Cookie、Session与Web缓存"></a>３.Cookie、Session与Web缓存</h2><table><thead><tr><th align="center">类型</th><th align="center">功能描述</th></tr></thead><tbody><tr><td align="center">Cookie</td><td align="center">提供一种在Web应用程序中存储用户特定信息的方法。当用户访问站点时，Cookie存储用户信息，<strong>当该用户再次访问该网站时，可以检索以前存储的信息。Cookie存储于客户端硬盘上</strong>，与用户相关，在一定时间内持久化存储，可以跨浏览器共享数据，需要被序列化，<strong>发生服务器-客户端数据传输</strong>。</td></tr><tr><td align="center">Session</td><td align="center">为当前用户会话提供信息。提供对可用于存储信息的会话范围的缓存的访问，以及控制如何管理会话的方法。存储在服务器的内存中，因此与在数据库中存储和检索信息相比，它的执行速度更快。会话状态应用于单个的用户和会话。<strong>在会话的整个生存期中存在即不会被主动丢弃，不被序列化，不发生服务器-客户端数据传输</strong>。</td></tr><tr><td align="center">Cache</td><td align="center"><strong>存储于服务器的内存中</strong>，允许自定义缓存项以及将缓存多长时间。它不与会话相关，所以它是多会话共享的，因此使用它可以<strong>提高网站性能，但是可能泄露用户的安全信息</strong>。另外，在服务器缺乏内存时可能会自动移除Cache，因此需要在每次获取数据时检测该Cache项是否还存在。Cache与会话无关，根据服务器内存资源的状况随时可能被丢弃，不被序列化，<strong>不发生服务器-客户端数据传输</strong>。</td></tr></tbody></table><h2 id="４-Cookie、Session和Cache对比"><a href="#４-Cookie、Session和Cache对比" class="headerlink" title="４.Cookie、Session和Cache对比"></a>４.Cookie、Session和Cache对比</h2><table><thead><tr><th align="center"></th><th align="center">Cookie</th><th align="center">Session</th><th align="center">Cache</th></tr></thead><tbody><tr><td align="center">存储位置</td><td align="center">客户端</td><td align="center">服务器</td><td align="center">服务器</td></tr><tr><td align="center">是否会被主动丢弃</td><td align="center">不会</td><td align="center">不会</td><td align="center">会</td></tr><tr><td align="center">与会话相关</td><td align="center">是</td><td align="center">是</td><td align="center">否</td></tr><tr><td align="center">是否被序列化</td><td align="center">是</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">是否发生服务器-客户端传输</td><td align="center">是</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">是否被加密</td><td align="center">是</td><td align="center">否</td><td align="center">否</td></tr></tbody></table><h2 id="5-其他安全协议"><a href="#5-其他安全协议" class="headerlink" title="5.其他安全协议"></a>5.其他安全协议</h2><ul><li>S&#x2F;MIME（Security&#x2F;Multipurpose Internet Mail Extensions）提供<strong>电子邮件安全</strong>服务（注：MIME不具备安全功能）。</li><li>SET（Secure Electronic Transaction）<strong>安全的电子交易</strong>，用于保障电子商务安全。</li><li>Kerberos是用于身份认证的安全协议，支持AAA认证、授权、审计。</li></ul><h1 id="Ⅴ-DHCP"><a href="#Ⅴ-DHCP" class="headerlink" title="Ⅴ - DHCP"></a>Ⅴ - DHCP</h1><h2 id="1-DHCP基础"><a href="#1-DHCP基础" class="headerlink" title="1.DHCP基础"></a>1.DHCP基础</h2><ul><li>DHCP（Dynamic Host Configuration Protocol，动态主机配置协议）。</li><li>Linux系统DHCP服务配置文件为 <strong>&#x2F;etc&#x2F;dhcpd.conf</strong>。</li><li>DHCP地址租约默认8天，当租期超过一半时，进行续约，续约完后还是8天，<strong>续约发送的报文是<code>DHCP Request</code><strong>，如果第一次续约失败，</strong>87.25%</strong> 时再次续约。</li><li>自动续约失败，DHCP获取失败会获得一个169.254.0.0&#x2F;16的特殊IP地址。</li></ul><h2 id="2-DHCP报文类型"><a href="#2-DHCP报文类型" class="headerlink" title="2.DHCP报文类型"></a>2.DHCP报文类型</h2><ul><li><p>发现阶段：</p><p>DHCP客户端在网络中广播发送<code>DHCP Discover</code>请求报文，发现DHCP服务器，请求IP地址租约。</p></li><li><p>提供阶段：</p><p>DHCP服务器通过<code>DHCP Offer</code>报文向DHCP客户端提供IP地址分配。</p></li><li><p>选择阶段：</p><p>DHCP客户端通过<code>DHCP Request</code>报文确认选择一个DHCP服务器为它提供IP的地址。</p></li><li><p>确认阶段：</p><p>DHCP服务器通过<code>DHCP ACK</code>报文把把客户端请求的IP地址分配给用户，并更新租用等信息。</p></li><li><p>如果客户端检测到被分配的地址冲突，向服务器发送<code>DHCP Decline</code>信息，拒绝使用该地址。</p></li><li><p>当租期到 <strong>50%</strong> 时，客户端发<code>DHCP Request</code>续约，续约失败，<strong>87.5%</strong> 再次续约，到期未完成续约，重新进行DHCP过程。</p></li><li><p>续约失败，客户端会获得一个特殊的IP地址：169.254.0.0&#x2F;16。</p></li><li><p>注意：思科DHCP服务器的回包是广播，华为DHCP服务器回包是单播。</p></li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1%E4%B8%8E%E5%BA%94%E7%94%A8/DHCP%E6%9C%8D%E5%8A%A1%E6%B5%81%E7%A8%8B.png" alt="DHCP服务流程"></p><h2 id="3-DHCP中继"><a href="#3-DHCP中继" class="headerlink" title="3.DHCP中继"></a>3.DHCP中继</h2><p>DHCP中继是在DHCP服务器不同又需要申请DHCP服务的网络内，设置 一个中继器用来在该网络中代替DHCP服务器接收客户端的请求，并将DHCP客户端发送给DHCP服务器的报文以<strong>单播的形式</strong>发送给DHCP服务器，实现了在不同的网络中运行DHCP。</p><h1 id="Ⅵ-代理与NAT"><a href="#Ⅵ-代理与NAT" class="headerlink" title="Ⅵ - 代理与NAT"></a>Ⅵ - 代理与NAT</h1><h2 id="1-网络地址转换NAT"><a href="#1-网络地址转换NAT" class="headerlink" title="1.网络地址转换NAT"></a>1.网络地址转换NAT</h2><ul><li><p>NAT有三种类型：</p><p>静态NAT、动态地址NAT、端口地址转换PAT。</p><ul><li><p>静态NAT：</p><p>内部网络中的每个主机都被永久映射成某全球地址。</p></li><li><p>动态地址NAT：</p><p>以地址池的方式。地址池中有多个全球地址用来对内部地址进行映射，但不固定绑定。</p></li><li><p>端口地址转换PAT：</p><p>一个外网地址可以和多个内网地址(如一个网段)进行映射，同时在该地址上加上一个由NAT设备指定的TCP&#x2F;UDP的端口号来进行区分，通过使用PAT可以让成百上千的本地地址节点使用个全球地址访问Internet，PAT普遍应用于接入设备中，它可以将中小型的网络隐藏在一个合法的IP地址后面，通过这种方式把内部主机隐藏起来，从而实现了内部主机的安全性。</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.基础网络协议</title>
      <link href="/posts/36345.html"/>
      <url>/posts/36345.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-IP地址基础"><a href="#Ⅰ-IP地址基础" class="headerlink" title="Ⅰ - IP地址基础"></a>Ⅰ - IP地址基础</h1><h2 id="1-TCP-x2F-IP参考模型"><a href="#1-TCP-x2F-IP参考模型" class="headerlink" title="1.TCP&#x2F;IP参考模型"></a>1.TCP&#x2F;IP参考模型</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/TCP-IP%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.png" alt="TCP-IP参考模型"></p><h2 id="2-什么是IP地址"><a href="#2-什么是IP地址" class="headerlink" title="2.什么是IP地址"></a>2.什么是IP地址</h2><ul><li><p>作为通信节点的唯一标识。</p></li><li><p>用于IP报文的寻址以及标记一个节点。</p></li><li><p>IPv4的地址一共有32位，使用<strong>点分十进制</strong>表示。</p></li><li><p>IPv6的地址一共有<strong>128</strong>位，<strong>用冒号分割的16进制组成</strong>。</p><bsp/></li></ul><p><strong>例子（IPv4）：</strong></p><table><thead><tr><th align="center">172.</th><th align="center">31.</th><th align="center">1.</th><th align="center">254</th></tr></thead><tbody><tr><td align="center">10101100</td><td align="center">00011111</td><td align="center">00000001</td><td align="center">11111110</td></tr></tbody></table><p><strong>例子（IPv6）：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2001:3CA1:010F:001A:121B:0000:0000:0010</span><br></pre></td></tr></table></figure><h2 id="3-IP地址分类"><a href="#3-IP地址分类" class="headerlink" title="3.IP地址分类"></a>3.IP地址分类</h2><p>IP地址可以分为A、B、C、D、E五类，其中A、B、C三类地址如下表格所示在全球范围内统一分配，D、E类为特殊地址。</p><table><thead><tr><th align="center">类别</th><th align="center">最大网络数</th><th align="center">IP地址范围</th><th align="center">单个网段最大主机数</th><th align="center">私有IP地址范围</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">126(2^7-2)</td><td align="center">1.0.0.1-127.255.255.254</td><td align="center">16777214</td><td align="center">10.0.0.0-10.255.255.255</td></tr><tr><td align="center">B</td><td align="center">16384(2^14)</td><td align="center">128.0.0.1-191.255.255.254</td><td align="center">65534</td><td align="center">172.16.0.0-172.31.255.255</td></tr><tr><td align="center">C</td><td align="center">2097152(2^21)</td><td align="center">192.0.0.1-223.255.255.254</td><td align="center">254</td><td align="center">192.168.0.0-192.168.255.255</td></tr></tbody></table><ul><li><p>D类IP地址：</p><p>D类IP地址是组播（多播）地址，地址范围是224.0.0.0 - 239.255.255.255。</p></li><li><p>E类IP地址：</p><p>E类IP地址是保留地址，它的IP地址范围是240.0.0.0 - 247.255.255.255。</p></li></ul><h2 id="4-子网掩码"><a href="#4-子网掩码" class="headerlink" title="4.子网掩码"></a>4.子网掩码</h2><ul><li><p>子网掩码与IP地址搭配使用（是IP地址的好兄弟），用于描述IP地址的主机部分与网络部分。</p></li><li><p>子网掩码同样一共32位，与IP地址的32位一一对应，掩码中二进制为1代表网络为，为0代表主机位。</p></li><li><p>下方表格为A、B、C类地址的默认子网掩码：</p><bsp/></li></ul><table><thead><tr><th align="center">类别</th><th align="center">默认掩码</th><th align="center">掩码位数</th></tr></thead><tbody><tr><td align="center">A类</td><td align="center">255.0.0.0</td><td align="center">&#x2F;8</td></tr><tr><td align="center">B类</td><td align="center">255.255.0.0</td><td align="center">&#x2F;16</td></tr><tr><td align="center">C类</td><td align="center">255.255.255.0</td><td align="center">&#x2F;24</td></tr></tbody></table><h2 id="5-广播域与冲突域"><a href="#5-广播域与冲突域" class="headerlink" title="5.广播域与冲突域"></a>5.广播域与冲突域</h2><ul><li><p>广播域与冲突域的产生：</p><ul><li><p>集线器本身是一个冲突域。</p></li><li><p>交换机（二层）的每一个接口是一个冲突域。</p></li><li><p>路由器的每一个接口是一个广播域。</p></li><li><p>路由器与交换机连接的接口是一个冲突域。</p></li><li><p>二层可以隔离冲突域，但不能隔离广播域（交换机）。</p></li><li><p>三层可以隔离广播域，默认隔离冲突域（路由器）。</p><bsp/></li></ul></li><li><p>广播域的特点：</p><ul><li><p>广播域其中的流量在整个网络中流动。</p></li><li><p>广播域是指不使用路由器的可访问计算机系统的逻辑集。</p></li><li><p>对于所有类型的IP广播，广播域均不限于特定的IP子网。</p></li><li><p>广播域主要使用交换环境进行广播，因此不会发生冲突。</p></li><li><p>交换机在广播域中永不中断。</p></li><li><p>交换机或集线器上的所有端口可能位于同一广播域中。</p><bsp/></li></ul></li><li><p>冲突域的特点：</p><ul><li><p>冲突域是一个网络部分，它允许流量向前和向后流动。</p></li><li><p>冲突域是指可能发生数据包冲突的一组设备。这些设备可能包括其他IP子网的设备。</p></li><li><p>当多个设备在单个有线链路上传输数据时，就会发生数据包冲突。</p></li><li><p>交换机将在冲突域中中断。</p></li><li><p>在冲突域中，路由器上的每个端口都在单独的广播域中。</p><bsp/></li></ul></li></ul><h2 id="6-IP网络通信类型"><a href="#6-IP网络通信类型" class="headerlink" title="6.IP网络通信类型"></a>6.IP网络通信类型</h2><ul><li><p>单播：</p><p>是指在计算机网络传输中，目的地址为单一目标的传输方式。</p></li><li><p>组播：</p><p>是指在计算机网络传输中，把信息传给一组目的地址，消息在每条链路上只需传递一次，只有在链路分叉时消息才会被复制。</p></li><li><p>广播：</p><p>是指在计算机网络传输中，目的地址为网络中的<strong>广播域内</strong>所有设备的一种传输方式。</p></li></ul><h2 id="7-IP地址类型"><a href="#7-IP地址类型" class="headerlink" title="7.IP地址类型"></a>7.IP地址类型</h2><ul><li><p>网络地址：</p><p>指代网络的地址，在网络的IPv4地址范围内，最小的地址保留为网络地址，网络地址的主机部分均为0。</p></li><li><p>广播地址：</p><p>广播地址是用于向网络中的所有主机发送数据的特殊地址，它使用该网络范围内的最大地址，即主机部分全为1的地址。</p></li><li><p>主机地址：</p><p>可以分配给网络中终端设备的地址。</p></li></ul><h1 id="Ⅱ-IPv6与过渡技术"><a href="#Ⅱ-IPv6与过渡技术" class="headerlink" title="Ⅱ - IPv6与过渡技术"></a>Ⅱ - IPv6与过渡技术</h1><h2 id="1-IPv6地址"><a href="#1-IPv6地址" class="headerlink" title="1.IPv6地址"></a>1.IPv6地址</h2><ul><li><p>IPv6的地址一共有<strong>128</strong>位，<strong>用冒号分割的16进制组成</strong>。</p></li><li><p>每个字段前面的0可以省去，例如例子中的最后一段0010可以简写为10。</p></li><li><p>一个或多个全0的字段，可以用一对冒号<code>: :</code>来代替。</p></li><li><p>IPv4兼容地址可以写为 : :192.168.1.1。</p></li><li><p><strong>有效0位不能简写，双冒号只能出现一次。</strong></p></li><li><p><strong>例子（IPv6）：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2001:3CA1:010F:001A:121B:0000:0000:0010</span><br></pre></td></tr></table></figure><p>综上所述，该地址可以简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2001:3CA1:010F:001A:121B::10</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-IPv6地址分类"><a href="#2-IPv6地址分类" class="headerlink" title="2.IPv6地址分类"></a>2.IPv6地址分类</h2><ul><li><p>单播地址：</p><ul><li><p>不确定地址：地址0:0:0:0:0:0:0:0 称为不确定地址，不能分配给任何节点。</p></li><li><p>回环地址：地址0:0:0:0:0:0:0:1 称为回环地址。</p><bsp/></li></ul></li><li><p>任意播地址：</p><ul><li><p>表示一组接口的标识符，通常是路由距离最近的接口。</p></li><li><p>任意播地址不能用作源地址。</p></li><li><p>任意播地址不能指定给IPv6主机，只能指定给IPv6路由器。</p><bsp/></li></ul></li><li><p>组播地址：</p><ul><li><p>发往组播地址的分组被传送给该地址标识的所有接口。</p></li><li><p>IPv6中没有广播地址，它的功能已经被组播地址所代替。</p><bsp/></li></ul></li><li><p>单播地址：</p><ul><li><p>可聚合全球单播地址：这种地址在全球范围内有效，相当千IPv4公用地址（前缀为0<strong>01</strong>）。</p></li><li><p>链路本地地址：用于同一链路的相邻节点间的通信（前缀为1111 1110 <strong>10</strong>） 结合MAC地址自动生成。</p></li><li><p>站点本地地址：相当千IPv4 中的私网地址（前缀为1111 111<strong>0 11</strong>）。</p></li><li><p>口诀：1聚2恋3占。</p><bsp/></li></ul></li><li><p>组播地址：</p><ul><li><p>IPv6 组播地址的格式前缀为 1111 1111。</p><bsp/></li></ul></li></ul><h2 id="3-IPv4和IPv6地址对比"><a href="#3-IPv4和IPv6地址对比" class="headerlink" title="3.IPv4和IPv6地址对比"></a>3.IPv4和IPv6地址对比</h2><table><thead><tr><th align="center">IPv4地址</th><th align="center">IPv6地址</th></tr></thead><tbody><tr><td align="center">点分十进制表示</td><td align="center">带冒号的十六进制表示，0可以压缩</td></tr><tr><td align="center">分为A、B、C、D、E 五类</td><td align="center">不分类</td></tr><tr><td align="center">组播地址224.0.0.0&#x2F;4</td><td align="center">组播地址FF00::&#x2F;8</td></tr><tr><td align="center">广播地址（主机部分全为1）</td><td align="center">任意播（限于子网内部）</td></tr><tr><td align="center">默认地址0.0.0.0</td><td align="center">不确定地址::</td></tr><tr><td align="center">回环地址127.0.0.1</td><td align="center">回环地址::1</td></tr><tr><td align="center">公共地址</td><td align="center">可聚合全球单播地址FP&#x3D;001</td></tr><tr><td align="center">私有地址：<br />10.0.0.0&#x2F;8;127.16.0.0&#x2F;12;192.168.0.0&#x2F;16</td><td align="center">站点本地地址：FEC0::&#x2F;48</td></tr><tr><td align="center">自动专用IP地址：169.254.0.0&#x2F;16</td><td align="center">链路本地地址FE80::&#x2F;48</td></tr></tbody></table><h2 id="4-IPv4到IPv6过渡技术"><a href="#4-IPv4到IPv6过渡技术" class="headerlink" title="4.IPv4到IPv6过渡技术"></a>4.IPv4到IPv6过渡技术</h2><ul><li><p>隧道技术：</p><p>解决IPv6节点之间通过IPv4网络进行通信。</p></li><li><p>双栈技术：</p><p>同时运行IPv4和IPv6。</p></li><li><p>翻译技术：</p><p>解决纯IPv6节点与纯IPv4节点之间进行通信。</p></li></ul><h1 id="Ⅲ-IP报文格式"><a href="#Ⅲ-IP报文格式" class="headerlink" title="Ⅲ - IP报文格式"></a>Ⅲ - IP报文格式</h1><h2 id="1-IPv4报文格式"><a href="#1-IPv4报文格式" class="headerlink" title="1.IPv4报文格式"></a>1.IPv4报文格式</h2><ul><li><p>头部长度（IHL）：</p><p>取值最小值是5，最大值为15，单位4字节。</p></li><li><p>TOS：</p><p>为区分服务字段，用于区分服务类型，即QoS字段。</p></li><li><p>总长度字段：</p><p>是IPv4数据报的总长度。</p></li><li><p>标识：</p><p>标识主机发送的数据报，每次发送+1。</p></li><li><p><strong>生存期（TTL）：</strong></p><p><strong>用于设置一个数据包可经过的路由器数量上限，每经过一台路由器便会 -1。</strong></p></li><li><p><strong>协议字段：</strong></p><p><strong>包含一个数字，标识数据报有效载荷部分的数据类型，最常用的值为1（ICMP）、17（UDP）、6（TCP）。</strong></p></li><li><p>头部校验和字段仅计算IPv4头部。这意味着IP协议不检查IPv4数据报有效载荷部分的正确性，当TTL减一时，头部校验和必须改变。</p></li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/IPv4%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="IPv4报文格式"></p><h2 id="2-IPv6报文格式"><a href="#2-IPv6报文格式" class="headerlink" title="2.IPv6报文格式"></a>2.IPv6报文格式</h2><ul><li><p>版本（4位）：</p><p>用0110代表IPv6。</p></li><li><p>通信类型（8位）：</p><p>用于区分不同的IP分组，相当于IPv4中服务类型字段（实际不用）。</p></li><li><p>流标记（20位）：</p><p>标识某些需要特别处理的分组（实际不用）。</p></li><li><p><strong>负载长度（16位）：</strong></p><p><strong>表示出了IPv6固定头部40个字节之外的负载长度，扩展头包含在负载长度之中。</strong></p></li><li><p><strong>下一头部（8位）：</strong></p><p><strong>指明下一个头部类型，可能是IPv6扩展头部或高层协议的头部。</strong></p></li><li><p><strong>跳数限制（8位）：</strong></p><p><strong>用于检测路由循环，类似TTL。</strong></p></li><li><p>源地址（128位）：</p><p>发送节点的地址。</p></li><li><p>目的地址（128位）：</p><p>接收节点的地址。</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/IPv6%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="IPv6报文格式"></p></li></ul><h1 id="Ⅳ-ICMP"><a href="#Ⅳ-ICMP" class="headerlink" title="Ⅳ - ICMP"></a>Ⅳ - ICMP</h1><h2 id="1-ICMP协议"><a href="#1-ICMP协议" class="headerlink" title="1.ICMP协议"></a>1.ICMP协议</h2><ul><li><p>ICMP全称（Internet Control Message Protocol）Internet控制消息协议，是IP协议的辅助协议。</p></li><li><p>ICMP协议用来在网络设备间<strong>传递各种差错和控制信息</strong>，对于<strong>收集各种网络信息、诊断和排除各种网络故障</strong>等方面起着至关重要的作用。</p><bsp/></li></ul><h2 id="2-ICMP报文内容"><a href="#2-ICMP报文内容" class="headerlink" title="2.ICMP报文内容"></a>2.ICMP报文内容</h2><table><thead><tr><th align="center">Type</th><th align="center">Code</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">Echo Replay</td></tr><tr><td align="center">3</td><td align="center">0</td><td align="center">网络不可达</td></tr><tr><td align="center">3</td><td align="center">1</td><td align="center">主机不可达</td></tr><tr><td align="center">3</td><td align="center">2</td><td align="center">协议不可达</td></tr><tr><td align="center">3</td><td align="center">3</td><td align="center">端口不可达</td></tr><tr><td align="center">5</td><td align="center">0</td><td align="center">重定向</td></tr><tr><td align="center">8</td><td align="center">0</td><td align="center">Echo Request</td></tr></tbody></table><h2 id="3-ICMP差错检测"><a href="#3-ICMP差错检测" class="headerlink" title="3.ICMP差错检测"></a>3.ICMP差错检测</h2><ul><li><p>ICMP Echo消息常用于诊断源和目的地之间的网络连通性，同时还可以提供其他信息，如往返时间等。</p></li><li><p>Ping命令：</p><ul><li><p>Ping是网络设备、Windows、Unix、Linux平台上的一个命令，该命令基于ICMP协议。</p></li><li><p>Ping常用于检测网络的连通性。</p><bsp/></li></ul></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\Administrator&gt; ping www.<span class="number">1024</span>byteeeee.top</span><br><span class="line"></span><br><span class="line">正在 Ping <span class="number">1024</span><span class="literal">-byteeeee</span>.github.io [<span class="number">185.199</span><span class="type">.111.153</span>] 具有 <span class="number">32</span> 字节的数据:</span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">111.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">78</span>ms TTL=<span class="number">49</span></span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">111.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">102</span>ms TTL=<span class="number">49</span></span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">111.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">76</span>ms TTL=<span class="number">49</span></span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">111.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">67</span>ms TTL=<span class="number">49</span></span><br><span class="line"></span><br><span class="line"><span class="number">185.199</span>.<span class="number">111.153</span> 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = <span class="number">4</span>，已接收 = <span class="number">4</span>，丢失 = <span class="number">0</span> (<span class="number">0</span>% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = <span class="number">67</span>ms，最长 = <span class="number">102</span>ms，平均 = <span class="number">80</span>ms</span><br></pre></td></tr></table></figure><h2 id="4-ICMP错误报告"><a href="#4-ICMP错误报告" class="headerlink" title="4.ICMP错误报告"></a>4.ICMP错误报告</h2><ul><li><p>ICMP定义了各种错误消息，根据这些错误消息，我们可以判断数据传输失败的原因。</p><bsp/></li></ul><p><strong>例子：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\Administrator&gt; tracert www.zheshiyigebucunzaidewangzhi.com</span><br><span class="line">无法解析目标系统名称 www.zheshiyigebucunzaidewangzhi.com。</span><br></pre></td></tr></table></figure><ul><li><p>Tracert命令：</p><p>Tracert命令基于报文头中的TTL值来逐跳跟踪报文的转发路径，Tracert是检测网络丢包和时延的有效手段，同时可以帮助管理员发现网络中的路由环路。</p></li></ul><p><strong>例子：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\Administrator&gt; tracert www.<span class="number">1024</span>byteeeee.top</span><br><span class="line"></span><br><span class="line">通过最多 <span class="number">30</span> 个跃点跟踪</span><br><span class="line">到 <span class="number">1024</span><span class="literal">-byteeeee</span>.github.io [<span class="number">185.199</span><span class="type">.109.153</span>] 的路由:</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span>    &lt;<span class="number">1</span> 毫秒   &lt;<span class="number">1</span> 毫秒   &lt;<span class="number">1</span> 毫秒 <span class="number">192.168</span>.<span class="number">0.1</span></span><br><span class="line">  <span class="number">2</span>     <span class="number">1</span> ms     <span class="number">1</span> ms    &lt;<span class="number">1</span> 毫秒 <span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line">  <span class="number">3</span>     <span class="number">5</span> ms     *        <span class="number">5</span> ms  <span class="number">100.64</span>.<span class="number">0.1</span></span><br><span class="line">  <span class="number">4</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">5</span>     <span class="number">6</span> ms     *        <span class="number">5</span> ms  <span class="number">223.151</span>.<span class="number">48.86</span></span><br><span class="line">  <span class="number">6</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">7</span>    <span class="number">10</span> ms     *        *     <span class="number">61.137</span>.<span class="number">8.173</span></span><br><span class="line">  <span class="number">8</span>     *        *        *     请求超时。</span><br><span class="line">  <span class="number">9</span>     *       <span class="number">18</span> ms    <span class="number">18</span> ms  <span class="number">202.97</span>.<span class="number">89.202</span></span><br><span class="line"> <span class="number">10</span>     *        *        *     请求超时。</span><br><span class="line"> <span class="number">11</span>   <span class="number">108</span> ms   <span class="number">115</span> ms   <span class="number">109</span> ms  <span class="number">203.86</span>.<span class="number">97.18</span></span><br><span class="line"> <span class="number">12</span>   <span class="number">108</span> ms     *      <span class="number">109</span> ms  ae<span class="literal">-3</span>.r31.tokyjp05.jp.bb.gin.ntt.net [<span class="number">129.250</span><span class="type">.3.29</span>]</span><br><span class="line"> <span class="number">13</span>   <span class="number">108</span> ms   <span class="number">109</span> ms   <span class="number">108</span> ms  ae<span class="literal">-3</span>.r00.tokyjp08.jp.bb.gin.ntt.net [<span class="number">129.250</span><span class="type">.6.129</span>]</span><br><span class="line"> <span class="number">14</span>   <span class="number">115</span> ms   <span class="number">114</span> ms   <span class="number">114</span> ms  ae<span class="literal">-1</span>.fastly.tokyjp08.jp.bb.gin.ntt.net [<span class="number">61.200</span><span class="type">.82.50</span>]</span><br><span class="line"> <span class="number">15</span>   <span class="number">108</span> ms     *      <span class="number">109</span> ms  cdn<span class="literal">-185-199-109-153</span>.github.com [<span class="number">185.199</span><span class="type">.109.153</span>]</span><br><span class="line"></span><br><span class="line">跟踪完成。</span><br></pre></td></tr></table></figure><h1 id="Ⅴ-ARP和RARP"><a href="#Ⅴ-ARP和RARP" class="headerlink" title="Ⅴ - ARP和RARP"></a>Ⅴ - ARP和RARP</h1><h2 id="1-ARP的作用"><a href="#1-ARP的作用" class="headerlink" title="1.ARP的作用"></a>1.ARP的作用</h2><ul><li><p>ARP（Address Resolution Protocol）地址解析协议：</p><p>用于实现从IP地址到MAC地址的映射，通过IP地址来查MAC地址，即<strong>询问目标IP对应的MAC地址</strong>。</p></li></ul><h2 id="2-RARP的作用"><a href="#2-RARP的作用" class="headerlink" title="2.RARP的作用"></a>2.RARP的作用</h2><ul><li><p>RARP（Reverse Address Resolution Protocol）反向地址转换协议：</p><p>根据MAC地址来查找IP地址，<strong>常用于无盘工作站</strong>，设备没有硬盘，无法记录IP，刚启动时发送一个广播，用MAC去2获取IP。需要一台RARP服务器，根据MAC地址查询服务器IP地址。</p></li></ul><h1 id="Ⅵ-TCP和UDP"><a href="#Ⅵ-TCP和UDP" class="headerlink" title="Ⅵ - TCP和UDP"></a>Ⅵ - TCP和UDP</h1><h2 id="1-传输层"><a href="#1-传输层" class="headerlink" title="1.传输层"></a>1.传输层</h2><ul><li><p>TCP（传输控制协议）属于可靠面向连接的网络协议。</p></li><li><p>UDP（用户数据报协议）属于不可靠面向无连接的网络协议。</p><bsp/></li></ul><h2 id="2-传输层协议"><a href="#2-传输层协议" class="headerlink" title="2.传输层协议"></a>2.传输层协议</h2><table><thead><tr><th align="center">传输控制协议-TCP</th><th align="center">用户数据报协议-UDP</th></tr></thead><tbody><tr><td align="center">面向连接</td><td align="center">面向无连接</td></tr><tr><td align="center">可靠传输</td><td align="center">不可靠传输</td></tr><tr><td align="center">流控及窗口机制</td><td align="center">尽力而为的传输</td></tr><tr><td align="center">适用TCP的应用<br />WEB浏览器，电子邮件，文件传输程序</td><td align="center">适用UDP的应用<br />域名系统（DNS），视频应用，IP语音（VoIP）</td></tr></tbody></table><h2 id="3-TCP报文格式"><a href="#3-TCP报文格式" class="headerlink" title="3.TCP报文格式"></a>3.TCP报文格式</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/TCP%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="TCP报文格式"></p><h2 id="4-UDP报文格式"><a href="#4-UDP报文格式" class="headerlink" title="4.UDP报文格式"></a>4.UDP报文格式</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/UDP%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="UDP报文格式"></p><h2 id="5-端口号"><a href="#5-端口号" class="headerlink" title="5.端口号"></a>5.端口号</h2><ul><li><p>端口号用来区分不同的应用。</p><table><thead><tr><th align="center">协议</th><th align="center">中文全称</th><th align="center">默认端口号</th></tr></thead><tbody><tr><td align="center">POP3</td><td align="center">邮局协议版本v3</td><td align="center">110</td></tr><tr><td align="center">SMTP</td><td align="center">简单邮件传输协议</td><td align="center">25</td></tr><tr><td align="center">Telnet</td><td align="center">远程控制协议</td><td align="center">23</td></tr><tr><td align="center">FTP</td><td align="center">文件传输协议</td><td align="center">21</td></tr><tr><td align="center">HTTP</td><td align="center">超文本传输协议</td><td align="center">80</td></tr><tr><td align="center">IMAP</td><td align="center">因特网消息访问</td><td align="center">143</td></tr><tr><td align="center">HTTPs</td><td align="center">HTTP安全协议</td><td align="center">443</td></tr><tr><td align="center">DNS</td><td align="center">域名解析</td><td align="center">53</td></tr><tr><td align="center">DHCP</td><td align="center">动态主机配置协议</td><td align="center">67</td></tr><tr><td align="center">TFTP</td><td align="center">简单文件传输协议</td><td align="center">69</td></tr><tr><td align="center">SNMP</td><td align="center">简单网络管理协议</td><td align="center">161</td></tr><tr><td align="center">BGP</td><td align="center">边界网关协议</td><td align="center">179</td></tr><tr><td align="center">HSRP</td><td align="center">热备份路由协议</td><td align="center">1985</td></tr><tr><td align="center">RIP</td><td align="center">距离矢量路由协议</td><td align="center">520&#x2F;521</td></tr><tr><td align="center">OSPF</td><td align="center">开放最短路径优先</td><td align="center">89</td></tr><tr><td align="center">IS-IS</td><td align="center">中间系统到中间系统协议</td><td align="center">124</td></tr><tr><td align="center">EGP</td><td align="center">外部网关路由协议</td><td align="center">8</td></tr><tr><td align="center">VRRP</td><td align="center">虚拟路由冗余协议</td><td align="center">112</td></tr><tr><td align="center">IGRP</td><td align="center">动态距离矢量路由协议</td><td align="center">9</td></tr><tr><td align="center">EIGRP</td><td align="center">增强IGRP路由协议</td><td align="center">88</td></tr></tbody></table></li></ul><h2 id="6-TPC序列号及确认号"><a href="#6-TPC序列号及确认号" class="headerlink" title="6.TPC序列号及确认号"></a>6.TPC序列号及确认号</h2><p>  <img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/TCP%E5%BA%8F%E5%88%97%E5%8F%B7%E5%8F%8A%E7%A1%AE%E8%AE%A4%E5%8F%B7.png" alt="TCP序列号及确认号"></p><h2 id="7-TCP三次握手建立连接"><a href="#7-TCP三次握手建立连接" class="headerlink" title="7.TCP三次握手建立连接"></a>7.TCP三次握手建立连接</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5.png" alt="TCP三次握手建立连接"></p><h2 id="8-TCP四次握手断开连接"><a href="#8-TCP四次握手断开连接" class="headerlink" title="8.TCP四次握手断开连接"></a>8.TCP四次握手断开连接</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/TPC%E5%9B%9B%E6%AC%A1%E6%8F%A1%E6%89%8B%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5.png" alt="TPC四次握手断开连接"></p><h2 id="9-TCP窗口机制"><a href="#9-TCP窗口机制" class="headerlink" title="9.TCP窗口机制"></a>9.TCP窗口机制</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E5%9F%BA%E7%A1%80%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/TCP%E7%AA%97%E5%8F%A3%E6%9C%BA%E5%88%B6.png" alt="TCP窗口机制"></p>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.传输介质</title>
      <link href="/posts/40681.html"/>
      <url>/posts/40681.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-传输介质"><a href="#Ⅰ-传输介质" class="headerlink" title="Ⅰ - 传输介质"></a>Ⅰ - 传输介质</h1><h2 id="1-双绞线和光纤"><a href="#1-双绞线和光纤" class="headerlink" title="1.双绞线和光纤"></a>1.双绞线和光纤</h2><ul><li><p>双绞线：</p><p>八根铜线每两根扭在一起，百兆用4根，千兆必须用8根，分为直通线&#x2F;交叉线，屏蔽&#x2F;非屏蔽双绞线。</p></li><li><p>光纤：</p><p>利用光在<strong>玻璃或塑料纤维</strong>中的<strong>全反射原理</strong>而达成的光传导工具。</p><ul><li><p>光传传导比电缆传导的损耗低很多，所以光纤适合用于长距离的信息传递。</p></li><li><p>光纤特点：重量轻、体积小、传输距离远、容量大、抗电磁干扰。</p><bsp/></li></ul></li></ul><h2 id="2-光纤分类"><a href="#2-光纤分类" class="headerlink" title="2.光纤分类"></a>2.光纤分类</h2><ul><li><p>单模光纤：</p><ul><li><p>纤芯尺寸一般为5~10um。</p></li><li><p>光纤只允许<strong>一种模式在其中传播</strong>，单模光纤带宽极高，适合用于<strong>大容量、长距离的光纤通信</strong>，但是<strong>价格昂贵</strong>。</p><bsp/></li></ul></li><li><p>多模光纤：</p><ul><li><p>纤芯尺寸一般为50um、62.5um，允许多种模式光信号传播。</p></li><li><p>多模光纤仅用于<strong>较小容量、短距离的光纤传输通信</strong>，<strong>价格低廉</strong>。</p><bsp/></li></ul></li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E4%BC%A0%E8%BE%93%E4%BB%8B%E8%B4%A8/%E5%8D%95%E6%A8%A1%E5%A4%9A%E6%A8%A1%E5%85%89%E7%BA%A4%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="单模多模光纤示意图"></p><h2 id="3-多模单模参数对比"><a href="#3-多模单模参数对比" class="headerlink" title="3.多模单模参数对比"></a>3.多模单模参数对比</h2><table><thead><tr><th align="center">标识</th><th align="center">SX</th><th align="center">LX</th><th align="center">LH&#x2F;ZX</th></tr></thead><tbody><tr><td align="center">波长</td><td align="center">短波850nm</td><td align="center">长波1310nm</td><td align="center">超长波1550nm</td></tr><tr><td align="center">距离</td><td align="center">220-550m</td><td align="center">10km</td><td align="center">10-120km</td></tr><tr><td align="center">模态</td><td align="center">多模</td><td align="center">单模</td><td align="center">单模</td></tr><tr><td align="center">颜色</td><td align="center">橘黄</td><td align="center">黄</td><td align="center">黄</td></tr><tr><td align="center">光源</td><td align="center"><strong>发光二极管</strong></td><td align="center"><strong>激光二极管</strong></td><td align="center"><strong>激光二极管</strong></td></tr></tbody></table><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E4%BC%A0%E8%BE%93%E4%BB%8B%E8%B4%A8/%E5%8D%95%E6%A8%A1%E5%85%89%E7%BA%A4%E5%92%8C%E5%A4%9A%E6%A8%A1%E5%85%89%E7%BA%A4%E5%AE%9E%E7%89%A9.png" alt="单模光纤和多模光纤实物"></p>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.数据通信基础</title>
      <link href="/posts/1854.html"/>
      <url>/posts/1854.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-通信指标"><a href="#Ⅰ-通信指标" class="headerlink" title="Ⅰ - 通信指标"></a>Ⅰ - 通信指标</h1><h2 id="1-通信基础概念"><a href="#1-通信基础概念" class="headerlink" title="1.通信基础概念"></a>1.通信基础概念</h2><ul><li><p>通信的实质就是实现信息的有效传递，它不仅要将有用的信息进行<strong>无失真、高效率的传输</strong>，而且还要在传输的过程中<strong>减少或消除无用信息和有害信息</strong>。</p></li><li><p>数据和信号：</p><p>数据是运送<strong>信息的实体</strong>，而信号则是数据的<strong>电器的或电磁的表现</strong>。无论数据或信号，既可以是模拟的也可以是数字的。所谓“模拟的”就是连续变化的，而“数字的”就表示取值仅允许为有限的几个离散数值。</p></li><li><p>信道：</p><p>信道一般用来表示向某一个方向传送信息的媒体，从通信的双方信息交互的方式看，可以有三种方式： </p><ul><li><p><strong>单工通信：</strong></p><p>只有一个方向的通信而没有反方向的交互，仅需要一条信道（如无线电广播、电视广播）。</p></li><li><p><strong>半双工通信：</strong></p><p>通信的双方都可以发送消息，但不能同时发送（如集线器）。</p></li><li><p><strong>全双工通信：</strong><br>通信的双方都可以同时发送和接收信息，通常需要两条信道，（如交换机）。</p></li></ul></li><li><p>码元：</p><p>数字通信中对数字信号的计量单位采用码元这个概念。一个码元指的是一个固定时常的数字信号波形，该时长称为码元宽度。</p></li><li><p>传输速率：</p><ul><li><p>码元传输速率：</p><p>也叫码元速率、符号速率、波形速率等，他表示<strong>单位时间内数字通信系统所传输的码元个数</strong>（符号个数或脉冲个数），单位是波特（Baud）。</p></li><li><p>数据传输速率：</p><p>表示<strong>单位时间内数字通信系统传输的二进制码元个数</strong>，单位是bit&#x2F;s</p></li></ul></li><li><p>抖动：</p><p>指在噪声因素的影响下，数字信号的有效瞬间相对于应生成理想时间位置的短时偏离，是数字通信系统中数字信号传输的一种<strong>不稳定现象</strong>。</p></li></ul><h2 id="2-网络传输指标"><a href="#2-网络传输指标" class="headerlink" title="2.网络传输指标"></a>2.网络传输指标</h2><ul><li><p>传输指标：对网络的<strong>效率和性能进行衡量</strong>。</p></li><li><p>带宽：</p><p>指的是在<strong>一段特定的时间内网络所能传送的比特数</strong>，单位是bit&#x2F;s。</p></li><li><p>时延：</p><p>时延指的是一个报文或者分组从一个网络一端传到另一段所需的时间。</p><ul><li><p><strong>发送时延</strong> &#x3D; 报文长度&#x2F;信道带宽</p></li><li><p><strong>传播时延</strong> &#x3D; 信道长度&#x2F;信道传播速率</p></li><li><p><strong>处理时延</strong> &#x3D; 数据在交换节点上为储存转发而进行一些必要的处理所花费的时间，有时可以忽略。</p></li><li><p><strong>总时延 &#x3D; 发送时延 + 传播时延 + 处理时延</strong></p></li><li><p><strong>RTT(Round-Trip Time，往返时延)</strong> 也是一个重要的性能指标，它表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时延（参考Ping命令）。</p></li></ul></li><li><p>时延带宽积：</p><p>时延带宽积 &#x3D; 传播时延 * 带宽，相当于第一个比特到达接收方之前，发送方最多发送的比特数。</p></li><li><p>误码率&#x2F;误位率：</p><p>指在一定统计时间内，数字信号在传输过程中发生错误的码元&#x2F;位数与传输的总码元&#x2F;总位数之比，一般网络要求误码率低于10^-6。</p></li></ul><h2 id="3-数据损害"><a href="#3-数据损害" class="headerlink" title="3.数据损害"></a>3.数据损害</h2><ul><li><p>传输损害：常见的损害有衰减、延迟变形、噪声。</p></li><li><p>衰减：</p><p>在任何传输介质上的信号强度<strong>随着距离的变长而衰减</strong>。</p></li><li><p>延迟变形：</p><p>延迟变形是有线传输介质独有的现象，它是由传播速率随着频率而变化所引起的，<strong>延迟变形对数字信号的影响最大</strong>。</p></li><li><p>噪声：</p><p>因传输系统造成的各种失真，以及突然产生了不必要的信号而产生了噪声，噪声可分为以下四种。</p><ul><li><p><strong>热噪声：</strong>是导体中电子的热震动引起的，它出现在所有的电子设备和传输介质中。</p></li><li><p><strong>内调制杂音：</strong>是当不同频率的信号同时通过一个传输介质时产生。</p></li><li><p><strong>串扰：</strong> 信号通路之间产生了不必要的耦合，例如双绞线之间因电耦合而产生的串扰，也有可能会在运载多个型号的同轴电缆中产生。</p></li><li><p><strong>脉冲噪声：</strong>因意外产生的电磁干扰，如打雷，<strong>主要影响的是数字信号</strong>。</p></li></ul></li></ul><h1 id="Ⅱ-数据编码"><a href="#Ⅱ-数据编码" class="headerlink" title="Ⅱ - 数据编码"></a>Ⅱ - 数据编码</h1><h2 id="1-数字通信系统"><a href="#1-数字通信系统" class="headerlink" title="1.数字通信系统"></a>1.数字通信系统</h2><ul><li><p>数字通信系统完成信号的<strong>产生、变换、传递及接收</strong>。</p></li><li><p>信源编码：</p><p>把语音、文字、图像等<strong>模拟信号转换为数字信号</strong>及模数转换。</p></li><li><p>信道编码：</p><p>将数字信号转换成与调制方式和传输信道匹配的形式，从而<strong>降低传输误码率，提高传输的可靠性</strong>。</p></li><li><p>调制：</p><p>根据<strong>信道媒质特性</strong>，对编码后的数字信号还要经调制后再送入信道中，如光纤信道中的光调制，无线信道中的<strong>调频、调相、调幅</strong>等。</p></li><li><p>解调、信道解码和信源解码分别是调制、信道编码和信源编码的逆过程。</p></li></ul><h2 id="2-非归零码-NRZ-I"><a href="#2-非归零码-NRZ-I" class="headerlink" title="2.非归零码 NRZ-I"></a>2.非归零码 NRZ-I</h2><ul><li><p>不归零码（Non-Return to Zero Inverted，NRZ-I）又称差分码。</p></li><li><p>规则:</p><p>出现<code>1</code>时翻转电平，出现<code>0</code>时电平不变。</p></li><li><p>主要用在终端到调制解调器的接口中。</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/NRZ-I.png" alt="NRZ-I"></p></li></ul><h2 id="3-MLT-3编码"><a href="#3-MLT-3编码" class="headerlink" title="3.MLT-3编码"></a>3.MLT-3编码</h2><ul><li><p>多电平传输码（Multi-Level Transmit -3，MLT-3）。</p></li><li><p>规则：</p><ul><li><p>如果下一输出为<code>0</code>，则电平保持不变。</p></li><li><p>如果下一输出为<code>1</code>，则产生跳变，但又分为两种情况。</p></li></ul><blockquote><p>（A）如果前一输出为<code>+1</code>或<code>-1</code>，则下一输出为<code>0</code>。</p><p>（B）如果前一输出为<code>0</code>，则下一输出与最近一个非<code>0</code>相反。</p></blockquote></li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/MLT-3.png" alt="MLT-3"></p><h2 id="4-曼彻斯特编码"><a href="#4-曼彻斯特编码" class="headerlink" title="4.曼彻斯特编码"></a>4.曼彻斯特编码</h2><ul><li><p>曼切斯特编码是一种双向码，在每个比特中间均有一个跳变，第一个编码自定义。</p></li><li><p>规则：</p><p>高 -&gt; 低 代表<code>0</code>，低 -&gt; 高 代表<code>1</code>。</p></li><li><p>曼切斯特编码常用于以太网中。</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/%E6%9B%BC%E5%BD%BB%E6%96%AF%E7%89%B9%E7%BC%96%E7%A0%81.png" alt="曼彻斯特编码"></p></li></ul><h2 id="5-差分曼切斯特编码"><a href="#5-差分曼切斯特编码" class="headerlink" title="5.差分曼切斯特编码"></a>5.差分曼切斯特编码</h2><ul><li><p>差分曼切斯特编码也是一种双向码。</p></li><li><p>规则：</p><p>有跳变表示<code>0</code>，无跳变表示<code>1</code><strong>（有0无1）</strong>。</p></li><li><p>不是比较形状，是比较的始末电平，下一个起始电平与上一个终止电平一样表示<code>1</code>，有变化表示<code>0</code>。</p></li><li><p>根据波形，从第二个电平开始推断。</p></li><li><p>常用于<strong>令牌环网</strong>中。</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/%E5%B7%AE%E5%88%86%E6%9B%BC%E5%BD%BB%E6%96%AF%E7%89%B9%E7%BC%96%E7%A0%81.png" alt="差分曼彻斯特编码"></p></li></ul><h2 id="6-两种曼码特点与编码效率"><a href="#6-两种曼码特点与编码效率" class="headerlink" title="6.两种曼码特点与编码效率"></a>6.两种曼码特点与编码效率</h2><ul><li><p>优点：</p><p>将时钟包含在信号数据流中，也称为<strong>自同步码</strong>。</p></li><li><p>缺点：</p><p>编码效率低，每个码元都要调制为两个不同的电平，所以调制速率是码元速率的两倍，这对信道的贷款提出了更高的要求。</p></li><li><p>4B&#x2F;5B编码：</p></li><li><p>发送4bit，先用不归零码（NRZ-I），编码成5bit，多一位解决同步问题。</p><table><thead><tr><th align="center">编码类型</th><th align="center">编码效率</th><th align="center">应用场景</th></tr></thead><tbody><tr><td align="center">曼彻斯特</td><td align="center">50%</td><td align="center">以太网</td></tr><tr><td align="center">差分曼彻斯特</td><td align="center">50%</td><td align="center">令牌环</td></tr><tr><td align="center">4B&#x2F;5B</td><td align="center">80%</td><td align="center">百兆以太网<br />（100Base-TX先4B&#x2F;5B再MLT-3）</td></tr><tr><td align="center">8B&#x2F;10B</td><td align="center">80%</td><td align="center">千兆以太网</td></tr><tr><td align="center">64B&#x2F;66B</td><td align="center">97%</td><td align="center">万兆以太网</td></tr></tbody></table></li></ul><h1 id="Ⅲ-调制技术"><a href="#Ⅲ-调制技术" class="headerlink" title="Ⅲ.调制技术"></a>Ⅲ.调制技术</h1><h2 id="1-数字调制技术"><a href="#1-数字调制技术" class="headerlink" title="1.数字调制技术"></a>1.数字调制技术</h2><ul><li><p>将数字信号转换为模拟信号或是把模拟信号转换为更高频率，适合天线发送的模拟信号，称为调制，分为以下四种：</p><ul><li><p>幅度键控（ASK）</p><blockquote><p>特点：高低</p></blockquote><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/ASK.png" alt="ASK"></p></li><li><p>频移键控（FSK）</p><blockquote><p>特点：快慢</p></blockquote><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/FSK.png" alt="FSK"></p></li><li><p>相移键控（PSK）</p><blockquote><p>特点：形状像ASS</p></blockquote><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/PSK.png" alt="PSK"></p></li><li><p>正交幅度调制（QAM）</p><blockquote><p>特点：把两个<strong>幅度相同</strong>但<strong>相位差90°</strong>的模拟信号合成一个模拟信号。</p></blockquote><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/QAM.png" alt="QAM"></p></li></ul></li></ul><h2 id="2-扩频通信"><a href="#2-扩频通信" class="headerlink" title="2.扩频通信"></a>2.扩频通信</h2><ul><li><p>为了提高通信系统的<strong>抗干扰性能</strong>，往往需要从调制和编码多方面入手，扩频通信就是方法之一。</p></li><li><p>扩频通信利用了<strong>扩展频谱技术</strong>，在接收端对干扰频谱能量加以扩展，对信号频谱能量压缩集中，因此在输出端就得到了信噪比的增益。</p></li><li><p>有如下几个技术：</p><ul><li><p>直接序列扩频</p></li><li><p>跳频 </p></li><li><p>跳时</p></li><li><p>线性调频扩频</p></li></ul></li><li><p>WLAN使用的技术是<strong>直接序列扩频和跳频扩频</strong>技术。</p></li></ul><h1 id="Ⅳ-信道延迟"><a href="#Ⅳ-信道延迟" class="headerlink" title="Ⅳ - 信道延迟"></a>Ⅳ - 信道延迟</h1><h2 id="1-信道延时"><a href="#1-信道延时" class="headerlink" title="1.信道延时"></a>1.信道延时</h2><ul><li><p>总延时 &#x3D; 线路延迟 + 发送延迟</p></li><li><p>线路延迟 &#x3D; 传输距离&#x2F;传输速度</p></li><li><p>发送延迟 &#x3D; 数据帧大小&#x2F;速率</p></li><li><p>光速为300m&#x2F;us &#x3D; 300000km&#x2F;s</p></li><li><p>电缆中的传播速度为光速的77%，为200m&#x2F;us &#x3D; 200000km&#x2F;s</p></li><li><p>卫星的信道时延约270ms（来回双向）</p><bsp/></li></ul><h2 id="2-以太网报文封装"><a href="#2-以太网报文封装" class="headerlink" title="2.以太网报文封装"></a>2.以太网报文封装</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/%E4%BB%A5%E5%A4%AA%E7%BD%91%E6%8A%A5%E6%96%87%E5%B0%81%E8%A3%85.png" alt="以太网报文封装"></p><h1 id="Ⅴ-交换方式"><a href="#Ⅴ-交换方式" class="headerlink" title="Ⅴ - 交换方式"></a>Ⅴ - 交换方式</h1><h2 id="1-数据交换分类"><a href="#1-数据交换分类" class="headerlink" title="1.数据交换分类"></a>1.数据交换分类</h2><ul><li><p>按通信方向分类可分为单工通信、半双工通信、全双工通信。</p></li><li><p>按同步方式分类可分为：</p><ul><li><p>异步传输：</p><p>把各个字符分开传输，在字符之前插入一个起始位<code>0</code>，在字符之后插入一位停止位<code>1</code>，起始位对接收方的时钟起置位作用，在字符和停止位之间还要插入一位校验位，一般使用奇偶校验，典型的例子为ATM。</p></li><li><p>同步传输：</p><p>传输数据帧（比特分组）要大得多，不是独立发送每个字符，而是把他们组合起来一起发送，这种组合称之为数据帧，数据帧的第一部分包含同步字符，用于通知接收方一个帧已经达到。帧的最后一部分是一个帧结束标记，典型的例子为HDLC。</p></li></ul></li></ul><h2 id="2-交换方式"><a href="#2-交换方式" class="headerlink" title="2.交换方式"></a>2.交换方式</h2><ul><li><p>数据交换技术分为电路交换、报文交换、分组交换三种。</p></li><li><p>电路交换：</p><p>将数据分为电路建立、数据传输、电路拆除3个过程，在数据传送之前需建立一条物理链路，在线路被释放之前，该通路将一直被用户完全占有（电话）。</p></li><li><p>报文交换：</p><p>报文从发送方传送到接收方采用储存转发的方式，报文中含有每一个小一跳节点，完整的报文在一个个节点之间传送。</p></li><li><p>分组交换又分为两种方式，分别是数据包和虚电路。</p></li></ul><h2 id="3-分组交换技术"><a href="#3-分组交换技术" class="headerlink" title="3.分组交换技术"></a>3.分组交换技术</h2><ul><li><p>数据报方式（IP）：</p><p>每个分组被独立地处理，每个节点根据一个路由选择算法，为每个分组选择一条路径，使他们的目的地相同。</p></li><li><p>虚电路方式（X.25、FR、ATM）：</p><p>在数据传送之前，先建立起一条逻辑上的连接，每个分组都沿着一条路径传输。</p></li><li><p>分组交换的优点：</p><ul><li><p>减小了延迟，提高了吞吐量</p></li><li><p>分组交换可以按分组纠错，发现错误只需要发出错的分组，通信效率高。</p></li></ul></li></ul><h1 id="Ⅵ-复用技术"><a href="#Ⅵ-复用技术" class="headerlink" title="Ⅵ - 复用技术"></a>Ⅵ - 复用技术</h1><h2 id="1-多路复用技术"><a href="#1-多路复用技术" class="headerlink" title="1.多路复用技术"></a>1.多路复用技术</h2><ul><li><p>多路复用技术是<strong>把多个低速的信道组合成一个高速的信道的技术</strong>。</p></li><li><p>比如光纤入户后可以同时上网、网络电视、电话。</p></li></ul><h2 id="2-频分复用技术"><a href="#2-频分复用技术" class="headerlink" title="2.频分复用技术"></a>2.频分复用技术</h2><ul><li><p>频分复用技术是<strong>为用户分配不同的频带</strong>，用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。频分复用的所有用户在同样的时间占用不同的带宽资源（这里的“带宽”是频率带宽而不是数据的发送速率）向外发送数据。</p><bsp/></li></ul><h2 id="3-时分复用技术"><a href="#3-时分复用技术" class="headerlink" title="3.时分复用技术"></a>3.时分复用技术</h2><ul><li><p>时分复用是采用同一物理连接的不同时段来传输不同的信号，也能达到多路传输的目的。</p><bsp/></li></ul><h2 id="4-波分复用"><a href="#4-波分复用" class="headerlink" title="4.波分复用"></a>4.波分复用</h2><ul><li><p>波分复用的本质也是频分复用。</p><bsp/></li><li><p>光纤频率与波长关系：光速 &#x3D; 波长 x 频率。</p><bsp/></li></ul><h2 id="5-统计时分复用"><a href="#5-统计时分复用" class="headerlink" title="5.统计时分复用"></a>5.统计时分复用</h2><ul><li><p>统计时分多路复用（Statistic TDM，STDM）是一种<strong>改进的时分复用方法</strong>，他能明显地<strong>提高信道的利用率</strong>。</p><bsp/></li><li><p>STDM帧<strong>不是固定分配时隙，而是按需动态地分配时隙</strong>。由于用户所占用的时隙并不是周期性地出现，所以在每个时隙中还必须又用户地地址信息，这是统计时分多路复用必须要有的和不可避免地开销。</p><bsp/></li></ul><h2 id="6-E1-与-T1"><a href="#6-E1-与-T1" class="headerlink" title="6.E1 与 T1"></a>6.E1 与 T1</h2><ul><li><p>美国和日本使用T1标准，每路电话56k</p><bsp/></li></ul><blockquote><p>T1 &#x3D; 56K * <strong>24</strong> + 开销与间隔 &#x3D; <strong>1.544M</strong></p></blockquote><ul><li><p>欧洲采用E1标准，每路电话64K，传30路电话，2路开销。</p><bsp/></li></ul><blockquote><p>E1 &#x3D; 64 * <strong>30</strong> + 64K * 2 &#x3D; <strong>2.048M</strong></p></blockquote><h2 id="7-同步数字序列"><a href="#7-同步数字序列" class="headerlink" title="7.同步数字序列"></a>7.同步数字序列</h2><table><thead><tr><th align="center">光纤级</th><th align="center">STS级</th><th align="center">链路速Mbps</th><th align="center">有效载荷Mbps</th><th align="center">负载Mbps</th><th align="center">SDH对应</th><th align="center">常用近似值</th></tr></thead><tbody><tr><td align="center">OC - 1</td><td align="center">STS - 1</td><td align="center">51.840</td><td align="center">50.112</td><td align="center">1.728</td><td align="center">—</td><td align="center"></td></tr><tr><td align="center"><strong>OC - 3</strong></td><td align="center">STS - 3</td><td align="center">155.520</td><td align="center">150.336</td><td align="center">5.184</td><td align="center"><strong>STM-1</strong></td><td align="center"><strong>155Mbps</strong></td></tr><tr><td align="center">OC - 9</td><td align="center">STS - 9</td><td align="center">466.560</td><td align="center">451.008</td><td align="center">15.552</td><td align="center">STM-3</td><td align="center"></td></tr><tr><td align="center">OC - 12</td><td align="center">STS - 12</td><td align="center">622.080</td><td align="center">601.344</td><td align="center">20.736</td><td align="center">STM-4</td><td align="center"><strong>622Mbps</strong></td></tr><tr><td align="center">OC - 18</td><td align="center">STS - 18</td><td align="center">933.120</td><td align="center">902.016</td><td align="center">31.104</td><td align="center">STM-6</td><td align="center"></td></tr><tr><td align="center">OC - 24</td><td align="center">STS - 24</td><td align="center">1244.160</td><td align="center">1202.688</td><td align="center">41.472</td><td align="center">STM-8</td><td align="center"></td></tr><tr><td align="center">OC - 36</td><td align="center">STS - 36</td><td align="center">1866.240</td><td align="center">1804.032</td><td align="center">62.208</td><td align="center">STM-13</td><td align="center"></td></tr><tr><td align="center">OC - 48</td><td align="center">STS - 48</td><td align="center">2488.320</td><td align="center">2405.376</td><td align="center">82.944</td><td align="center">STM-16</td><td align="center"><strong>2.5Gbps</strong></td></tr><tr><td align="center">OC - 96</td><td align="center">STS - 96</td><td align="center">4976.640</td><td align="center">4810.752</td><td align="center">165.888</td><td align="center">STM-32</td><td align="center"></td></tr><tr><td align="center">OC - 192</td><td align="center">STS - 192</td><td align="center">9953.280</td><td align="center">9621.504</td><td align="center">331.776</td><td align="center">STM-64</td><td align="center"><strong>10Gbps</strong></td></tr></tbody></table><h1 id="Ⅶ-奇偶校验"><a href="#Ⅶ-奇偶校验" class="headerlink" title="Ⅶ - 奇偶校验"></a>Ⅶ - 奇偶校验</h1><h2 id="1-差错控制"><a href="#1-差错控制" class="headerlink" title="1.差错控制"></a>1.差错控制</h2><ul><li><p>数据传输中错误不可避免，需要采用差错控制方法，数据通信中常用的<strong>是检错和纠错。</strong></p></li><li><p>奇偶校验的原理是在7位ASCII码后添一位，使<code>1</code>的个数变为奇数或偶数，从而进行奇校验或偶校验。</p></li><li><p>奇校验：</p><p>如果现有<code>1</code>的个数为偶数，那么补一个<code>1</code>让总数变为奇数。</p></li><li><p>偶校验：</p><p>如果现有<code>1</code>的个数为奇数，那么补一个<code>1</code>让总数变为偶数。</p></li></ul><h1 id="Ⅷ-循环冗余校验码CRC"><a href="#Ⅷ-循环冗余校验码CRC" class="headerlink" title="Ⅷ - 循环冗余校验码CRC"></a>Ⅷ - 循环冗余校验码CRC</h1><ul><li><p>末尾加入CRC循环冗余校验码能<strong>检错不能纠错</strong>，广泛用于网络通信和磁盘存储。</p><bsp/></li></ul><p><strong>例题：</strong></p><p>采用CRC进行差错校验，生成多项式为G(X) &#x3D; X^4 + X + 1，信息码字为10111，则计算出CRC校验码是（  ）。</p><p>A：0000B：0100C：0010D：1100</p><p><strong>解题步骤：</strong></p><ul><li><p>1 - 判断校验位数：</p><p>生成多项式的最高次方是几，校验位就是几，根据此题可知有4位检验为。</p></li><li><p>2 - 补齐数据位后面的0：</p><p>10111 <strong>0000</strong></p></li><li><p>3 - 提取生成多项式的系数：</p><p>G(X) &#x3D; X^4 + X + 1 &#x3D; <u>1</u> * X^4 + <u>0</u> * X^3 + <u>0</u> * X^2 + <u>1</u> * X^1 + <u>1</u> * X^0 &#x3D; 10011</p></li><li><p>4 - 用第二步的结果，除以第三步的结果（异或运算）所得余数就是CRC校验码，余数不够位在前面补<code>0</code>。</p></li></ul><h1 id="Ⅸ-选择重发ARQ"><a href="#Ⅸ-选择重发ARQ" class="headerlink" title="Ⅸ - 选择重发ARQ"></a>Ⅸ - 选择重发ARQ</h1><h2 id="1-检错重发ARQ"><a href="#1-检错重发ARQ" class="headerlink" title="1.检错重发ARQ"></a>1.检错重发ARQ</h2><ul><li><p>发送端经信道编码后可以发出具有检错能力的码组，接收端收到后经检测如果发现传输中有错误，则经过反馈信道把这一判断结果反馈给发送方，然后发送端把前面发出的信息重新传送一次，知道接收端认为已经正确为止。</p></li><li><p>常用的检错重发系统有<strong>停等重发、返回重发、选择重发</strong>三种，依赖自动重传ARQ协议（Automatic Repeat Request）。</p></li><li><p><strong>停等ARQ：</strong></p><p>发送端向接收端发送一个码组，接收端如果未发现错误则发送一个ACK确认信号给发送端，发送端接收到ACK后再发送下一个码组；如果接收端检测出错误，则发送NAK否认信号，发送端接收到NAK后再重发前一个码组，并再次等待ACK或NAK，这种方法<strong>效率不高但工作方式简单</strong>。</p></li><li><p><strong>后退N帧ARQ：</strong></p><p>发送端不断送出码组，不再等待ACK信号，一旦接收端发现错误并发送NAK，则发送端开始<strong>重发检测出错误的码组以及该错误码组之后的码组</strong>。</p></li><li><p><strong>选择重发ARQ：</strong></p><p>发送端不断送出码组，接收端发现错误发送NAK信号，发送端<strong>只重发有错误的那一组</strong>，这种重发系统<strong>传输效率最高，但控制最复杂</strong>，通常卫星采用此方式来检错重发。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.网络模型与体系结构</title>
      <link href="/posts/1393.html"/>
      <url>/posts/1393.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-OSI七层模型"><a href="#Ⅰ-OSI七层模型" class="headerlink" title="Ⅰ - OSI七层模型"></a>Ⅰ - OSI七层模型</h1><h2 id="1-为什么要进行网络分层"><a href="#1-为什么要进行网络分层" class="headerlink" title="1.为什么要进行网络分层"></a>1.为什么要进行网络分层</h2><ul><li><p>早期计算机：</p><p>封闭系统，所有部件同一厂商。</p><ul><li><p>优点：</p><p>安全性高，性能强。</p></li><li><p>缺点：</p><p>兼容性差，更新周期慢。</p></li></ul></li><li><p>像现在的计算机：</p><p>兼容机，软硬分离，各司其职。</p></li></ul><h2 id="2-OSI参考模型：CPU-x2F-内存-x2F-硬盘-x2F-显卡-x2F-主板等标准化"><a href="#2-OSI参考模型：CPU-x2F-内存-x2F-硬盘-x2F-显卡-x2F-主板等标准化" class="headerlink" title="2.OSI参考模型：CPU&#x2F;内存&#x2F;硬盘&#x2F;显卡&#x2F;主板等标准化"></a>2.OSI参考模型：CPU&#x2F;内存&#x2F;硬盘&#x2F;显卡&#x2F;主板等标准化</h2><ul><li><p>将网络的通信过程划分为小一些、简单一些的不见，有助于各个部件的<strong>开发、设计、故障排除</strong>。</p></li><li><p>通过网络组件的标准，允许多个供应商进行开发。</p></li><li><p>通过定义在模型的每一层实现功能，鼓励<strong>产业的标准化</strong>。</p></li><li><p>允许各种类型的网络硬件和软件互相通信。</p></li><li><p>防止对某一层所做的改动影响到其他的层，这样<strong>有利于开发</strong>。</p><bsp/></li></ul><h2 id="3-OSI参考模型"><a href="#3-OSI参考模型" class="headerlink" title="3.OSI参考模型"></a>3.OSI参考模型</h2><table><thead><tr><th align="center">OSI七层模型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">应用层（Application）</td><td align="center">各种应用程序、协议</td></tr><tr><td align="center">表示层（Presentation）</td><td align="center">数据和信息的语法转换内码，数据压缩解压、加密解密</td></tr><tr><td align="center">会话层（Session）</td><td align="center">为通信双方指定通信方式，并创建、注销会话</td></tr><tr><td align="center">汇聚层（Transport Layer）</td><td align="center">提供可靠或者不可靠的端到端传输</td></tr><tr><td align="center">网络层（Network Layer）</td><td align="center">逻辑寻址、路由选择</td></tr><tr><td align="center">数据链路层（Data Link）</td><td align="center">将分组封装成帧、提供节点到节点的传输、差错控制</td></tr><tr><td align="center">物理层（Physical）</td><td align="center">在媒介上传输比特流、提供机械和电器规约</td></tr></tbody></table><ul><li><p>OSI模型每层都有自己的功能集。</p></li><li><p>层与层之间相互独立又相互依靠。</p></li><li><p>上层依赖于下层，下层为上层提供服务。</p><bsp/></li></ul><h2 id="3-物理层"><a href="#3-物理层" class="headerlink" title="3.物理层"></a>3.物理层</h2><ul><li><p>物理层标准规定了信号、连接器和电缆要求。</p></li><li><p>接口及连接器：</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E6%8E%A5%E5%8F%A3%E5%8F%8A%E8%BF%9E%E6%8E%A5%E5%99%A8.png" alt="接口及连接器"></p></li><li><p>光纤接头：</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E5%85%89%E7%BA%A4%E6%8E%A5%E5%A4%B4.png" alt="光纤接头"></p></li><li><p>双绞线线序：</p></li></ul><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E5%8F%8C%E7%BB%9E%E7%BA%BF%E7%BA%BF%E5%BA%8F.png" alt="双绞线线序"></p><h1 id="Ⅱ-TCP-x2F-IP模型"><a href="#Ⅱ-TCP-x2F-IP模型" class="headerlink" title="Ⅱ - TCP&#x2F;IP模型"></a>Ⅱ - TCP&#x2F;IP模型</h1><h2 id="1-TCP-x2F-IP协议簇"><a href="#1-TCP-x2F-IP协议簇" class="headerlink" title="1.TCP&#x2F;IP协议簇"></a>1.TCP&#x2F;IP协议簇</h2><ul><li><p><strong>传输控制协议&#x2F;因特网协议（TCP&#x2F;IP）</strong>协议簇是由美国国防部（DoD）所创建的，主要用来确保数据的完整性及在毁灭性战争中维持通信。</p></li><li><p>是由一组不同功能的协议组合在一起构成的协议簇。</p></li><li><p>TCP&#x2F;IP是当今数据网络的基础。</p><bsp/></li></ul><h2 id="2-TCP-x2F-IP参考模型"><a href="#2-TCP-x2F-IP参考模型" class="headerlink" title="2.TCP&#x2F;IP参考模型"></a>2.TCP&#x2F;IP参考模型</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/TCP-IP%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.png" alt="TCP-IP参考模型"></p><ul><li><p>应用层：</p><p>对应OSI参考模型的高层，为用户提供所需要的各种服务器，例如：FTP、Telnet、DNS、SMTP等。</p></li><li><p>传输层：</p><p>为应用实体提供端到端的通信功能。</p></li><li><p>网络层：</p><p>定义逻辑地址，路由选择（路由和寻址）。</p></li><li><p>数据链路层：</p><p>将分组数据封装成帧，提供节点到节点的传输。</p></li><li><p>物理层：</p><p>在媒介上传输比特流，提供机械和电气规约。</p></li></ul><h2 id="3-OSI-amp-TCP-x2F-IP-amp-协议层次"><a href="#3-OSI-amp-TCP-x2F-IP-amp-协议层次" class="headerlink" title="3.OSI&amp;TCP&#x2F;IP&amp;协议层次"></a>3.OSI&amp;TCP&#x2F;IP&amp;协议层次</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/OSI&TCP-IP&%E5%8D%8F%E8%AE%AE%E5%B1%82%E6%AC%A1.png" alt="OSI&amp;TCP-IP&amp;协议层次"></p><h1 id="Ⅲ-协议端口号-x2F-特殊IP和MAC"><a href="#Ⅲ-协议端口号-x2F-特殊IP和MAC" class="headerlink" title="Ⅲ - 协议端口号&#x2F;特殊IP和MAC"></a>Ⅲ - 协议端口号&#x2F;特殊IP和MAC</h1><h2 id="1-特殊IP地址"><a href="#1-特殊IP地址" class="headerlink" title="1.特殊IP地址"></a>1.特殊IP地址</h2><ul><li><p><strong>0.0.0.0：</strong></p><p>计算机的世界里面，没有表示为0。</p></li><li><p><strong>255.255.255.255：</strong></p><p>受限广播地址，表示3层广播的目标地址，在同一个广播域范围内所有主<br>机都会接收这个包，广播域的范围可变，跟子网划分相关。</p></li><li><p><strong>169.254.0.0&#x2F;16：</strong></p><p>使用DHCP自动获取IP地址，当DHCP服务器发生故障，或响应时间超时，<br>系统会为你分配这样一个地址，不能正常上网。</p></li><li><p><strong>127.0.0.0&#x2F;8 （127.0.0.1-127.255.255.255）：</strong></p><p>本地环回地址，主要用于测试或网络管理&#x2F;路由更新，比物理接口稳定。</p></li><li><p><strong>RFC1918私有IP地址：</strong></p><p>IPv4地址空间中有一部分特殊的地址，成为私有IP地址，私有IP地址<br>不能直接访问公网（Internet）的IP，只能在本地使用。</p><ul><li><p>A类：10.0.0.0&#x2F;8 （10.0.0.1-10.255.255.255） 1个A类地址</p></li><li><p>B类：172.16.0.0&#x2F;12（172.16.0.1-172.31.255.255）16个B类</p></li><li><p>C类：192.168.0.0&#x2F;16（192.168.0.1-192.168.255.255） 256个C</p><bsp/></li></ul></li><li><p><strong>常见组播:</strong></p><ul><li><p>224.0.0.1 所有主机</p></li><li><p>224.0.0.2 所有路由器</p></li><li><p>224.0.0.5 所有运行OSPF的路由器</p></li><li><p>224.0.0.6 DR和BDR的组播接收地址</p></li><li><p>224.0.0.9 RIPv2组播跟新地址</p></li><li><p>224.0.0.18 VRRP组播地址</p><bsp/></li></ul></li></ul><h2 id="2-特殊MAC地址"><a href="#2-特殊MAC地址" class="headerlink" title="2.特殊MAC地址"></a>2.特殊MAC地址</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/%E7%89%B9%E6%AE%8AMAC%E5%9C%B0%E5%9D%80.png" alt="特殊MAC地址"></p>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.计算机网络概述</title>
      <link href="/posts/13661.html"/>
      <url>/posts/13661.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-计算机网络基础概念"><a href="#Ⅰ-计算机网络基础概念" class="headerlink" title="Ⅰ - 计算机网络基础概念"></a>Ⅰ - 计算机网络基础概念</h1><ul><li><p>计算机网络是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件<strong>实现资源共享</strong>的系统。</p><bsp/></li><li><p>随着技术的进步和应用的相互渗透，<strong>电信网络、电视网络、计算机网络</strong>将逐步实现三网融合，走向统一（<strong>ICT</strong>）。</p><bsp/></li></ul><h1 id="Ⅱ-计算机网络物理组成"><a href="#Ⅱ-计算机网络物理组成" class="headerlink" title="Ⅱ - 计算机网络物理组成"></a>Ⅱ - 计算机网络物理组成</h1><ul><li><p>从物理结构上看，计算机网络包括<strong>硬件、软件、协议</strong>三大部分。</p></li><li><p>硬件：</p><p>计算机、服务器、打印机等终端，网卡、路由器、交换机、通信线路。</p></li><li><p>软件：</p><p>主要有实现资源共享的软件、方便用户使用的各种工具软件，如FTP。</p></li><li><p>协议：</p><p>由语法、语义和时序构成，语法规定传输数据的格式，语义规定要完成的功能，时序规定执行各种操作的条件、顺序关系等。如TCP、IP、ICMP协议。</p></li></ul><h1 id="Ⅲ-计算机网络功能组成"><a href="#Ⅲ-计算机网络功能组成" class="headerlink" title="Ⅲ - 计算机网络功能组成"></a>Ⅲ - 计算机网络功能组成</h1><ul><li><p>通信子网：</p><p>通信节点（集线器、交换机、路由器等）和通信链路（电话线、同轴电缆、无线电路、卫星线路、微波中继线路和光纤缆线）。</p></li><li><p>用户资源子网：</p><p>PC服务器等。</p></li></ul><h1 id="Ⅳ-计算机网络分类"><a href="#Ⅳ-计算机网络分类" class="headerlink" title="Ⅳ - 计算机网络分类"></a>Ⅳ - 计算机网络分类</h1><h2 id="1-网络拓扑结构"><a href="#1-网络拓扑结构" class="headerlink" title="1.网络拓扑结构"></a>1.网络拓扑结构</h2><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84.png" alt="网络拓扑结构"></p><h2 id="2-LAN-MAN-WAN"><a href="#2-LAN-MAN-WAN" class="headerlink" title="2.LAN MAN WAN"></a>2.LAN MAN WAN</h2><ul><li><p>按照覆盖范围可以把网络分为个域网（PAN）、局域网（LAN）、城域网（MAN）、广域网（WAN）。</p><bsp/></li></ul><table><thead><tr><th align="center">分类</th><th align="center">局域网</th><th align="center">城域网</th><th align="center">广域网</th></tr></thead><tbody><tr><td align="center">地理范围</td><td align="center">室内，园区内部</td><td align="center">建筑物之间</td><td align="center">国内，国际</td></tr><tr><td align="center">所有者和运营者</td><td align="center">单位所有和运营</td><td align="center">几个单位共有或公用</td><td align="center">通信运营商公司所有</td></tr><tr><td align="center">互联和通信方式</td><td align="center">共享介质，分组传播</td><td align="center">共享介质，分组传播</td><td align="center">共享介质，分组交换</td></tr><tr><td align="center">数据速率</td><td align="center">每秒几十兆<br/>至每秒几百兆</td><td align="center">每秒几兆位<br/>至每秒几十兆位</td><td align="center">每秒几十千位</td></tr><tr><td align="center">误码率</td><td align="center">最小</td><td align="center">中</td><td align="center">较大</td></tr><tr><td align="center">拓扑结构</td><td align="center">规则结构：总线型、星型、环形</td><td align="center">规则结构：总线型、星型、环形</td><td align="center">不规则的网状结构</td></tr><tr><td align="center">主要应用</td><td align="center">分布式数据处理<br/>办公自动化</td><td align="center">LAN互联，综合语音、视频和数据业务</td><td align="center">远程数据传输</td></tr></tbody></table><h2 id="3-其他分类方式"><a href="#3-其他分类方式" class="headerlink" title="3.其他分类方式"></a>3.其他分类方式</h2><ul><li><p>按照交换技术：</p><p>电路交换网络、报文交换网络和分组交换网络</p><p><img src="/../images/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E8%AE%BE%E8%AE%A1%E5%B8%88-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/%E4%BA%A4%E6%8D%A2%E6%96%B9%E5%BC%8F%E5%88%86%E7%B1%BB.png" alt="交换方式分类"></p></li><li><p>按采用协议分类：</p><p>IP网、IPX网等。</p></li><li><p>按传输介质分类：</p><p>无线网和有线网，有线网又能分为双绞线网络、同轴电缆网络、光纤网络。</p></li><li><p>按用途分类：</p><p>教育网络、科研网络、商业网络、企业网络。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络规划设计师 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络规划设计师 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除git所有提交记录</title>
      <link href="/posts/10255.html"/>
      <url>/posts/10255.html</url>
      
        <content type="html"><![CDATA[<h2 id="删除Git所有提交记录"><a href="#删除Git所有提交记录" class="headerlink" title="删除Git所有提交记录"></a>删除Git所有提交记录</h2><p>1、切换一个新的分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --orphan new_branch;</span><br></pre></td></tr></table></figure><p>2、添加所有到new_branch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br></pre></td></tr></table></figure><p>3、提交新建分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am <span class="string">&quot;commit a new branch&quot;</span></span><br></pre></td></tr></table></figure><p>4、删除旧分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -D master</span><br></pre></td></tr></table></figure><p>5、重命名新分支为master</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout new_branch</span><br><span class="line">git branch -m master</span><br></pre></td></tr></table></figure><p>8、强制推送到仓库中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.OSPF基础介绍</title>
      <link href="/posts/6888.html"/>
      <url>/posts/6888.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>·</strong>  路由器根据路由表转发数据包，路由表项可通过手动配置和动态路由协议生成。</p><p><strong>·</strong>  静态路由比动态路由使用更少的贷款，并且不占用CPU资源来计算和分析路由更新。当网络结构比较简单时，只需配置静态路由就可以使网络正常工作。但是当网络发生故障或者拓扑发生变化后，静态路由不会自动更新，必须手动重新配置。</p><p><strong>·</strong>  相比较于静态路由，动态路由协议具有更强的可扩展性，具备更强的应变能力。</p><p><strong>·</strong>  OSPF（Open Shortest Path First，开放式最短路径优先）具有扩展性强，收敛速度快等特点，作为优秀的内部网关协议被广泛使用。</p><br><h1 id="Ⅰ-动态路由协议简介"><a href="#Ⅰ-动态路由协议简介" class="headerlink" title="Ⅰ - 动态路由协议简介"></a>Ⅰ - 动态路由协议简介</h1><h2 id="1-动态路由协议的分类"><a href="#1-动态路由协议的分类" class="headerlink" title="1.动态路由协议的分类"></a>1.动态路由协议的分类</h2><p>按工作区域分类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IGP（Interior Gateway Protocols，内部网关协议）：</span><br><span class="line">· RIP</span><br><span class="line">· OSPF</span><br><span class="line">· IS-IS</span><br><span class="line"></span><br><span class="line">EGP（Exterior Gateway Protocols，外部网关协议）&#123;</span><br><span class="line">· BGP</span><br></pre></td></tr></table></figure><p>按工作机制及算法分类：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（Distance Vector Routing Protocols，距离矢量路由协议）</span><br><span class="line">· RIP</span><br><span class="line"></span><br><span class="line">（Link-State Routing Protocols，链路状态路由协议）</span><br><span class="line">· OSPF</span><br><span class="line">· IS-IS</span><br></pre></td></tr></table></figure><p><strong>·</strong>  BGP使用一种基于距离矢量算法修改后的算法，该算法被称为路径矢量算法。因此在某些场合下，BGP也被成为路径矢量路由协议。</p><p><strong>·</strong>  IGP（内部网关协议）在同一个自治系统内交换路由信息，IGP的主要目的是发现和计算自治域内的路由信息。</p><p><strong>·</strong>  EGP（外部网关协议）主要用于AS（自治系统）之间的互联。</p> <br><h2 id="2-距离矢量路由协议"><a href="#2-距离矢量路由协议" class="headerlink" title="2.距离矢量路由协议"></a>2.距离矢量路由协议</h2><p><strong>·</strong>  运行距离矢量路由协议的路由器周期性地泛洪自己的路由表。通过路由地交互，每台路由器都从相邻地路由器学习到路由，并且加载进自己的路由表中，然后再通告给其他相邻路由器。</p><p><strong>·</strong>  对于网络中地所有路由器而言，路由器并不清楚网络的拓扑，只是简单地知道要去往某个目的地网段方向在哪里，开销有多大。</p><h2 id="3-链路状态路由协议-LSA泛洪"><a href="#3-链路状态路由协议-LSA泛洪" class="headerlink" title="3.链路状态路由协议 - LSA泛洪"></a>3.链路状态路由协议 - LSA泛洪</h2><p><strong>·</strong>  链路状态路由协议通告的是链路状态而不是路由信息。</p><p><strong>·</strong>  运行链路状态协议的路由器之间首先会建立邻居关系，然后彼此之间开始交换LSA（Link State Advertisement，链路状态通告）。</p><p><strong>·</strong>  链路状态通告，可以简单的理解为每台路由器都产生一个描述自己的直连接口状态（包括接口的开销、与邻居路由器之间的关系等）的通告。</p><br><h2 id="4-链路状态路由协议-LSDB维护"><a href="#4-链路状态路由协议-LSDB维护" class="headerlink" title="4.链路状态路由协议 - LSDB维护"></a>4.链路状态路由协议 - LSDB维护</h2><p>每台路由器都会产生LSA，路由器将接收到的LSA放入自己的LSDB（Link State DataBase，链路状态数据库）。路由器通过对LSDB中所储存的LSA进行解析，进而了解全网拓扑。</p><br><h2 id="5-链路状态路由协议-SPF计算"><a href="#5-链路状态路由协议-SPF计算" class="headerlink" title="5.链路状态路由协议 - SPF计算"></a>5.链路状态路由协议 - SPF计算</h2><p>每台路由器基于LSDB，使用SPF（Shortest Path First，最短路径优先）算法进行计算。每台路由器都计算出一棵以自己为根的、无环的、拥有最短路径的“树”。有了这颗“树”，路由器就已经知道了到达所有网段的优选路径。SPF是OSPF路由协议的一个核心算法，用来再一个复杂的网络中做出路由优选的决策。</p><br><h2 id="6-链路状态路由协议-路由表生成"><a href="#6-链路状态路由协议-路由表生成" class="headerlink" title="6.链路状态路由协议 - 路由表生成"></a>6.链路状态路由协议 - 路由表生成</h2><p>路由器将计算出来的优选路径，加载进自己的路由表。</p><br><h2 id="7-链路状态路由协议总结"><a href="#7-链路状态路由协议总结" class="headerlink" title="7.链路状态路由协议总结"></a>7.链路状态路由协议总结</h2><p><img src="/../images/HCIP-datacom-3%E3%80%81OSPF%E5%9F%BA%E7%A1%80/%E6%80%BB%E7%BB%93.PNG" alt="总结"></p><p>第一步：建立相邻路由器之间的邻居关系。</p><p>第二步：邻居之间交互链路状态信息和同步LSDB</p><p>第三步：是进行优选路径计算</p><p>第四步：根据最短路径树生成路由表项加载到路由表</p>]]></content>
      
      
      <categories>
          
          <category> HCIP-datacom </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIP-datacom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.IP路由基础</title>
      <link href="/posts/21314.html"/>
      <url>/posts/21314.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>·</strong> 当路由器收到一个IP数据包，路由器会根据数据包的目的IP地址查找FIB（Forwarding Information Base，转发信息库）表，找到“最匹配”的路由条目后，将数据包根据路由条目所指示的出接口或下一跳转发出去。</p><br><p><strong>·</strong> 路由器获取路由的方式有三种，分别是动态路由、静态路由、直连路由。一个网络中可能会同时存在这三种方式，那么采用不同方式获取路由的路由器之间如何实现路由可达？</p><br><h1 id="Ⅰ-IP路由基础"><a href="#Ⅰ-IP路由基础" class="headerlink" title="Ⅰ - IP路由基础"></a>Ⅰ - IP路由基础</h1><h2 id="1-IP路由概述"><a href="#1-IP路由概述" class="headerlink" title="1.IP路由概述"></a>1.IP路由概述</h2><p>当路由器收到一个IP报文时，路由器根据该IP报文的目的地址匹配路由条目（或路由表项）。</p><p><strong>·</strong>  若有匹配的路由条目，则依据该条目中的出接口或下一跳等信息进行报文转发。</p><p><strong>·</strong>  若无匹配的路由条目，则路由器没有相关路由信息用于指导报文转发，此时会丢弃该报文。</p><br><h2 id="2-RIP与FIB"><a href="#2-RIP与FIB" class="headerlink" title="2.RIP与FIB"></a>2.RIP与FIB</h2><p>具有<strong>路由</strong>功能的网络设备都拥有两中国重要的数据表：</p><p><strong>·</strong>  路由表——RIB（Routing Information Base，路由信息库）</p><p><strong>·</strong>  转发表——FIB（Forwarding Information Base，转发信息库）</p><p><strong>·</strong>  路由器维护一张本地核心路由表，此外还维护着各种路由协议的路由表</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display ip routing-table   <span class="comment">//路由表</span></span><br></pre></td></tr></table></figure><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8.PNG" alt="路由表"></p><p>可以将路由表视为路由器的控制平面，路由表实际上并不直接指导数据转发。路由器在执行路由表查询时，并不是在路由表中进行报文目的地址的查询，真正指导数据转发的时FIB表，路由器将路由表中的最优路由下载到FIB表，此后如果路由表中的相关表项发生变化，FIB表也将立即同步。 在大多数场合，阐述路由器数据转发过程时，会用<strong>“路由表”</strong>这个说法，实际上，路由器查询的时FIB表，路由表位于控制层面仅提供路由信息。</p><br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">display fib [ slot-id ]   <span class="comment">//转发表（FIB表）[ slot-id ]：显示指定槽位号的FIB表信息，取值范围根据实际配置选取</span></span><br></pre></td></tr></table></figure><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%BD%AC%E5%8F%91%E8%A1%A8.PNG" alt="转发表"></p><p> FIB表位于路由器的数据平面，亦被称为转发表项，每条转发表项都指定要到达某个目的地所需通过的出接口以及下一跳IP地址等信息。</p><br><h2 id="3-路由表中的关键字段"><a href="#3-路由表中的关键字段" class="headerlink" title="3.路由表中的关键字段"></a>3.路由表中的关键字段</h2><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG" alt="路由表中的关键字段"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Destination   <span class="comment">//表示此路由的目的地址，用来标识IP包的目的地址或目的网络</span></span><br><span class="line">Mask   <span class="comment">//表示此目的地址的子网掩码长度。与目的地址一起来标识目的主机或路由器所在的网段的地址。</span></span><br><span class="line">Proto   <span class="comment">//表示学习此路由的路由协议（Protocol）</span></span><br><span class="line">Pre   <span class="comment">//表示此路由的路由协议优先级（Prefrence）</span></span><br><span class="line">Cost   <span class="comment">//路由开销</span></span><br><span class="line">NextHop   <span class="comment">//表示转发到此目的网络的下一跳，指明数据转发的下一个设备。</span></span><br><span class="line">Interface   <span class="comment">//表示转发到此目的网络的出接口，指明数据将从本地路由器哪个接口转发出去。</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p><strong>·</strong>  路由器分别定义了外部优先级和内部优先级。外部优先级可手动配置，反之内部优先级不可手动修改。</p><p><strong>·</strong>  选择路由时先比较外部优先级，当不同的路由协议配置了相同的外部优先级时，系统会通过内部优先级决定哪个路由协议发现的路由将成为最优路由。</p><p><strong>·</strong>  <code>Preference</code>用于不同路由协议间路由优先级的比较，<code>Cost</code>用于同一种路由协议内部不同路由的优先级的比较。</p><br><h2 id="4-FIB表中的关键字段"><a href="#4-FIB表中的关键字段" class="headerlink" title="4.FIB表中的关键字段"></a>4.FIB表中的关键字段</h2><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/FIB%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97%E6%AE%B5.PNG" alt="FIB表中的关键字段"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Titak number of Routes   <span class="comment">//路由表总数</span></span><br><span class="line">Destination/Mask   <span class="comment">//目的地址/掩码长度</span></span><br><span class="line">Nexthop   <span class="comment">//下一跳</span></span><br><span class="line">Flag   <span class="comment">//当前标志，G、H、U、S、D、B的组合</span></span><br><span class="line">   G   <span class="comment">// [ Gateway ] 网关路由，表示下一跳是网关</span></span><br><span class="line">   H   <span class="comment">// [ Host ] 主机路由，表示该路由为主机路由</span></span><br><span class="line">   U   <span class="comment">// [ Up ] 可用路由，表示该路由状态时UP</span></span><br><span class="line">   S   <span class="comment">// [ Static ] 静态路由</span></span><br><span class="line">   D   <span class="comment">// [ Dynamic ] 动态路由</span></span><br><span class="line">   B   <span class="comment">// [ Black Hole ] 黑洞路由，表示下一跳是空接口</span></span><br><span class="line">TimeStamp   <span class="comment">//时间戳，表示该表项存在的时间，单位是秒</span></span><br><span class="line">Interface   <span class="comment">//到目的地址的出接口</span></span><br><span class="line">TunnelID   <span class="comment">//表示转发表项索引，该值不为0时，表示该项的报文通过隧道转发（如：MPLS隧道转发），该值为0时，表示报文不通过隧道转发。</span></span><br></pre></td></tr></table></figure><br><h2 id="5-IP路由查找的最长匹配原则"><a href="#5-IP路由查找的最长匹配原则" class="headerlink" title="5.IP路由查找的最长匹配原则"></a>5.IP路由查找的最长匹配原则</h2><p><strong>·</strong>  路由器查找FIB表时，将报文的目的IP地址和FIB表中各表项的掩码位进行<strong>“逻辑与”</strong>，得到的地址符合FIB表中的网络地址则匹配。</p><p><strong>·</strong>  最终选择一个掩码最长的FIB表转发报文。</p><br><h2 id="6-路由的来源"><a href="#6-路由的来源" class="headerlink" title="6.路由的来源"></a>6.路由的来源</h2><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E7%9A%84%E6%9D%A5%E6%BA%90.PNG" alt="路由的来源"></p><p><strong>·</strong>  直连路由：直连接口所在网段的路由，由设备自动生成。</p><p><strong>·</strong>  静态路由：由网络管理员手工配置的路由条目。</p><p><strong>·</strong>  路由器通过动态路由协议（OSPF、IS-IS、BGP等）学习到的路由。</p><br><h2 id="7-动态路由协议"><a href="#7-动态路由协议" class="headerlink" title="7.动态路由协议"></a>7.动态路由协议</h2><p>动态路由协议根据作用范围不同可分为：</p><p><strong>·</strong>  内部网关协议IGP（Internal Gateway Protocol）：在一个自治系统<code>AS</code>内部运行</p><p><strong>·</strong>  外部网关协议EGP（Exterior Gateway Protocol）：运行于不同自治系统之间，BGP时目前最常用的EGP协议。</p><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE.PNG" alt="动态路由协议"></p><br><h2 id="8-路由迭代"><a href="#8-路由迭代" class="headerlink" title="8.路由迭代"></a>8.路由迭代</h2><p>路由必须有智联的下一跳才能够转发，静态路由或BGP路由的下一跳可能不是直连的邻居，因此需要计算出一个直连的下一跳，这个过程称为路由迭代。</p><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E8%BF%AD%E4%BB%A3.PNG" alt="路由迭代"></p><br><h1 id="Ⅱ-IP路由高级应用"><a href="#Ⅱ-IP路由高级应用" class="headerlink" title="Ⅱ - IP路由高级应用"></a>Ⅱ - IP路由高级应用</h1><h2 id="9-路由引入"><a href="#9-路由引入" class="headerlink" title="9.路由引入"></a>9.路由引入</h2><p>路由引入是指将路由信息从一种路由协议发布到另一种路由协议的操作。</p><p><strong>·</strong>  通过路由引入，可以实现路由信息在不同路由协议间传递。</p><p><strong>·</strong>  执行路由引入时，还可以部署路由控制，从而实现对业务流量的灵活把控。</p><p><strong>·</strong>  在路由引入时，如果将A协议路由引入到B协议路由，那么要在B协议路由中进行引入配置</p><p><strong>·</strong>  在路由引入时需注意：</p><p>1、路由的优先级</p><p>2、路由回灌</p><p>3、路由度量值</p><p>命令：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Huawei-ospf-100</span>] import-route &#123;bgp | direct | <span class="keyword">static</span> | isis [ process-id-isis ] | ospf [ process-id-ospf ]&#125;</span><br><span class="line"><span class="comment">//在OSPF视图下，引入BGP/直连/静态/IS-IS/OSPF其他进程路由。</span></span><br></pre></td></tr></table></figure><h2 id="10-路由优先级"><a href="#10-路由优先级" class="headerlink" title="10.路由优先级"></a>10.路由优先级</h2><p>华为定义的路由优先级：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Direct：<span class="number">0</span></span><br><span class="line">OSPF：<span class="number">10</span></span><br><span class="line">IS-IS：<span class="number">15</span></span><br><span class="line">Static：<span class="number">60</span></span><br><span class="line">OSPF ASE：<span class="number">150</span></span><br><span class="line">OSPF NSSA：<span class="number">150</span></span><br><span class="line">IBGP：<span class="number">255</span></span><br><span class="line">EBGP：<span class="number">255</span></span><br><span class="line"><span class="comment">//不同厂商定义的优先级可能不同</span></span><br></pre></td></tr></table></figure><h2 id="11-路由回灌"><a href="#11-路由回灌" class="headerlink" title="11.路由回灌"></a>11.路由回灌</h2><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%9B%9E%E7%81%8C.PNG" alt="路由回灌"></p><p><strong>·</strong>  R1将直连路由10.1.1.0&#x2F;24引入到OSPF中。</p><p><strong>·</strong>  10.1.1.0&#x2F;24网段路由全OSPF域内通告。</p><p><strong>·</strong>  R2在IS-IS进程中引入OSPF路由。</p><p><strong>·</strong>  10.1.1.0&#x2F;24网段路由全IS-IS域内通告。</p><p><strong>·</strong>  R3在OSPF进程中引入IS-IS路由。</p><p><strong>·</strong>  10.1.1.0&#x2F;24网段路由再次被通告进OSPF域内，形成路由回灌。</p><h2 id="12-路由度量值"><a href="#12-路由度量值" class="headerlink" title="12.路由度量值"></a>12.路由度量值</h2><p><img src="/../images/HCIP-datacom-2%E3%80%81IP%E8%B7%AF%E7%94%B1%E5%9F%BA%E7%A1%80/%E8%B7%AF%E7%94%B1%E5%BA%A6%E9%87%8F%E5%80%BC.PNG" alt="路由度量值"></p><p><strong>·</strong>  不同的路由协议对路由度量值的定义不同，在引入时要考虑到度量值的定义。</p>]]></content>
      
      
      <categories>
          
          <category> HCIP-datacom </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIP-datacom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.认识网络设备</title>
      <link href="/posts/58618.html"/>
      <url>/posts/58618.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ⅰ-网络设备框架"><a href="#Ⅰ-网络设备框架" class="headerlink" title="Ⅰ- 网络设备框架"></a>Ⅰ- 网络设备框架</h1><h2 id="1-框式设备硬件模块"><a href="#1-框式设备硬件模块" class="headerlink" title="1.框式设备硬件模块"></a>1.框式设备硬件模块</h2><p>为了方便理解网络设备内部的各个功能模块以S12700E-8为例来讲解典型网络设备框架：</p><p>如下图所示：<br>1 - 主控板（MPU，Main Processing Unit）：<br>负责整个系统的控制平面和管理平面。</p><p>2 - 交换网板（SFU，Switch Fabric Unit）：<br>负责整个系统的数据平面。数据面提供高速无阻塞数据通道，实现各个业务模块之间的业务交换功能。交换网板，接口板上都有自己的管理芯片，与主控板共同组成整个设备的管理控制平面。</p><p>3 - 接口板（LPU，Line Processing Unit）：<br>线路处理单元是物理设备上用提供数据转发功能的模块，提供不同速率的光口、电口。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/S12700E-8.PNG" alt="S12700E-8"></p><h4 id="1-1-主控板"><a href="#1-1-主控板" class="headerlink" title="1.1.主控板"></a>1.1.主控板</h4><p>提供了整个系统的控制平面和管理平面：</p><p>1 - 控制平面完成系统的协议处理、业务处理、路由计算、转发控制、业务调度、流量统计、系统安全等功能。</p><p>2 - 管理平面完成系统的运行状态监控、环境监控、日志和告警信息处理、系统加载、系统升级等功能。</p><h4 id="1-2-交换网板"><a href="#1-2-交换网板" class="headerlink" title="1.2.交换网板"></a>1.2.交换网板</h4><p>交换网板提供整个系统的数据平面。</p><p>接口板、主控板之间通过交换网板完成通信。</p><h4 id="1-3-接口板"><a href="#1-3-接口板" class="headerlink" title="1.3.接口板"></a>1.3.接口板</h4><p>接口板提供了不同类型（光口、电口），不同速率的接入接口，通过分布式数据平面对数据进行转发</p><br><h2 id="2-盒式设备硬件模块"><a href="#2-盒式设备硬件模块" class="headerlink" title="2.盒式设备硬件模块"></a>2.盒式设备硬件模块</h2><p>不同于框式设备，盒式设备的各个业务模块并不是独立的硬件模块，而是集成在一个框内。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%92%E5%BC%8F%E8%AE%BE%E5%A4%87.PNG" alt="盒式设备"></p><br><h2 id="3-模块连接逻辑图"><a href="#3-模块连接逻辑图" class="headerlink" title="3.模块连接逻辑图"></a>3.模块连接逻辑图</h2><p>1 - 框式设备各个模块分为不同的单板，单板之间通过框式设备内部的连接进行通信。</p><p>2 - 盒式设备内部集成了这些模块，各个模块之间同样也是通过内部连接进行通信。</p><p>3 - 接口板和接口板之间通过交换网板连接了起来，接口板之间的通信统一经由交换网板进行转发。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E9%80%BB%E8%BE%91%E5%9B%BE.PNG" alt="模块连接逻辑图"></p><br><h2 id="4-网络设备逻辑构架"><a href="#4-网络设备逻辑构架" class="headerlink" title="4.网络设备逻辑构架"></a>4.网络设备逻辑构架</h2><p>网络设备从逻辑上可以分为以下三个平面：</p><p>数据平面、控制管理平面和监控平面。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%80%BB%E8%BE%91%E6%9E%84%E6%9E%B6.PNG" alt="网络设备逻辑构架"></p><br><h2 id="5-控制平面"><a href="#5-控制平面" class="headerlink" title="5.控制平面"></a>5.控制平面</h2><p>1 - 设备的控制平面由主控板以及接口板的管理单元组成。</p><p>2 - 控制管理平面完成系统的控制管理功能，是整个系统的中枢神经系统。</p><p>3 - 控制平面完成系统的协议处理、业务处理、路由运算、转发控制、业务调度、流量统计、系统安全等功能。</p><p>4 - 交换机的控制平面用于控制和管理所有网络协议的运行。</p><p>5 - 控制平面提供了数据平面数据处理转发前所必须的各种网络信息和转发查询表项。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E6%8E%A7%E5%88%B6%E5%B9%B3%E9%9D%A2.PNG" alt="控制平面"></p><br><h2 id="6-转发平面"><a href="#6-转发平面" class="headerlink" title="6.转发平面"></a>6.转发平面</h2><p>1 - 设备的转发平面由交换网板及接口组成</p><p>2 - LPU上存在PEE（转发引擎），其本质也是一个交换芯片，完成本接口板端口之间的交换。</p><p>3 - 数据平面完成数据报文的高速处理和内部无阻塞交换。包括报文的封装与解封装、IPv4&#x2F;IPv6&#x2F;MPLS转发处理、QoS与调度处理、内部高速交换以及各种统计。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E5%B9%B3%E9%9D%A2.PNG" alt="转发平面"></p><h2 id="7-监控平面"><a href="#7-监控平面" class="headerlink" title="7.监控平面"></a>7.监控平面</h2><p>1 - 监控平面由主控板、接口板的监控单元构成，部分框式设备还会存在单独的集中监控板（CMU）。</p><p>2 - 监控平面独立完成系统的环境监控，包括电压检测、系统上下电控制、温度监测与风扇控制等、以保证系统的安全稳定运行，在出现单元故障的情况下及时隔离故障，保障系统其他部分的正常运行。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%9B%91%E6%8E%A7%E5%B9%B3%E9%9D%A2.PNG" alt="监控平面"><br><br></p><h1 id="Ⅱ-网络设备对报文的处理流程"><a href="#Ⅱ-网络设备对报文的处理流程" class="headerlink" title="Ⅱ - 网络设备对报文的处理流程"></a>Ⅱ - 网络设备对报文的处理流程</h1><h2 id="1-报文转发上行、下行"><a href="#1-报文转发上行、下行" class="headerlink" title="1.报文转发上行、下行"></a>1.报文转发上行、下行</h2><p>以交换网板为中心，可将报文在设备的行程一分为二，前半程为“上行”，下半程为“下行”。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E6%8A%A5%E6%96%87%E4%B8%8A%E8%A1%8C%E3%80%81%E4%B8%8B%E8%A1%8C.PNG" alt="转发报文上行、下行"></p><p>1 - 设备处理报文分类：一种是业务报文，一种是协议报文。</p><p>2 - 对于业务报文设备只会进行转发，从一个接口进入之后依据转发表项从另外一个接口发送出去。</p><p>3 - 协议报文（如ARP、OSPF、BGP等协议的报文）设备在收到之后会交由控制层面进行处理，如ARP报文交由控制层面处理、判断之后决定是否回应，是否学习ARP报文中的源MAC、源IP。</p><br><h2 id="2-业务报文转发处理流程"><a href="#2-业务报文转发处理流程" class="headerlink" title="2.业务报文转发处理流程"></a>2.业务报文转发处理流程</h2><p>业务报文从接口进入上行接口板处理之后，通过框式交换机内部总线交由交换网板，交换网板交由下行接口板处理之后从接口发出去。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E4%B8%9A%E5%8A%A1%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG" alt="业务报文转发处理流程"></p><p>1 - PFE（Packet Forwarding Engine）：包转发引擎。</p><p>2 - 业务报文：服务、应用在交互过程中涉及的报文。</p><p>3 - 切片：把报文送往交换网板之前，进行切片处理，也就是把报文按一定粒度进行切片，切成固定长度</p><p>4 - 重组：将交换网板发送过来的已经切片的报文进行重新组合</p><br><h2 id="3-确定报文出口（1）"><a href="#3-确定报文出口（1）" class="headerlink" title="3.确定报文出口（1）"></a>3.确定报文出口（1）</h2><p>1 - 当报文从接口板进入时，设备需要依据转发表项（IP路由表、MAC地址表等）确定报文的出接口（对于框式设备需要确定下行接口板）。</p><p>2 - 报文到达交换网板时已经明确了出接口、下行接口板，因此表项查询需要在上行接口板的处理过程中完成。</p><p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%881%EF%BC%89.PNG" alt="确定报文出口（1）"></p><br><h2 id="4-确定报文出口（2）"><a href="#4-确定报文出口（2）" class="headerlink" title="4.确定报文出口（2）"></a>4.确定报文出口（2）</h2><p>1 - 转发表项存放在主控板上，报文进入接口板之后，接口板从主控板处查询表项。</p><p>2 - 每次转发都需要与主控板进行通信，转发效率低，报文时延增加，对高速率接口板而言转发速率严重下跌。</p><p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表</p><br><h2 id="5-确定报文出口（3）"><a href="#5-确定报文出口（3）" class="headerlink" title="5.确定报文出口（3）"></a>5.确定报文出口（3）</h2><p>1 - 转发表项存放在接口板上，报文进入接口板之后直接在接口板完成报文查询，报文转发效率高。</p><p>2 - 所有接口板上都要存储转发表项，控制平面资源占用率高。</p><p>3 - 二层转发查询MAC地址表，三层转发查询三层路由表。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E7%A1%AE%E5%AE%9A%E6%8A%A5%E6%96%87%E5%87%BA%E5%8F%A3%EF%BC%883%EF%BC%89.PNG" alt="确定报文出口（3）"></p><br><h2 id="6-转发信息"><a href="#6-转发信息" class="headerlink" title="6.转发信息"></a>6.转发信息</h2><p>1 - 高端设备业务报文不经过主控板CPU处理，由接口板提供转发信息查询。</p><p>2 - 接口板上存在的转发信息并非存在于主控板上的转发表项（IP路由表、MAC地址表…）。主控板生成转发表项之后，生成对应的转发信息下发在接口板。 </p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG" alt="转发信息"></p><p>以IP路由表为例，路由表生成之后，主控板根据路由表生成FIP表项（Forwarding Information Base）并下发到接口板，接口板根据FIB表进行转发。</p><br><h2 id="7-硬件转发"><a href="#7-硬件转发" class="headerlink" title="7.硬件转发"></a>7.硬件转发</h2><p>1 - 接口板执行转发的不见为包转发引擎PFE（Packet Forwarding Engine），通常为NP或者ASIC芯片，报文直接由接口板独立完成转发，无需主控板参与。</p><p>2 - 高端框式设备把转发层面和控制层面分配在不同的组件，控制层面组件（主控板）负责运行转发相关协议、维护转发表项，转发平面组件（接口板）依据控制层面下发的转发信息能供独立完成转发工作，互不影响，控制层面组件高负载时并不会影响转发平面的正常工作，这种工作机制被成为转控分离。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%BD%AC%E5%8F%91%E4%BF%A1%E6%81%AF.PNG" alt="转发信息"></p><p>业务报文转发由接口板、交换网板独立完成，无主控板参与。</p><br><h2 id="8-协议报文转发处理流程"><a href="#8-协议报文转发处理流程" class="headerlink" title="8.协议报文转发处理流程"></a>8.协议报文转发处理流程</h2><p>设备收到的协议报文，如路由协议：<br>OSPF、IS-IS、BGP报文，ARP报文，STP报文，对设备的ICMP请求报文等，需要交由设备的控制平面处理，即上送主控板由主控板的CPU进行处理。</p><p>1 - 主控板CPU收到协议报文之后进行相应的处理之后如果需要回应报文，则主控板会构造协议报文进行回应，如收到发往自身的ARP Request、ICMP Echo Request报文，主控板处理之后构造ARP Reply、ICMP Echo Reply进行回应。</p><p>2 - 主控板CPU处理能力有限，如果过多的协议报文上送主控板CPU处理，会造成其繁忙，无法及时对协议报文进行响应，为此设备默认限制了各种类型的协议报文上送主控板CPU的速率。</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E8%BD%AC%E5%8F%91%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG" alt="协议报文转发处理流程"></p><br><h2 id="9-设备自身发送协议报文处理流程"><a href="#9-设备自身发送协议报文处理流程" class="headerlink" title="9.设备自身发送协议报文处理流程"></a>9.设备自身发送协议报文处理流程</h2><p>设备自身发送的协议报文，如路由协议报文：<br>OSPF、IS-IS、BGP报文，ARP报文，STP报文，ICMP报文等，由主控板CPU构造之后交由接口板对外发送</p><p><img src="/../images/HCIP-datacom-1%E3%80%81%E8%AE%A4%E8%AF%86%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/%E8%AE%BE%E5%A4%87%E8%87%AA%E8%BA%AB%E5%8F%91%E9%80%81%E5%8D%8F%E8%AE%AE%E6%8A%A5%E6%96%87%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B.PNG" alt="设备自身发送协议报文处理流程"></p>]]></content>
      
      
      <categories>
          
          <category> HCIP-datacom </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIP-datacom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.HCIP-datacom 学习路线规划</title>
      <link href="/posts/34640.html"/>
      <url>/posts/34640.html</url>
      
        <content type="html"><![CDATA[<br><table><thead><tr><th align="center"><strong>天数</strong></th><th align="center"><strong>学习内容</strong></th></tr></thead><tbody><tr><td align="center">第 1 天</td><td align="center">认识网络设备、IP路由基础、OSPF基础</td></tr><tr><td align="center">第 2 天</td><td align="center">OSPF区域内路由、区域间路由、外部路由、特殊区域</td></tr><tr><td align="center">第 3 天</td><td align="center">OSPF汇总特性、IS - IS原理介绍、邻接关系、DIS</td></tr><tr><td align="center">第 4 天</td><td align="center">IS - IS默认路由、引入过滤、排错、BGP基础</td></tr><tr><td align="center">第 5 天</td><td align="center">BGP路由、BGP路径属性、路由优选、RR联盟</td></tr><tr><td align="center">第 6 天</td><td align="center">BGP选路规则、MP-BGP、EVPN基础、路由控制与策略</td></tr><tr><td align="center">第 7 天</td><td align="center">流量过滤控制、STP选举、RSTP、P&#x2F;A机制</td></tr><tr><td align="center">第 8 天</td><td align="center">MSTP、堆叠集群、IP组播基础、IGMP协议</td></tr><tr><td align="center">第 9 天</td><td align="center">IGMP实验、PIM-DM、PM-SM、IPv6基础</td></tr><tr><td align="center">第 10 天</td><td align="center">ICMP NDP、IPv6地址配置、DHCPv6、防火墙概述</td></tr><tr><td align="center">第 11 天</td><td align="center">BFD、VRRP、网络协议管理、数通解决方案</td></tr><tr><td align="center">第 12 天</td><td align="center">DHCP、交换综合排错、OSPF快速收敛、IS - IS高级特性</td></tr><tr><td align="center">第 13 天</td><td align="center">MPLS原理、MPLS LDP、MPLS VPN原理、HCIP考核</td></tr><tr><td align="center">第 14 天</td><td align="center">BGP高级、IPv6、VLAN、以太网、网络运维</td></tr><tr><td align="center">第 15 天</td><td align="center">知识点梳理</td></tr><tr><td align="center">第 ··· 天</td><td align="center">-背题库-</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HCIP-datacom </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIP-datacom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题修改日记</title>
      <link href="/posts/3452.html"/>
      <url>/posts/3452.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-添加背景动画"><a href="#1-添加背景动画" class="headerlink" title="1.添加背景动画"></a>1.添加背景动画</h3><p>背景动画基于canvas，在<code>\themes\pure\layout\layout.ejs</code>中添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 背景动画 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,0,0&quot;</span> <span class="attr">opacity</span>=<span class="string">&#x27;0.8&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-2&quot;</span> <span class="attr">count</span>=<span class="string">&quot;88&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">  color: 线条颜色，默认：‘0，0，0’；三个数字分别为(R,G,B),注意使用，分割</span></span><br><span class="line"><span class="comment">  opacity: 线条透明度0~1,默认0.5</span></span><br><span class="line"><span class="comment">  count: 线条总数量，默认150</span></span><br><span class="line"><span class="comment">  zIndex: 背景的z-Index属性，css用于控制所在层的位置，默认-1 </span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-更改代码块样式"><a href="#2-更改代码块样式" class="headerlink" title="2.更改代码块样式"></a>2.更改代码块样式</h3><p>修改<code>.\themes\pure\source\css\style.css</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pre,</span><br><span class="line"><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#cfcbcb</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Consolas&quot;</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4d4d4c</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-添加代码块一键复制按钮-原文"><a href="#3-添加代码块一键复制按钮-原文" class="headerlink" title="3.添加代码块一键复制按钮[原文]"></a>3.添加代码块一键复制按钮[<a href="https://blog.iwwee.com/posts/hexo-optimize.html#%E4%B8%BA%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE">原文</a>]</h3><p>（1）、增加全局函数addLoadEvent  </p><p>在<code>/themes/pure/source/js</code>目录下打开<code>application.js</code>，在文件最后追加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">addLoadEvent</span>(<span class="params">func</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> oldonload = <span class="variable language_">window</span>.<span class="property">onload</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">window</span>.<span class="property">onload</span> != <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">onload</span> = func;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">oldonload</span>();</span><br><span class="line">            <span class="title function_">func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）、新增按钮</p><p>pure默认情况下是没有代码复制功能的，此时需要对hexo增加复制代码块功能。<br>首先在<code>/themes/pure/layout/_partial</code>目录下新增<code>article-copy-code.ejs</code>，增加以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(theme.codeblock.copy_button.enable)&#123; %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.copy-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">vertical-align</span>: middle;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">#fcfcfc</span>, <span class="number">#eee</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">      user-select: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span> <span class="selector-class">.copy-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">right</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">z-index</span>: <span class="number">2</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.copy-btn</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.highlight-wrap</span> <span class="selector-class">.copy-btn</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.highlight-wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">addLoadEvent</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">      $(<span class="string">&#x27;.highlight&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params">i, e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> $wrap = $(<span class="string">&#x27;&lt;div&gt;&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;highlight-wrap&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        $(e).<span class="title function_">after</span>($wrap)</span></span><br><span class="line"><span class="language-javascript">        $wrap.<span class="title function_">append</span>($(<span class="string">&#x27;&lt;button&gt;&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;copy-btn&#x27;</span>).<span class="title function_">append</span>(<span class="string">&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> code = $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">find</span>(<span class="string">&quot;.code&quot;</span>)[<span class="number">0</span>].<span class="property">innerText</span></span></span><br><span class="line"><span class="language-javascript">          &lt;% <span class="keyword">if</span>(theme.<span class="property">codeblock</span>.<span class="property">copyright</span>.<span class="property">enable</span>)&#123; %&gt;</span></span><br><span class="line"><span class="language-javascript">              code += <span class="string">&quot;&lt;%= theme.codeblock.copyright.content %&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">          &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> ta = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;textarea&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(ta)</span></span><br><span class="line"><span class="language-javascript">          ta.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;absolute&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          ta.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&#x27;0px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          ta.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&#x27;0px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          ta.<span class="property">value</span> = code</span></span><br><span class="line"><span class="language-javascript">          ta.<span class="title function_">select</span>()</span></span><br><span class="line"><span class="language-javascript">          ta.<span class="title function_">focus</span>()</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> result = <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(ta)</span></span><br><span class="line"><span class="language-javascript">          &lt;% <span class="keyword">if</span>(theme.<span class="property">codeblock</span>.<span class="property">copy_button</span>.<span class="property">result</span>)&#123; %&gt;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(result)$(<span class="variable language_">this</span>).<span class="title function_">text</span>(<span class="string">&#x27;&lt;%= __(&quot;codeblock.copy_success&quot;) %&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> $(<span class="variable language_">this</span>).<span class="title function_">text</span>(<span class="string">&#x27;&lt;%= __(&quot;codeblock.copy_failure&quot;) %&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="language-javascript">          $(<span class="variable language_">this</span>).<span class="title function_">blur</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;)).<span class="title function_">on</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> $b = $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&#x27;.copy-btn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $b.<span class="title function_">text</span>(<span class="string">&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          &#125;, <span class="number">300</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">append</span>(e)</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>（3）、插入到页面：<br>编辑<code>/themes/pure/layout/layout.ejs</code>，在<code>&lt;/body&gt;</code>前面一行增加:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  &lt;%- body %&gt;</span><br><span class="line">  &lt;%- partial(&#x27;_common/footer&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">  &lt;%- partial(&#x27;_common/script&#x27;, &#123;post: page&#125;) %&gt;</span><br><span class="line">  &lt;%- partial(&#x27;_partial/article-copy-code&#x27;) %&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（4）、增加语言文件：<br>在<code>/themes/pure/languages</code>目录下选择对应的语言文件，在文件后面增加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">copy_button:</span> <span class="string">复制</span></span><br><span class="line">  <span class="attr">copy_success:</span> <span class="string">复制成功</span></span><br><span class="line">  <span class="attr">copy_failure:</span> <span class="string">复制失败</span></span><br></pre></td></tr></table></figure><p>（5）、增加主题配置文件<br>打开<code>themes/pure/_config.yml</code>，在文件末尾添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span> </span><br><span class="line">  <span class="attr">copy_button:</span> </span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">result:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="4-代码块滚动条-原文"><a href="#4-代码块滚动条-原文" class="headerlink" title="4.代码块滚动条[原文]"></a>4.代码块滚动条[<a href="https://blog.iwwee.com/posts/hexo-optimize.html#%E4%B8%BA%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE">原文</a>]</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.highlight</span>::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="comment">/*滚动条整体样式*/</span></span><br><span class="line">  <span class="comment">/*高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="line">  <span class="comment">/*width: 10px;*/</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 代码块滚动条 */</span></span><br><span class="line"><span class="selector-class">.highlight</span>::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  <span class="comment">/*滚动条里面小方块*/</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="comment">/*background-color: #D62929;*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6f6969</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(<span class="number">168deg</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">100%</span>, <span class="comment">/*12.5*/</span></span><br><span class="line">      transparent <span class="number">12.5%</span>,</span><br><span class="line">      transparent <span class="number">25%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">25%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">37.5%</span>,</span><br><span class="line">      transparent <span class="number">37.5%</span>,</span><br><span class="line">      transparent <span class="number">50%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">50%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">62.5%</span>,</span><br><span class="line">      transparent <span class="number">62.5%</span>,</span><br><span class="line">      transparent <span class="number">75%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">75%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) <span class="number">87.5%</span>,</span><br><span class="line">      transparent <span class="number">87.5%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.highlight</span>::-webkit-scrollbar-track &#123;</span><br><span class="line">  <span class="comment">/*滚动条里面轨道*/</span></span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#0f111a</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-添加回到顶部-原文"><a href="#5-添加回到顶部-原文" class="headerlink" title="5.添加回到顶部 [ 原文 ]"></a>5.添加回到顶部 <a href="https://hwame.top/20200520/hello-hexo-troubleshooting.html">[ 原文 ]</a></h3><p>文件位置：<code>./themes/pure/layout/_common/script.ejs</code>，在合适位置添加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;go-top&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-id">#go-top</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">width</span>:<span class="number">40px</span>;<span class="attribute">height</span>:<span class="number">36px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">background-color</span>:<span class="number">#DDA0DD</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">position</span>:relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">border-radius</span>:<span class="number">2px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">10px</span>;<span class="attribute">bottom</span>:<span class="number">60px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">cursor</span>:pointer;<span class="attribute">display</span>:none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-id">#go-top</span><span class="selector-pseudo">:after</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">content</span>:<span class="string">&quot; &quot;</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">position</span>:absolute;<span class="attribute">left</span>:<span class="number">14px</span>;<span class="attribute">top</span>:<span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">border-top</span>:<span class="number">2px</span> solid <span class="number">#fff</span>;<span class="attribute">border-right</span>:<span class="number">2px</span> solid <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">width</span>:<span class="number">12px</span>;<span class="attribute">height</span>:<span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">transform</span>:<span class="built_in">rotate</span>(-<span class="number">45deg</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-id">#go-top</span><span class="selector-pseudo">:hover</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"> <span class="attribute">background-color</span>:<span class="number">#8A2BE2</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> top=$(<span class="string">&quot;#go-top&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  $(<span class="variable language_">window</span>).<span class="title function_">scroll</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ($(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>() &gt; <span class="number">300</span>) ? top.<span class="title function_">show</span>(<span class="number">300</span>) : top.<span class="title function_">hide</span>(<span class="number">200</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    $(<span class="string">&quot;#go-top&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      $(<span class="string">&#x27;body,html&#x27;</span>).<span class="title function_">animate</span>(&#123;<span class="attr">scrollTop</span>:<span class="number">0</span>&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="title function_">false</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="6-使文章图片居中-原文"><a href="#6-使文章图片居中-原文" class="headerlink" title="6.使文章图片居中[ 原文 ]"></a>6.使文章图片居中<a href="https://hwame.top/20200520/hello-hexo-troubleshooting.html">[ 原文 ]</a></h3><p>（1）、在<code>./themes/pure/source/css/style.css</code>下</p><p>（2）、125行<code>img</code>修改：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-添加鼠标点击特效"><a href="#7-添加鼠标点击特效" class="headerlink" title="7.添加鼠标点击特效"></a>7.添加鼠标点击特效</h3><p>（1）、在<code>/themes/pure/source/js/ </code>下新建文件<code>click-word.js</code>并输入如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params">$</span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span> ,<span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span /&gt;&quot;</span>).<span class="title function_">text</span>(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + <span class="number">1</span>) % a.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">var</span> x = e.<span class="property">pageX</span>,</span><br><span class="line">        y = e.<span class="property">pageY</span>;</span><br><span class="line">        $i.<span class="title function_">css</span>(&#123;</span><br><span class="line">            <span class="string">&quot;z-index&quot;</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span><br><span class="line">            <span class="string">&quot;left&quot;</span>: x,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">            <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff6651&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($i);</span><br><span class="line">        $i.<span class="title function_">animate</span>(&#123;</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line">            <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1500</span>,</span><br><span class="line">        <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            $i.<span class="title function_">remove</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>（2）、在<code>/themes/pure/layout/_layout.ejs</code>的<code>body</code>中添加如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击特效 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/click-word.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="8-使用hexo-abbrlink插件优化博客路径，让网址不会带有标题"><a href="#8-使用hexo-abbrlink插件优化博客路径，让网址不会带有标题" class="headerlink" title="8.使用hexo-abbrlink插件优化博客路径，让网址不会带有标题"></a>8.使用hexo-abbrlink插件优化博客路径，让网址不会带有标题</h3><p>（1）、安装abbrlink插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save </span><br></pre></td></tr></table></figure><p>（2）、_config.yml 中修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:year:month:day:hour:minute:second-:abbrlink.html</span>     <span class="comment"># 将原来文章的地址修改为这个</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 并添加如下配置：</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>        <span class="comment">#support dec(default) and hex</span></span><br><span class="line">  <span class="attr">drafts:</span> <span class="literal">false</span>   <span class="comment">#(true)Process draft,(false)Do not process draft. false(default) </span></span><br><span class="line">  <span class="comment"># Generate categories from directory-tree</span></span><br><span class="line">  <span class="comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line">  <span class="attr">auto_category:</span></span><br><span class="line">     <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#true(default)</span></span><br><span class="line">     <span class="attr">depth:</span>        <span class="comment">#3(default)</span></span><br><span class="line">     <span class="attr">over_write:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">auto_title:</span> <span class="literal">false</span> <span class="comment">#enable auto title, it can auto fill the title by path</span></span><br><span class="line">  <span class="attr">auto_date:</span> <span class="literal">false</span> <span class="comment">#enable auto date, it can auto fill the date by time today</span></span><br><span class="line">  <span class="attr">force:</span> <span class="literal">false</span> <span class="comment">#enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink. This only updates abbrlink rather than other front variables.</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pure README</title>
      <link href="/posts/47848.html"/>
      <url>/posts/47848.html</url>
      
        <content type="html"><![CDATA[<h2 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h2><ul><li>多语言</li><li>第三方评论框（友言、来必力、gitment、gitalk）</li><li>可展示个人豆瓣书单</li><li>可展示个人github托管项目</li><li>可设置支付宝、微信打赏</li></ul><h2 id="页面展示"><a href="#页面展示" class="headerlink" title="页面展示"></a>页面展示</h2><p><a href="http://cofess.github.io/">首页</a> | <a href="http://cofess.github.io/archives/">归档</a> | <a href="http://cofess.github.io/categories/">分类</a> | <a href="http://cofess.github.io/tags/">标签</a> | <a href="http://cofess.github.io/repository/">项目</a> | <a href="http://cofess.github.io/books/">书单</a> | <a href="http://cofess.github.io/links/">友链</a> | <a href="http://cofess.github.io/about/">关于</a></p><h2 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/pure</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="启用pure主题"><a href="#启用pure主题" class="headerlink" title="启用pure主题"></a>启用pure主题</h2><p>打开站点配置文件，找到theme字段，将其值更改为 pure</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: pure</span><br></pre></td></tr></table></figure><p>到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a><a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-json-content"><a href="#hexo-generator-json-content" class="headerlink" title="hexo-generator-json-content"></a><a href="https://github.com/alexbruno/hexo-generator-json-content">hexo-generator-json-content</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="hexo-generator-baidu-sitemap"><a href="#hexo-generator-baidu-sitemap" class="headerlink" title="hexo-generator-baidu-sitemap"></a><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">hexo-generator-baidu-sitemap</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\pure\languages目录下语言文件，简体中文配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure><h3 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config</span></span><br><span class="line"><span class="attr">config:</span></span><br><span class="line">  <span class="attr">skin:</span> <span class="comment"># 主题颜色 theme-black theme-blue theme-green theme-purple</span></span><br></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导航菜单</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">.</span> </span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">archives</span> <span class="comment"># 归档</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">categories</span> <span class="comment"># 分类</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">tags</span> <span class="comment"># 标签</span></span><br><span class="line">  <span class="attr">Repository:</span> <span class="string">repository</span> <span class="comment"># github repositories</span></span><br><span class="line">  <span class="attr">Books:</span> <span class="string">books</span>     <span class="comment"># 书单</span></span><br><span class="line">  <span class="attr">Links:</span> <span class="string">links</span> <span class="comment"># 友链</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">about</span> <span class="comment"># 关于</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导航菜单图标（font awesome）</span></span><br><span class="line"><span class="attr">menu_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启用菜单图标</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">icon-home-fill</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">icon-archives-fill</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">icon-folder</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">icon-tags</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">icon-project</span></span><br><span class="line">  <span class="attr">books:</span> <span class="string">icon-book-fill</span></span><br><span class="line">  <span class="attr">links:</span> <span class="string">icon-friendship</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">icon-cup-fill</span></span><br></pre></td></tr></table></figure><h3 id="设置个人信息"><a href="#设置个人信息" class="headerlink" title="设置个人信息"></a>设置个人信息</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">头像在themes\pure\source\images</span> <span class="string">目录下替换图片即可，捐献的二维码同理。</span></span><br><span class="line"></span><br><span class="line"><span class="string">个人信息大部分都在</span> <span class="string">主题配置文件</span> <span class="string">中设置</span></span><br></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">insight:</span> <span class="literal">true</span> <span class="comment"># you need to install `hexo-generator-json-content` before using Insight Search</span></span><br><span class="line">  <span class="attr">swiftype:</span> <span class="comment"># enter swiftype install key here</span></span><br><span class="line">  <span class="attr">baidu:</span> <span class="literal">false</span> <span class="comment"># you need to disable other search engines to use Baidu search</span></span><br></pre></td></tr></table></figure><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Share</span></span><br><span class="line"><span class="comment"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span></span><br><span class="line"><span class="attr">share:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否启用分享</span></span><br><span class="line">  <span class="attr">sites:</span> <span class="string">weibo,qq,wechat,facebook,twitter</span>  <span class="comment"># PC端显示的分享图标</span></span><br><span class="line">  <span class="attr">mobile_sites:</span> <span class="string">weibo,qq,qzone</span>  <span class="comment"># 移动端显示的分享图标</span></span><br></pre></td></tr></table></figure><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>主题集成了<a href="https://disqus.com/">disqus</a>、<a href="http://www.uyan.cc/">友言</a>、<a href="https://livere.com/">来必力</a>、<a href="https://github.com/imsun/gitment">gitment</a>、<a href="https://github.com/gitalk/gitalk">gitalk</a>评论系统，选择其中一种即可</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comment</span></span><br><span class="line"><span class="comment"># Gitment</span></span><br><span class="line"><span class="comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">livere</span> <span class="comment"># 启用哪种评论系统</span></span><br><span class="line">  <span class="attr">disqus:</span>  <span class="comment"># enter disqus shortname here</span></span><br><span class="line">  <span class="attr">youyan:</span> </span><br><span class="line">    <span class="attr">uid:</span> <span class="string">***</span> <span class="comment"># enter youyan uid </span></span><br><span class="line">  <span class="attr">livere:</span></span><br><span class="line">    <span class="attr">uid:</span> <span class="string">***</span> <span class="comment"># enter livere uid</span></span><br><span class="line">  <span class="attr">gitment:</span></span><br><span class="line">    <span class="attr">githubID:</span> <span class="string">username</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">username.github.io</span></span><br><span class="line">    <span class="attr">ClientID:</span> <span class="string">***</span></span><br><span class="line">    <span class="attr">ClientSecret:</span> <span class="string">***</span></span><br><span class="line">    <span class="attr">lazy:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="文章浏览量统计"><a href="#文章浏览量统计" class="headerlink" title="文章浏览量统计"></a>文章浏览量统计</h3><p>主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。</p><p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pv:</span></span><br><span class="line">  <span class="attr">busuanzi:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 不蒜子统计</span></span><br></pre></td></tr></table></figure><p>如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）</p><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p><p>新版配置（支持 Github 和 Gitee）：</p><p><em>新版配置将会覆盖旧版的 github 配置！</em></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Repository Info (This will override &#x27;github&#x27; option)</span></span><br><span class="line"><span class="comment"># 项目仓库展示信息（将会覆盖 github 项）</span></span><br><span class="line"><span class="attr">repository:</span></span><br><span class="line">  <span class="attr">platform:</span> <span class="string">github</span> <span class="comment"># 托管平台（github | gitee）</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">***</span> <span class="comment"># 用户名</span></span><br></pre></td></tr></table></figure><p>旧版配置（仅支持 Github）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Github</span></span><br><span class="line"><span class="attr">github:</span> </span><br><span class="line">  <span class="attr">username:</span> <span class="string">***</span>  <span class="comment"># github username</span></span><br></pre></td></tr></table></figure><h3 id="豆瓣书单"><a href="#豆瓣书单" class="headerlink" title="豆瓣书单"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># douban 豆瓣书单</span></span><br><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">***</span> <span class="comment"># 豆瓣用户名</span></span><br><span class="line">  <span class="attr">start:</span> <span class="number">0</span> <span class="comment"># 从哪一条记录开始</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">100</span> <span class="comment"># 获取豆瓣书单数据条数</span></span><br></pre></td></tr></table></figure><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p><p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p><p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p><p>单个友情链接的格式为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Name:</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">http://example.com</span></span><br><span class="line">    <span class="attr">avatar:</span> <span class="string">http://example.com/avatar.png</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">&quot;这是一个描述&quot;</span></span><br></pre></td></tr></table></figure><p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p><p>. 将 Name 改为友情链接的名字，例如 Cofess。</p><p>. <a href="http://example.com/">http://example.com</a> 为友情链接的地址。</p><p>. <a href="http://example.com/avatar.png">http://example.com/avatar.png</a> 为友情链接的头像。</p><p>. 这是一个描述 为友情链接描述。</p><h3 id="文章索引目录"><a href="#文章索引目录" class="headerlink" title="文章索引目录"></a>文章索引目录</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">文章标签</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span> <span class="comment"># 是否启用内容索引</span></span><br></pre></td></tr></table></figure><h3 id="sidebar侧边栏"><a href="#sidebar侧边栏" class="headerlink" title="sidebar侧边栏"></a>sidebar侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">文章标题</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">文章标签</span></span><br><span class="line"><span class="attr">sidebar:</span> <span class="string">none</span> <span class="comment"># 是否启用sidebar侧边栏，none：不启用</span></span><br></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a><a href="https://github.com/rozbo/hexo-neat">hexo-neat</a></h3><blockquote><p>auto Minify html、js、css and make it neat</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-neat</span></span><br><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span>  </span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.min.css&#x27;</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*.min.js&#x27;</span> </span><br></pre></td></tr></table></figure><h3 id="hexo-baidu-url-submit"><a href="#hexo-baidu-url-submit" class="headerlink" title="hexo-baidu-url-submit"></a><a href="https://github.com/huiwang/hexo-baidu-url-submit">hexo-baidu-url-submit</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><h3 id="hexo-translate-title"><a href="#hexo-translate-title" class="headerlink" title="hexo-translate-title"></a><a href="https://github.com/cometlj/hexo-translate-title">hexo-translate-title</a></h3><blockquote><p>使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题</p></blockquote><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-translate-title --save</span><br></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate_title:</span></span><br><span class="line">  <span class="attr">translate_way:</span> <span class="string">google</span>    <span class="comment">#google | baidu | youdao</span></span><br><span class="line">  <span class="attr">youdao_api_key:</span> <span class="string">XXX</span></span><br><span class="line">  <span class="attr">youdao_keyfrom:</span> <span class="string">XXX</span></span><br><span class="line">  <span class="attr">is_need_proxy:</span> <span class="literal">true</span>     <span class="comment">#true | false</span></span><br><span class="line">  <span class="attr">proxy_url:</span> <span class="string">http://localhost:8123</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为false。如果设置为true,请设置本地代理地址</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><blockquote><p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签</p></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p><p>更换Hexo的markdown渲染引擎，<a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>即可。</p><h3 id="安装hexo-renderer-markdown-it-plus插件"><a href="#安装hexo-renderer-markdown-it-plus插件" class="headerlink" title="安装hexo-renderer-markdown-it-plus插件"></a>安装hexo-renderer-markdown-it-plus插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it-plus --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown_it_plus:</span></span><br><span class="line">  <span class="attr">highlight:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">xhtmlOut:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">langPrefix:</span></span><br><span class="line">  <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">typographer:</span></span><br><span class="line">  <span class="attr">quotes:</span> <span class="string">“”‘’</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">plugin:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">markdown-it-katex</span></span><br><span class="line">        <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">plugin:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">markdown-it-mark</span></span><br><span class="line">        <span class="attr">enable:</span> <span class="literal">false</span>  </span><br></pre></td></tr></table></figure><h3 id="文章启用mathjax"><a href="#文章启用mathjax" class="headerlink" title="文章启用mathjax"></a>文章启用mathjax</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">mathjax: true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在PowerShell中使用title命令</title>
      <link href="/posts/57899.html"/>
      <url>/posts/57899.html</url>
      
        <content type="html"><![CDATA[<h4 id="在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令"><a href="#在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令" class="headerlink" title="在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令"></a>在Powershell中无法像在cmd内一样愉快的使用title命令来更改标题而是使用如下命令</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$host</span>.ui.RawUI.WindowTitle=<span class="string">&quot;自定义标题&quot;</span></span><br></pre></td></tr></table></figure><h4 id="使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用"><a href="#使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用" class="headerlink" title="使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用"></a>使用这条命令来更改属实是有点麻烦，很难记，所以我们使用alias来让title命令可以在Powershell内使用</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test-path</span> <span class="variable">$profile</span></span><br></pre></td></tr></table></figure><h4 id="如果返回值为false则执行如下命令"><a href="#如果返回值为false则执行如下命令" class="headerlink" title="如果返回值为false则执行如下命令"></a>如果返回值为false则执行如下命令</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-Item</span> <span class="literal">-path</span> <span class="variable">$profile</span> <span class="literal">-type</span> file <span class="literal">-force</span></span><br></pre></td></tr></table></figure><h4 id="如果返回值为true则执行如下命令"><a href="#如果返回值为true则执行如下命令" class="headerlink" title="如果返回值为true则执行如下命令"></a>如果返回值为true则执行如下命令</h4><p>注：在执行此命令前需要电脑内安装了Visual Studio Code</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code <span class="variable">$profile</span> </span><br></pre></td></tr></table></figure><h4 id="运行完之后会打开一个profile文件，在该文件内输入以下代码"><a href="#运行完之后会打开一个profile文件，在该文件内输入以下代码" class="headerlink" title="运行完之后会打开一个profile文件，在该文件内输入以下代码"></a>运行完之后会打开一个profile文件，在该文件内输入以下代码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Set-WindowTitle</span></span> &#123;</span><br><span class="line">    <span class="variable">$host</span>.UI.RawUI.WindowTitle = [<span class="built_in">string</span>]::Join(<span class="string">&quot; &quot;</span>, <span class="variable">$args</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Set-Alias</span> <span class="literal">-name</span> <span class="string">&quot;title&quot;</span> <span class="literal">-value</span> <span class="built_in">Set-WindowTitle</span></span><br></pre></td></tr></table></figure><h4 id="重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了"><a href="#重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了" class="headerlink" title="重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了"></a>重启Powershell可以发现我们在PowerShell内可以使用title命令改更改窗口标题了</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title A Minecraft Server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络工程（杂项） </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PowerShell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>捕光捉影</title>
      <link href="/posts/6a608fc0.html"/>
      <url>/posts/6a608fc0.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-布衣乐队现场"><a href="#1-布衣乐队现场" class="headerlink" title="1.布衣乐队现场"></a>1.布衣乐队现场</h2><p><img src="/../images/%E7%9B%B8%E5%86%8C/%E5%B8%83%E8%A1%A3%E4%B9%90%E9%98%9F%E7%8E%B0%E5%9C%BA.jpg" alt="布衣乐队现场"></p><h2 id="2-孤峰塔"><a href="#2-孤峰塔" class="headerlink" title="2.孤峰塔"></a>2.孤峰塔</h2><p><img src="/../images/%E7%9B%B8%E5%86%8C/%E5%AD%A4%E5%B3%B0%E5%A1%94.jpg" alt="孤峰塔"></p><h2 id="3-一血"><a href="#3-一血" class="headerlink" title="3.一血"></a>3.一血</h2><p><img src="/../images/%E7%9B%B8%E5%86%8C/%E4%B8%80%E8%A1%80.jpg" alt="一血"></p>]]></content>
      
      
      <categories>
          
          <category> 捕光捉影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 捕光捉影 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
